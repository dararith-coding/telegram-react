{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Channel.js","Utils/Supergroup.js","Components/Additional/MentionLink.js","Utils/Message.js","Assets/Icons/Close.js","Components/Message/Media/Call.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Venue.js","Components/Player/Steaming/Utils/Common.js","Components/Player/Steaming/Utils/Token.js","Components/Player/Steaming/MP3/ID3v1/ID3v1Token.js","Components/Player/Steaming/MP3/ID3v1/ID3v1Parser.js","Components/Player/Steaming/MP3/ID3v2/ID3v2Token.js","Components/Player/Steaming/MP3/ID3v2/FrameParser.js","Components/Player/Steaming/MP3/ID3v2/ID3v2Parser.js","Components/Player/Steaming/MP3/ID3Parser.js","Utils/Media.js","Utils/User.js","Stores/PlayerStore.js","Components/Tile/User.js","Components/Viewer/FileProgress.js","Workers/Helpers.js","Workers/BlobInflator.js","Components/Message/Media/Sticker.js","Components/Tile/UserTile.js","Stores/StickerStore.js","Assets/Icons/Download.js","Components/Message/Media/Photo.js","Stores/BasicGroupStore.js","Utils/Date.js","Components/Additional/SafeLink.js","Stores/InstantViewStore.js","Components/Message/MessageAuthor.js","Components/Message/Media/Animation.js","Assets/Icons/PlayArrow.js","Utils/Currency.js","Utils/ServiceMessage.js","Utils/Url.js","Components/Message/Media/Audio.js","Assets/Icons/Pause.js","Components/Tile/DocumentTile.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Location.js","Components/Message/Media/Video.js","Components/Message/Media/MediaStatus.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/DeletedAccount.js","Assets/Icons/Check.js","Actions/Poll.js","Components/Tile/UserStatus.js","Stores/PollStore.js","Utils/Poll.js","Utils/Punycode.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VideoNote.js","Components/Message/Media/VoiceNote.js","Components/Tile/VoiceNoteTile.js","Assets/Icons/Smile.js","Components/Message/Media/FireworksControl.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Tile/UserPlaceholder.js","Components/Popup/PollOptionResult.js","Components/Popup/PollOptionResults.js","Components/Popup/PollResultsDialog.js","Components/Message/Media/Poll.js","Assets/Icons/Document.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Workers/pako.worker.js","Notifications.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Actions/Chat.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Actions/Message.js","Components/Tile/Dialog.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Additional/KeyboardManager.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Utils/Archive.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Controllers/ContactController.js","Components/ColumnLeft/CustomContacts.js","Components/ColumnLeft/MarketingTool.js","Components/Popup/SidebarDialog.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Done.js","Assets/Icons/Send.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Stores/MarketingToolStore.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Assets/Icons/Share.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["store","reset","callbacks","db","urls","WeakMap","dataUrls","Map","items","blobItems","locationItems","downloads","uploads","onUpdate","update","a","onUpdateAuthorizationState","set","file","onUpdateFile","emit","onClientUpdate","addTdLibListener","TdLibController","on","removeTdLibListener","off","authorization_state","initDB","handleDownloads","handleUploads","arr","id","local","idb_key","has","is_downloading_completed","get","delete","getStore","forEach","item","handleAnimation","handleAudio","handleChat","handleDocument","handleGame","handleLocation","handleMessage","handlePageBlockMap","handlePhoto","handleSticker","handleVideo","handleVideoNote","handleVoiceNote","handleUser","console","error","remote","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","audio","photo","document","game","location","sticker","web_page","video","video_note","voice_note","venue","obj","chatId","chat_id","messageId","thumbnail","source","updateAnimationThumbnailBlob","THUMBNAIL_PRIORITY","updateAnimationBlob","album_cover_thumbnail","updateAudioThumbnailBlob","updateAudioBlob","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","pageBlockMap","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","i","sizes","length","photoSize","updatePhotoBlob","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","deleteLocalFile","fileId","getBlob","setBlob","blob","deleteBlob","setLocationFile","getDataUrl","setDataUrl","dataUrl","deleteDataUrl","getBlobUrl","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","callback","this","initiatingDB","push","openDB","catch","log","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","faultCallback","send","file_id","response","data","then","priority","some","x","filter","only_if_pending","message_ids","revoke","userId","EventEmitter","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","FileStore","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","PRELOAD_AUDIO_SIZE","cancelLoadAnimationContent","cancelGetRemoteFile","loadAnimationContent","PRELOAD_ANIMATION_SIZE","cancelLoadAnimationThumbnailContent","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","PRELOAD_DOCUMENT_SIZE","loadGameContent","width","height","zoom","LOCATION_ZOOM","scale","LOCATION_SCALE","loadLocationContent","LOCATION_WIDTH","LOCATION_HEIGHT","cancelLoadBigPhotoContent","getSize","PHOTO_BIG_SIZE","loadBigPhotoContent","displaySize","PHOTO_SIZE","getPhotoSize","loadPhotoThumbnailContent","thumbSize","getPhotoThumbnailSize","loadStickerContent","PRELOAD_STICKER_SIZE","cancelLoadVideoContent","loadVideoContent","PRELOAD_VIDEO_SIZE","cancelLoadVideoThumbnailContent","loadVideoNoteContent","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","keys","saveMedia","media","file_name","saveOrDownload","saveAnimation","saveDocument","savePhoto","saveVideo","fileName","mime","Blob","type","saveData","can_be_downloaded","getViewerMinithumbnail","minithumbnail","getViewerThumbnail","getViewerFile","getMediaMiniPreview","getMediaPreviewFile","getMediaFile","mime_type","cancelLoadIVMediaViewerContent","blocks","cancelLoadMediaViewerContent","loadIVMediaViewerContent","useSizeLimit","loadMediaViewerContent","cancelPreloadIVMediaViewerContent","index","preload","cancelPreloadMediaViewerContent","history","preloadMediaViewerContent","preloadIVMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","small","big","getChatUserId","getProfilePhoto","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","full","loadChatPhotoContent","loadChatsContent","loadDraftContent","draft_message","loadRecentStickersContent","recent","loadStickersContent","stickers","loadStickerSetContent","stickerSet","loadBackgroundsContent","backgrounds","background","loadBackgroundContent","is_animated","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","loadInstantViewContent","instantView","page_blocks","pageBlock","loadPageBlockContent","b","caption","author","loadRichTextContent","text","credit","cover","header","poster_photo","author_photo","footer","kicker","loadPageBlockMapContent","IV_PHOTO_SIZE","articles","subheader","subtitle","cells","row","title","t","texts","getAnimationData","fileReader","FileReader","onload","event","JSON","parse","target","onabort","readAsText","canUnpinMessage","pinned_message_id","isChatArchived","chat_list","canSetChatChatList","is_sponsored","isMeChat","SERVICE_NOTIFICATIONS_USER_ID","draftEquals","draft1","draft2","inputMessageText1","input_message_text","replyToMessageId1","inputMessageText2","formattedText1","formattedText2","text1","entities1","entities","text2","entities2","offset","every","entitiesEquals","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","next","value","action","getPrivateChatTypingString","firstUser","secondUser","first_name","second_name","getGroupChatTypingString","getMessageSenderFullName","k","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","key","getContent","showChatUnreadMentionCount","unread_mention_count","showChatUnreadCount","is_marked_as_unread","unread_count","isChatUnread","isChatMuted","notification_settings","use_default_mute_for","mute_for","settings","NotificationStore","isChannelChat","getScopeNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","is_member","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getChannelStatus","getSupergroupStatus","getChatSubtitle","showSavedMessages","chatTypingString","getChatLetters","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","formatPhoneNumber","phone_number","getChatBio","description","bio","isPrivateChat","isGroupChat","isChatMember","getChatTitle","isDeletedPrivateChat","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendMediaMessages","globalPermissions","permissions","can_send_media_messages","getChatShortTitle","canClearHistory","Boolean","canDeleteChat","canSendPolls","can_send_polls","canSendMessages","can_send_messages","getChatDraft","getChatDraftReplyToMessageId","replyToMessageId","canPinMessages","can_pin_messages","isChatVerified","is_verified","isChatSecret","isCreator","MentionLink","props","handleClick","stopPropagation","preventDefault","popup","openUser","setState","openChat","handleClose","handleDialogClick","state","children","onClick","Dialog","transitionDuration","onClose","aria-labelledby","DialogTitle","DialogContent","classes","root","DialogContentText","DialogActions","Button","prevUserId","prevUsername","React","Component","defaultProps","withTranslation","isMetaBubble","isMessageUnread","last_read_inbox_message_id","last_read_outbox_message_id","is_outgoing","isMe","getAuthor","forward_info","getTitle","substring","start","end","searchCurrentChat","AppStore","searchChat","getFormattedText","formattedText","deleteLineBreakAfterPre","entity","textBefore","textBeforeLength","substr","entityKey","entityText","command","rel","SafeLink","textAfter","getText","meta","concat","getWebPage","d","getDateHint","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getSenderUserId","filterDuplicateMessages","reduce","accumulator","current","filterMessages","ttl","getServiceMessageContent","poll","question","emoji","isMediaContent","longitude","latitude","isVideoMessage","isLottieMessage","endsWith","isAnimationMessage","isContentOpened","is_listened","is_viewed","getMediaTitle","getAudioTitle","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","message_id","setMediaViewerContent","openAudio","openChatPhoto","openContact","openDocument","openGame","openPhoto","openSticker","set_id","openVideo","openVideoNote","openVoiceNote","openMedia","isDeletedMessage","getReplyMinithumbnail","getReplyPhotoSize","getEmojiMatches","textContent","m","lastIndex","emojiMatches","re","emojiRegex","exec","messageComparatorDesc","left","right","checkInclusion","checkIntersection","startIndex","endIndex","checkEntity","removeOffsetAfter","countToRemove","e","addOffsetAfter","countToAdd","removeEntities","entityStart","entityEnd","splice","addTextNode","nodes","node","createTextNode","getNodes","sort","prevEntity","innerText","dataset","getDecodedUrl","getEntities","getBoldItalicEntities","isPre","indexOf","language","lastChar","firstChar","getMonoPreEntities","DOMParser","parseFromString","finalText","childNodes","nodeName","getHTMLEntities","replace","join","c","checkString","checkChar","prevChar","canMessageBeEdited","can_be_edited","showMessageForward","isTextMessage","isMessagePinned","canMessageBeUnvoted","is_closed","options","is_chosen","is_being_chosen","canMessageBeClosed","canMessageBeForwarded","can_be_forwarded","canMessageBeDeleted","can_be_deleted_only_for_self","can_be_deleted_for_all_users","getMessageStyle","fitSize","getFitSize","PHOTO_DISPLAY_SIZE","createSvgIcon","Call","duration","callTitle","getCallTitle","durationString","getDurationString","Math","floor","className","classNames","IconButton","color","aria-label","fontSize","Contact","last_name","fullName","number","UserTile","firstName","lastName","Game","Animation","fitPhotoSize","Photo","Venue","venueTitle","address","Location","strtokBITSET","buf","bit","decodeString","buffer","encoding","slice","label","TextDecoder","decode","readUTF16String","readUTF8String","readWindows1292String","Error","UINT32SYNCSAFE","UINT8","UINT32_BE","UINT24_BE","UINT16_BE","ASCII_TEXT","len","Id3v1StringType","pos0","trimRightNull","trim","undefined","ID3v1Header","artist","album","year","comment","zeroByte","track","genre","ID3v1Parser","hasID3v1Header","ID3v2Header","fileIdentifier","version","major","revision","flags","raw","unsynchronisation","isExtendedHeader","expIndicator","ExtendedHeader","extendedFlags","sizeOfPadding","crcDataPresent","crcData","TextEncodingToken","bom","FrameParser","output","debug","splitValue","tag","trimArray","ID3v2Parser","tags","frameHeaderLength","getFrameHeaderLength","id3Header","frameHeaderBytes","frameHeader","readFrameHeader","frameDataBytes","readFrameData","extendedHeader","parseId3Data","dataLen","parseMetadata","parseExtendedHeader","readI","writeI","majorVer","includeCovers","warningCollector","frameParser","readData","format","removeUnsyncBytes","data_length_indicator","tag_alter_preservation","file_alter_preservation","read_only","grouping_identity","compression","encryption","v","readFrameFlags","hasID3v2Header","ID3Parser","fr","readAsArrayBuffer","getArrayBuffer","arrayBuffer","Uint8Array","id3Tags","artistTag","find","titleTag","discard_reason","isEditedMedia","isValidAnimatedSticker","sending_state","isBlurredThumbnail","blurredSize","THUMBNAIL_BLURRED_SIZE_90","max","performer","trimmedTitle","trimmedPerformer","getAudioShortTitle","getAudioSubtitle","getStickers","sets","getNeighborStickersFromSets","stickersPerRow","setIndex","findIndex","stickerIndex","prevRows","ceil","toRowColumn","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","toIndex","totalRows","skipNextRow","skipNextNextRow","setRow","setColumn","getInputMediaThumbnail","getInputMediaCaption","getInputMediaContent","live_period","added_sticker_file_ids","supports_streaming","waveform","getMedia","hasTitle","hasCaption","inlineMeta","Audio","duraton","discardReason","Document","Poll","Sticker","StickerSourceEnum","MESSAGE","Video","VideoNote","VoiceNote","getMediaTags","src","addEventListener","trunc","getMediaDocumentFromFile","getRandomInt","name","album_cover_minithumbnail","expected_size","getMediaPhotoFromFile","startsWith","readImageSize","has_stickers","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","isUserBlocked","is_blocked","getUserLetters","firstNameSymbol","getFirstLetter","lastNameSymbol","getUserStatusOrder","expires","PROFILE_PHOTO_SMALL_SIZE","PROFILE_PHOTO_BIG_SIZE","getProfilePhotoDateHint","userProfilePhoto","added_date","isDeletedUser","RepeatEnum","Object","freeze","NONE","REPEAT","REPEAT_ONE","playlist","time","videoStream","close","getPlaylist","volume","savePlayerSettings","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","currentTime","timestamp","stream","useRepeatShuffle","nextIndex","currentPlaylist","totalCount","query","from_message_id","limit","total_count","loadPlayerSettings","player","localStorage","getItem","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","setItem","stringify","User","onSelect","nextProps","nextState","showStatus","is_contact","FileProgress","currentFile","nextFile","fileEquals","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","icon","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","file1","file2","local1","remote1","local2","remote2","can_be_deleted","download_offset","downloaded_prefix_size","path","cancelButton","zIndex","completeIcon","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","circle","variant","thickness","randomString","random","toString","worker","PakoWorker","handlers","inflateBlob","postMessage","onmessage","msg","Lottie","lazy","HINTS","PICKER_HEADER","PICKER","PREVIEW","STICKER_SET","UNKNOWN","onClientUpdateInstantViewContent","openIV","InstantViewStore","getCurrent","startStopAnimation","onClientUpdateDialogChatId","dialogChatId","ApplicationStore","onClientUpdateMediaViewerContent","openMediaViewer","mediaViewerContent","onClientUpdateProfileMediaViewerContent","openProfileMediaViewer","profileMediaViewerContent","onClientUpdateStickerPreview","stickerPreview","onClientUpdateMessagesInView","inView","onClientUpdateStickerSet","openedStickerSet","onClientUpdateFocusWindow","focused","windowFocused","onClientUpdateStickerBlob","loadContent","forceUpdate","onClientUpdateStickerThumbnailBlob","autoplay","play","isAnimated","animationData","handleMouseEnter","handleAnimationMouseEnter","entered","lottieRef","loopCount","handleAnimationLoopComplete","handleAnimationMouseOut","createRef","hasFocus","StickerStore","animationDate","hasError","errorInfo","nextContext","blur","prevProps","prevState","snapshot","pause","paused","preview","isBlurred","draggable","alt","Suspense","fallback","ref","loop","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","eventListeners","eventName","onMouseOut","stickerStyle","onMouseEnter","STICKER_DISPLAY_SIZE","onClientUpdateUserBlob","loaded","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","handleLoad","fistName","dialog","pointer","tileLoaded","tileColor","abs","onLoad","hint","sticker_set_ids","is_installed","assign","foundStickers","onClientUpdatePhotoBlob","showProgress","miniSrc","thumbSrc","photoStyle","hasSrc","thumbnailSize","prevPhoto","PHOTO_THUMBNAIL_SIZE","fullInfoItems","basic_group","setFullInfo","basic_group_full_info","groupId","group","basicgroup","token","timezone","timezoneClip","mask","utc","gmt","arguments","kindOf","test","isNaN","TypeError","maskSlice","String","masks","_","D","y","H","M","s","L","o","getTimezoneOffset","W","getWeek","N","getDayOfWeek","dd","pad","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","round","timeNames","tt","T","TT","Z","match","S","val","targetThursday","getFullYear","getMonth","firstThursday","ds","getHours","weekDiff","dow","Array","isArray","call","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","expiresHeaderFormat","confirm","handleDone","newWindow","opener","handleSafeClick","isTelegramLink","messageLinkInfo","lowerCaseUrl","decodedUrl","safe","displayText","mail","prevUrl","prevDisplayText","isUrlSafe","getHref","viewerContent","prevInstantView","MessageAuthor","openUserCommand","openChatCommand","startStopPlayer","videoRef","ivInView","openIVMedia","onClientUpdateInstantViewViewerContent","onClientUpdateBlocksInView","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","setPlayerParams","animationStyle","isGif","poster","muted","autoPlay","playsInline","iv","transform","currency","list","symbol","includes","totalAmount","amount","pow","getPow","serviceMap","getTTLString","seconds","days","getPassportElementTypeString","getMessageAuthor","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","messageGame","game_message_id","score","passportElementTypes","types","messageInvoice","invoice_message_id","invoice","Currency","getString","total_amount","pinnedMessage","pinnedContent","maxLength","domain_name","regExpRTLO","hasRTLOSymbol","decodedHref","decodeURI","domain","punycode","ToUnicode","regExpDomainExplicit","RegExp","regExpDomain","regExpProtocol","validateUrl","trimmed","domainMatch","protocolMatch","isGoodProtocol","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","PlayerStore","audioTitle","audioSubtitle","opacity","DocumentTile","onClientUpdateDocumentThumbnailBlob","AudioAction","onClientUpdateMediaSeeking","playerDuration","seekProgress","seeking","timeString","getTimeString","onClientUpdateMediaSeek","Infinity","onClientUpdateMediaTime","currentTimeString","audioDuration","theme","isDownloadingActive","isUploadingActive","sizeString","strings","onClientUpdateLocationBlob","locationStyle","onClientUpdateVideoThumbnailBlob","videoStyle","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","StickerPreview","prevPropsSticker","loadStickerEmojis","emojis","STICKER_PREVIEW_DISPLAY_SIZE","stroke","strokeWidth","strokeLinejoin","fill","cx","cy","r","setPollAnswer","optionIds","option_ids","cancelPollAnswer","stopPoll","reply_markup","UserStatus","onUpdateUserStatus","isAccent","allow_multiple_answers","is_anonymous","isAnonymous","allowMultipleAnswers","newType","correct_option_id","option","source1","source2","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","POLL_OPTION_LENGTH","hasPollData","utf16","input","extra","charCodeAt","RangeError","encode","fromCharCode","maxint","encode_digit","flag","adapt","delta","numpoints","firsttime","preserveCase","n","out","bias","basic","j","ic","oldi","w","digit","cp","case_flags","input_length","lastIndexOf","toUpperCase","q","ijv","bcp","ToASCII","domain_array","VoiceNoteSlider","getValue","PLAYER_PROGRESS_TIMEOUT_MS","dragging","handleMouseDown","handleChangeCommitted","handleChange","thumb","min","step","onChange","onChangeCommitted","onMouseDown","circleStyle","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","sourceRef","getTracks","stop","load","progressTime","clamp","onCanPlay","VoiceNoteTile","Particle","fireworks","colorType","side","typeSize","xFinished","finishedStart","rotation","moveX","moveY","ctx","fillStyle","beginPath","arc","PI","save","translate","rotate","radius","tl","tr","br","bl","defaultRadius","moveTo","lineTo","quadraticCurveTo","closePath","roundRect","restore","dt","moveCoef","wasNegative","speedCoef","fallingDownCount","getMeasuredHeight","Fireworks","context","particlesCount","fallParticlesCount","particles","canvas","clientHeight","clientWidth","fall","particle","colors","getMeasuredWidth","xOffset","yOffset","started","startedFall","lastUpdateTime","createParticle","draw","newTime","clearRect","p","startFall","requestAnimationFrame","FireworksComponent","onResize","canvasRef","parentNode","attachToParent","detachFromParent","removeEventListener","getContext","position","top","pointerEvents","PollRadio","chosen","beingChosen","hidden","Radio","colorPrimary","disabled","TouchRippleProps","child","checked","checkedIcon","CircularProgress","PollPercentage","updateAnimation","stopAnimation","handle","onAnimationFrame","cancelAnimationFrame","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","animated","prevPropsValue","closed","PollOption","getTitleString","canBeSelected","onVote","maxVoterCount","isCorrect","voter_count","vote_percentage","isMultiChoosen","Close","Check","LinearProgress","bar","UserPlaceholder","titleWidth","sin","contentWidth","cos","marginLeft","PollOptionResult","ListItem","button","PollOptionResults","handleShowMore","newOffset","newCount","POLL_RESULTS_SLICE_LENGTH","updateVoters","handleCollapse","POLL_RESULTS_FIRST_SLICE_LENGTH","POLL_RESULTS_LEAVE_LENGTH","voters","loadMore","optionId","option_id","user_ids","offset2","isQuiz","results","voterCount","showMoreButton","showMoreCount","showMore","fullWidth","showCollapse","PollResultsDialog","onClientUpdateClosePollResults","handleContextMenu","PollStore","container","paper","onContextMenu","getTotalVoterCountString","handleSubmit","viewResults","handleVote","handleOpenResults","viewResultsPoll","handleCloseResults","fireworksRef","total_voter_count","recent_voter_user_ids","isSelected","showViewResults","showButton","buttonEnabled","recentVoters","marginRight","getOptionType","getOptionIsCorrect","textPrimary","fillRule","mixBlendMode","DocumentAction","Download","viewBox","data-name","data-ext","module","exports","Worker","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","OnlineStatus","online","borderSize","padding","ChatTile","onFastUpdatingComplete","showOnline","DeletedAccount","ForwardTargetChat","selected","shortTitle","copy","clipboard","writeText","copyOld","element","successful","contentEditable","readOnly","all","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","focus","select","execCommand","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","currentPackId","OptionStore","suggestedPackId","latinInput","getLatinInput","ForwardDialog","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","savedMessagesPromise","force","chats","savedMessages","chatIds","chat_ids","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","getForwardPhotoSize","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","input_message_content","disable_web_page_preview","clear_draft","from_chat_id","as_album","handleChangeSelection","innerHTML","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","hasSearchText","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","searchResultsMap","filteredResults","foundChats","aria-describedby","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","autoFocus","enhance","compose","withSnackbar","isVerified","DialogStatus","updateSubtitle","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","onUpdateSupergroup","prevChatId","externalSubtitle","Chat","onTileSelect","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","setChatChatList","chatList","toggleChatIsPinned","isPinned","is_pinned","toggleChatIsMarkedAsUnread","isMarkedAsUnread","toggleChatNotificationSettings","isMuted","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","getChatCounters","photoCounter","return_local","videoCounter","documentCounter","audioCounter","urlCounter","voiceAndVideoNoteCounter","Notifications","onUpdateChatNotificationSettings","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationsListItem","ListItemIcon","ListItemText","primary","Typography","noWrap","ListItemSecondaryAction","Switch","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isGroup","isBlocked","isMember","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","inset","ChatDetails","loadChatContents","handleUsernameHint","telegramUrlOption","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","scrollHeight","offsetHeight","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","member","wordWrap","Divider","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","SharedDocument","contextMenu","handleOpenContextMenu","clientX","clientY","handleCloseContextMenu","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","SpeedDialIcon","openIcon","SharedMediaBase","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","isValidContent","insertByOrder","onUpdateNewMessage","isValidMessage","onUpdateDeleteMessages","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","finally","incompleteResults","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","isRequired","func","bool","SharedDocuments","SharedLink","hostname","webPage","display_url","getTitleFromUrl","isValidEntityType","typeUrl","SharedLinks","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","minWidth","SharedPhoto","backgroundImage","backgroundSize","SharedPhotos","SharedVideo","SharedVideos","SharedVoiceNote","dateString","toLocaleDateString","month","hour","minute","hour12","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","isSmallWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","setCounters","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","onClientUpdateClearHistory","clearHistory","contentControl","draft","senderName","x1","y1","x2","y2","strokeLinecap","DialogBadge","showUnreadMentionCount","showUnreadCount","Pin","Status","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","unread","Pending","Sent","Succeeded","prevMessageId","DialogMeta","pinMessage","disableNotification","disable_notification","unpinMessage","previousChatId","contextMenuId","canPinChats","canTogglePin","canToggleArchive","handleMute","pinnedSumMaxOption","isSecret","pinnedSum","handlePin","handleArchive","getViewInfoTitle","handleViewInfo","handleRead","forceRead","force_read","viewMessages","isLastPinned","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","scrollTo","DialogListItem","DialogsList","onClientUpdateLeaveChat","hiddenChats","authorizationState","loadFirstSlice","isAuthorizationReady","saveCache","onSaveCache","onUpdateChatOrder","order","currentIndex","newChatIds","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","oldChatIds","Archive","innerListRef","KeyboardHandler","manager","handler","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderFullName","tile","SectionHeader","multiline","Search","concatSearchResults","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","recentlyFound","trimmedText","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","searchOrLoadContent","KeyboardManager","add","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","marketingToolFakeChat","myModifyValue","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","remove","saveChatsInternal","files","parseCache","archiveChats","basicGroups","supergroups","OutputTypingManager","updateChatChatList","fileMap","userMap","basicGroupMap","supergroupMap","entries","getCache","readAsDataURL","MainMenuButton","handleMenuOpen","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","handleCustomContacts","handleMarketingTool","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","nativeEvent","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","SidebarPage","Slide","direction","mountOnEnter","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","Edit","Data","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","onChoose","handleAttach","attachPhotoRef","handleAttachComplete","fileURL","defaultURL","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","firstNameRef","lastNameRef","bioRef","userFullInfo","setName","setBio","setUsername","newFirstName","newLastName","newBio","usernameLabel","TextField","defaultValue","Wallpaper","wallpaper","backgroundPosition","ChatBackground","selectedId","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","main","palette","FormControl","FormLabel","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","LocalizationStore","language_packs","tabIndex","inputProps","secondary","native_name","handleMuteFor","property","newSettings","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","Checkbox","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","role","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","handleCloseSettings","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","throttle","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","getArchiveTitle","archive","chatsOrder","NewChannel","defaultPhoto","defaultPhotoFile","titleRef","descriptionRef","defaultPhotoURL","file_type","UserChip","divRef","offsetLeft","offsetTop","offsetWidth","div","cssText","AddParticipants","newArray","selectedItems","focusedItem","newMap","newFocusedItem","isDeleting","wrapPanel","wrapPanelRef","prevHeight","prevOffsetHeight","prevMap","itemsRef","prevCSSText","prevScrollTop","currentHeight","collapsed","scrollIntoView","animateItems","selectedItemsMap","publicItems","publicChats","handleSearchClose","handleBackspace","lastItem","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","transition","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","handleCloseParams","config","headers","controller","importContactToBackend","telegram_user_id","phone","axios","post","imported_contacts","err","res","getTelegramUserContacts","currentUserPhone","getTelegramUserGroups","postToDatabase","addContact","client","disableLog","handleAddContact","handleSendBulkMessageOld","handleSendBulkMessage","sendBulkMessageToAllContacts","sendBulkMessageToAllChatRooms","handleGetContactList","testVar","handleTestImportContact","ContactController","ChatID","handleAddNoneExistingContact","Transition","forwardRef","Zoom","MyCheckboxComponent","MarketingTool","handleSelectGroup","myContacts","handleGetGroupListFromBackend","handleUpdateContactsToMarketingToolStore","selectedContacts","selectedGroups","contactFromGroups","uniqueContacts","self","handleOpenSelectContactDialog","handleOpenPopupDialog","openSelectContactDialog","handleCloseSelectContactDialog","handleSubmitSelectContact","arrContact","FormData","getAll","handleCancelSelectContact","handleSelectAllContact","selectAllContacts","newContact","handleOnChangeSelectContact","selectedAll","handleRenderSelectContactDialog","disableBackdropClick","disableEscapeKeyDown","maxWidth","selectContactRef","onSubmit","FormGroup","dividers","handleImportContact","jsonContact","refImportContactTextField","alert","handleCloseImportContactDialog","handleClosePopupDialog","importContact","handleOpenImportContactDialog","openImportContactDialog","importContactDialogContent","openPopupDialog","popupDialogMessage","popupDialogContent","TransitionComponent","keepMounted","groups","selectAllGroups","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","openCustomContacts","openMarketingTool","visible","onClientUpdateCustomContacts","onClientUpdateMarketingTool","onEnter","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","onUpdateChatChatList","prevShowArchive","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleSaveCache","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","handleCloseCustomContacts","handleCloseMarketingTool","mainItems","archiveItems","loadCache","mainChatIds","saveChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","focusNode","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","optionTextRef","remainLength","hasSelection","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","data-length","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_HINT_LENGTH","disableTypography","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","urlError","onDone","onCancel","textRef","urlRef","flexDirection","autoComplete","prevOpen","ReplyTile","isVideoNote","Reply","onGetMessageResult","handleOpen","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","onEdit","editFile","editMedia","sendAsPhoto","editMessageAction","altKey","ctrlKey","metaKey","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","handleSendAsPhoto","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","bulkMessageContacts","selectedBulkMessageContacts","selectedBulkMessageGroups","loadClientData","clientData","saveClientData","emitUpdate","emitFastUpdate","updating","parameters","fastUpdating","skippedUpdates","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onUpdateBulkMessageContact","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","setEditMessage","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateStickerSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateReply","setInputFocus","beforeEditText","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","getDraftMessage","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","clearDraft","bulk_message_contacts","invokeScheduledAction","handleEmojiSelect","native","setTyping","setHints","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","sendFile","MarketingToolStore","sendAsFile","performance","cancel","isMediaEditing","Done","Send","FooterCommand","onCommand","NotificationsCommand","Footer","handleJoin","handleDeleteAndExit","remove_from_chat_list","NotificationTimer","handleTimer","expire","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","setInterval","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","persist","getLeaveChatTitle","handleUnpin","deleteChat","leaveChatTitle","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","isAccentSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","onUpdateChatPinnedMessage","code","deletedMessage","getClientData","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","onMouseLeave","visibility","Slider","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","onClientUpdateMediaPlaylist","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","onClientUpdateMediaBlob","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHintStr","dateStr","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","handleUnvote","copyLink","handleReply","handleEdit","selectMessage","handleDownload","synchronous","canBeUnvoted","canBeClosed","canBeReplied","canBePinned","canBeEdited","hasSelectedMessage","canCopyLink","Copy","Share","FrameCheck","RemoveCheck","openInstantView","force_full","setInstantViewContent","WebPage","displaySmallSize","displayExtraSmallSize","site_name","smallPhoto","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","shook","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","edit_date","showForward","showReply","suppressTitle","withBubble","onMouseOver","onAnimationEnd","Placeholder","onClientUpdateCacheLoaded","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","getSticker","mouseDownStickerId","handleMouseUp","dict","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","deleteHistory","updateItemsInView","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","scrollDownButtonRef","historyEquals","previousChat","MAX_VALUE","highlightMessage","viewAction","getMessagePhoto","getMessageSticker","oldMessageId","prevMessage","isFirst","MESSAGE_SPLIT_MAX_TIME_S","prevDate","nextMessage","showMessageDate","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","IVContext","createContext","withIV","IVComponent","Consumer","RichText","richText","email_address","emailAddress","getRichText","object","Anchor","Caption","hasText","isEmptyText","hastCredit","block","need_autoplay","IV_PHOTO_DISPLAY_SIZE","AuthorDate","publishDate","hasAuthor","hasDate","dateTime","toISOString","Blockquote","pageBlocks","getPageBlock","Cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","getElementById","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevHtml","authorPhoto","ErrorHandler","componentStack","Kicker","data-before","Paragraph","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","publish_date","Subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","ChatLink","needAutoplay","isLooped","openInstantViewMedia","setInstantViewViewerContent","is_open","posterPhoto","is_full_width","allow_scrolling","is_bordered","is_striped","is_header","is_looped","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","dir","MediaCaption","InstantViewMediaViewerContent","onClientUpdateMediaThumbnailBlob","isPlaying","videoWidth","videoHeight","handleContentClick","onVolumeChange","prevMedia","minithumbnailWidth","minithumbnailHeight","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","handleSave","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewUrl","hash","scrollToHash","handleBack","hasScroll","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","Provider","alignItems","MediaInfo","dateHint","tileControl","MediaViewerContent","updateAnimationData","changeSpeed","isVideo","isAnimation","isLottie","MediaViewer","deleteConfirmationOpened","currentMessageId","firstSliceLoaded","inserted","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","MEDIA_SLICE_LIMIT","handleDialogOpen","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","ProfileMediaViewerContent","ProfileMediaInfo","ProfileMediaViewer","inputFile","chatPhoto","getReadWriteStore","prevFileId","currentFileId","inHistory","MainPage","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.887a3259.chunk.js","sourcesContent":["/*\n*license\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\nconst useDownloadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.dataUrls = new Map();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateSendFiles': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n\n        const { authorization_state } = update;\n        if (!authorization_state) return;\n\n        switch (authorization_state['@type']) {\n            case 'authorizationStateWaitTdlibParameters': {\n                await this.initDB();\n                break;\n            }\n            case 'authorizationStateClosed': {\n                this.reset();\n                break;\n            }\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'animation': {\n                    this.handleAnimation(store, item, file, arr, null);\n                    break;\n                }\n                case 'audio': {\n                    this.handleAudio(store, item, file, arr, null);\n                    break;\n                }\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'document': {\n                    this.handleDocument(store, item, file, arr, null);\n                    break;\n                }\n                case 'game': {\n                    this.handleGame(store, item, file, arr, null);\n                    break;\n                }\n                case 'location': {\n                    this.handleLocation(store, item, file, arr, null);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'pageBlockMap': {\n                    this.handlePageBlockMap(store, item, file, arr, null);\n                    break;\n                }\n                case 'photo': {\n                    this.handlePhoto(store, item, file, arr, null);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'video': {\n                    this.handleVideo(store, item, file, arr, null);\n                    break;\n                }\n                case 'videoNote': {\n                    this.handleVideoNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'voiceNote': {\n                    this.handleVoiceNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || animation)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || animation)\n                );\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || audio)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || audio)\n                );\n            }\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || document)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || document)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || location)\n                );\n            }\n        }\n    };\n\n    handlePageBlockMap = (store, pageBlockMap, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const { location } = pageBlockMap;\n        const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || pageBlockMap)\n                );\n            }\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(chatId, messageId, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || photo)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || voiceNote)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || video)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || video)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            // console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            // console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        // console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        // console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            // console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        //console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        if (useReadFile) {\n            file = this.get(file.id) || file;\n            if (file && file.local && !file.local.is_downloading_completed) {\n                faultCallback();\n                return;\n            }\n\n            (async file => {\n                // console.log('[fs] readFile file_id=' + file.id);\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n\n                // console.log(`[fs] readFile result file_id=${file.id}`, file, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getDataUrl = id => {\n        if (!id) {\n            return null;\n        }\n\n        if (this.dataUrls.has(id)) {\n            return this.dataUrls.get(id);\n        }\n\n        return null;\n    };\n\n    setDataUrl = (id, dataUrl) => {\n        this.dataUrls.set(id, dataUrl);\n    };\n\n    deleteDataUrl = id => {\n        this.dataUrls.delete(id);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n*license\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    IV_LOCATION_HEIGHT,\n    IV_LOCATION_WIDTH,\n    IV_PHOTO_SIZE,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return '';\n\n    let size = file.size;\n    if (!size) return '';\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || audio);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || audio)\n    );\n\n    return true;\n}\n\nfunction cancelLoadAnimationContent(animation) {\n    const { animation: file } = animation;\n    if (!file) return;\n\n    const { id } = file;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || animation);\n            }\n        }\n    );\n}\n\nfunction cancelLoadAnimationThumbnailContent(animation){\n    if (!animation) return;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || animation)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || document);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || document)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadPageBlockMapContent(store, pageBlockMap, message) {\n    if (!pageBlockMap) return;\n\n    const { location } = pageBlockMap;\n    const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: IV_LOCATION_WIDTH,\n            height: IV_LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || pageBlockMap)\n    );\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || location)\n    );\n}\n\nfunction cancelLoadBigPhotoContent(photo) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message, displaySize = PHOTO_SIZE) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes, displaySize);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const thumbSize = getPhotoThumbnailSize(photo.sizes);\n    if (!thumbSize) return false;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (photoSize === thumbSize) return;\n\n    let { photo: file } = thumbSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction cancelLoadVideoContent(video) {\n    if (!video) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || video);\n            }\n        }\n    );\n}\n\nfunction cancelLoadVideoThumbnailContent(video) {\n    if (!video) return;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.cancelGetRemoteFile(id);\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || video)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || videoNote);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || videoNote)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || voiceNote);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nexport function saveMedia(media, message) {\n    if (!media) return;\n\n    switch (media['@type']) {\n        case 'animation': {\n            saveAnimation(media, message);\n            break;\n        }\n        case 'document': {\n            saveDocument(media, message);\n            break;\n        }\n        case 'photo': {\n            savePhoto(media, message);\n            break;\n        }\n        case 'video': {\n            saveVideo(media, message);\n            break;\n        }\n    }\n}\n\nfunction saveAnimation(animation, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!animation) return;\n\n    const { animation: file, file_name } = animation;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || animation, () =>\n        FileStore.updateAnimationBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveDocument(document, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!document) return;\n\n    const { document: file, file_name } = document;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || document, () =>\n        FileStore.updateDocumentBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveVideo(video, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!video) return;\n\n    const { video: file, file_name } = video;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || video, () =>\n        FileStore.updateVideoBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction savePhoto(photo, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!photo) return;\n\n    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    const { photo: file } = photoSize;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, fileId + '.jpg', message || photo, () => FileStore.updatePhotoBlob(chatId, messageId, fileId));\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nexport function getViewerMinithumbnail(media) {\n    if (!media) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { minithumbnail } = media;\n            if (minithumbnail) {\n                return [minithumbnail.width, minithumbnail.height, minithumbnail];\n            }\n            break;\n        }\n        case 'document': {\n            const { minithumbnail } = media;\n            if (minithumbnail) {\n                return [minithumbnail.width, minithumbnail.height, minithumbnail];\n            }\n            break;\n        }\n        case 'photo': {\n            const { minithumbnail } = media;\n            if (minithumbnail) {\n                return [minithumbnail.width, minithumbnail.height, minithumbnail];\n            }\n            break;\n        }\n        case 'video': {\n            const { minithumbnail } = media;\n            if (minithumbnail) {\n                return [minithumbnail.width, minithumbnail.height, minithumbnail];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getViewerThumbnail(media) {\n    if (!media) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'document': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'photo': {\n            return getViewerFile(media, PHOTO_SIZE);\n        }\n        case 'video': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nexport function getMediaMiniPreview(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.minithumbnail) {\n                return [animation.minithumbnail.width, animation.minithumbnail.height, animation.minithumbnail];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo && photo.minithumbnail) {\n                return [photo.minithumbnail.width, photo.minithumbnail.height, photo.minithumbnail];\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document && document.minithumbnail) {\n                return [document.minithumbnail.width, document.minithumbnail.height, document.minithumbnail];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo && photo.minithumbnail) {\n                return [photo.minithumbnail.width, photo.minithumbnail.height, photo.minithumbnail];\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.minithumbnail) {\n                    return [animation.minithumbnail.width, animation.minithumbnail.height, animation.minithumbnail];\n                }\n\n                if (document && document.minithumbnail) {\n                    return [document.minithumbnail.width, document.minithumbnail.height, document.minithumbnail];\n                }\n\n                if (video && video.minithumbnail) {\n                    return [video.minithumbnail.width, video.minithumbnail.height, video.minithumbnail];\n                }\n\n                if (photo && photo.minithumbnail) {\n                    return [photo.minithumbnail.width, photo.minithumbnail.height, photo.minithumbnail];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video && video.minithumbnail) {\n                return [video.minithumbnail.width, video.minithumbnail.height, video.minithumbnail];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video && video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getViewerFile(media, size) {\n    if (!size) return [0, 0, null, ''];\n\n    switch (media['@type']) {\n        case 'animation': {\n            return [media.width, media.height, media.animation, media.mime_type];\n        }\n        case 'photo': {\n            const photoSize = getSize(media.sizes, size);\n            if (photoSize) {\n                return [photoSize.width, photoSize.height, photoSize.photo, ''];\n            }\n            break;\n        }\n        case 'document': {\n            return [50, 50, document.document, document.mime_type];\n        }\n        case 'video': {\n            return [media.width, media.height, media.video, media.mime_type];\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null, ''];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null, ''];\n\n    const { content } = message;\n    if (!content) return [0, 0, null, ''];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                const { width, height, animation: file, mime_type } = animation;\n                return [width, height, file, mime_type];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    const { width, height, photo: file } = photoSize;\n                    return [width, height, file, ''];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                const { document: file, mime_type } = document;\n                return [50, 50, file, mime_type];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    const { width, height, photo: file } = photoSize;\n                    return [width, height, file, ''];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    const { width, height, animation: file, mime_type } = animation;\n                    return [width, height, file, mime_type];\n                }\n\n                if (document) {\n                    const { document: file, mime_type } = document;\n                    return [50, 50, file, mime_type];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        const { width, height, photo: file } = photoSize;\n                        return [width, height, file, ''];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    const { width, height, video: file, mime_type } = video;\n                    return [width, height, file, mime_type];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                const { width, height, video: file, mime_type } = video;\n                return [width, height, file, mime_type];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null, ''];\n}\n\nexport function cancelLoadIVMediaViewerContent(blocks) {\n    if (!blocks) return;\n    if (!blocks.length) return;\n\n    for (let i = 0; i < blocks.length; i++) {\n        const content = blocks[i];\n        if (content) {\n            switch (content['@type']) {\n                case 'pageBlockAnimation': {\n                    const { animation } = content;\n                    if (!animation) break;\n\n                    cancelLoadAnimationThumbnailContent(animation);\n                    cancelLoadAnimationContent(animation);\n                    break;\n                }\n                case 'pageBlockPhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    cancelLoadBigPhotoContent(photo);\n                    break;\n                }\n                case 'pageBlockVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    cancelLoadVideoThumbnailContent(video);\n                    cancelLoadVideoContent(video);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n                    if (!animation) break;\n\n                    cancelLoadAnimationThumbnailContent(animation);\n                    cancelLoadAnimationContent(animation);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    cancelLoadBigPhotoContent(photo);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    cancelLoadVideoThumbnailContent(video);\n                    cancelLoadVideoContent(video);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { animation, photo, video } = web_page;\n\n                        if (animation) {\n                            cancelLoadAnimationThumbnailContent(animation);\n                            cancelLoadAnimationContent(animation);\n                        }\n\n                        if (photo) {\n                            cancelLoadBigPhotoContent(photo);\n                        }\n\n                        if (video) {\n                            cancelLoadVideoThumbnailContent(video);\n                            cancelLoadVideoContent(video);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport function loadIVMediaViewerContent(blocks, useSizeLimit = false) {\n    if (!blocks) return;\n    if (!blocks.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < blocks.length; i++) {\n        const content = blocks[i];\n        if (content) {\n            switch (content['@type']) {\n                case 'pageBlockAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, null, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, null);\n                    break;\n                }\n                case 'pageBlockPhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, null);\n                    break;\n                }\n                case 'pageBlockVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, null);\n                    loadVideoContent(store, video, null, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport function cancelPreloadIVMediaViewerContent(index, blocks) {\n    if (!blocks.length) return;\n\n    const preload = [];\n    if (index > 0) {\n        preload.push(blocks[index - 1]);\n    }\n    if (index < blocks.length - 1) {\n        preload.push(blocks[index + 1]);\n    }\n\n    cancelLoadIVMediaViewerContent([blocks[index]]);\n    cancelLoadIVMediaViewerContent(blocks);\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nexport function preloadIVMediaViewerContent(index, blocks) {\n    if (!blocks.length) return;\n\n    const preload = [];\n    if (index > 0) {\n        preload.push(blocks[index - 1]);\n    }\n    if (index < blocks.length - 1) {\n        preload.push(blocks[index + 1]);\n    }\n\n    loadIVMediaViewerContent([blocks[index]], false);\n    loadIVMediaViewerContent(preload, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const dataUrl = FileStore.getDataUrl(id);\n    if (dataUrl) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId, full = false) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    loadChatPhotoContent(store, photo, chat.id, full);\n}\n\nfunction loadChatPhotoContent(store, photo, chatId, full) {\n    if (!photo) return;\n\n    const { small, big } = photo;\n\n    loadChatFileContent(store, small, chatId);\n    if (full) loadChatFileContent(store, big, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nexport function loadRecentStickersContent(store, recent) {\n    if (!recent) return;\n\n    const { stickers } = recent;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nexport function loadBackgroundsContent(store, backgrounds) {\n    if (!backgrounds) return;\n\n    backgrounds.forEach(background => {\n        loadBackgroundContent(store, background, false);\n    });\n}\n\nexport function loadBackgroundContent(store, background, full = false) {\n    if (!background) return;\n\n    switch (background.type['@type']) {\n        case 'backgroundTypeFill': {\n            break;\n        }\n        case 'backgroundTypePattern': {\n            const { document } = background;\n            if (document) {\n                loadDocumentThumbnailContent(store, document, null);\n                if (full) loadDocumentContent(store, document, null, false);\n            }\n            break;\n        }\n        case 'backgroundTypeWallpaper': {\n            const { document } = background;\n            if (document) {\n                loadDocumentThumbnailContent(store, document, null);\n                if (full) loadDocumentContent(store, document, null, false);\n            }\n            break;\n        }\n    }\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n        if (sticker.is_animated) {\n            loadStickerContent(store, sticker, null);\n        }\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const dataUrl = file && FileStore.getDataUrl(file.id);\n    if (dataUrl) return dataUrl;\n\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nfunction loadInstantViewContent(instantView) {\n    if (!instantView) return;\n\n    const { page_blocks } = instantView;\n    if (!page_blocks) return;\n\n    const store = FileStore.getStore();\n\n    page_blocks.forEach(pageBlock => loadPageBlockContent(store, pageBlock));\n}\n\nfunction loadPageBlockContent(store, b) {\n    if (!b) return;\n\n    switch (b['@type']) {\n        case 'pageBlockAnchor': {\n            break;\n        }\n        case 'pageBlockAnimation': {\n            const { animation, caption } = b;\n\n            loadAnimationThumbnailContent(store, animation, null);\n            loadAnimationContent(store, animation, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAudio': {\n            const { audio, caption } = b;\n\n            loadAudioThumbnailContent(store, audio, null);\n            loadAudioContent(store, audio, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            const { author } = b;\n\n            loadRichTextContent(store, author);\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockCaption': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockChatLink': {\n            const { photo } = b;\n\n            loadChatPhotoContent(store, photo, 0);\n            break;\n        }\n        case 'pageBlockCollage': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockCover': {\n            const { cover } = b;\n\n            loadPageBlockContent(store, cover);\n            break;\n        }\n        case 'pageBlockDetails': {\n            const { header, page_blocks } = b;\n\n            loadPageBlockContent(store, header);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockDivider': {\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            const { poster_photo, caption } = b;\n\n            loadPhotoContent(store, poster_photo, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            const { author_photo, page_blocks, caption } = b;\n\n            loadPhotoContent(store, author_photo, null);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockFooter': {\n            const { footer } = b;\n\n            loadRichTextContent(store, footer);\n            break;\n        }\n        case 'pageBlockHeader': {\n            const { header } = b;\n\n            loadRichTextContent(store, header);\n            break;\n        }\n        case 'pageBlockKicker': {\n            const { kicker } = b;\n\n            loadRichTextContent(store, kicker);\n            break;\n        }\n        case 'pageBlockList': {\n            const { items } = b;\n\n            items.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockListItem': {\n            const { page_blocks } = b;\n\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockMap': {\n            const { caption } = b;\n\n            loadPageBlockMapContent(store, b, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockParagraph': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPhoto': {\n            const { photo, caption } = b;\n\n            loadPhotoContent(store, photo, null, IV_PHOTO_SIZE);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            const { header, articles } = b;\n\n            loadRichTextContent(store, header);\n            articles.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockRelatedArticle': {\n            const { photo } = b;\n\n            loadPhotoContent(store, photo, null);\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockSubheader': {\n            const { subheader } = b;\n\n            loadRichTextContent(store, subheader);\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            const { subtitle } = b;\n\n            loadRichTextContent(store, subtitle);\n            break;\n        }\n        case 'pageBlockTable': {\n            const { caption, cells } = b;\n\n            loadRichTextContent(store, caption);\n            cells.forEach(row => row.forEach(x => loadPageBlockContent(store, x)));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockTableCell': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockTitle': {\n            const { title } = b;\n\n            loadRichTextContent(store, title);\n            break;\n        }\n        case 'pageBlockVideo': {\n            const { video, caption } = b;\n\n            loadVideoThumbnailContent(store, video, null);\n            loadVideoContent(store, video, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n    }\n}\n\nfunction loadRichTextContent(store, t) {\n    if (!t) return;\n\n    switch (t['@type']) {\n        case 'richTextAnchor': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextBold': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextEmailAddress': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextFixed': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextIcon': {\n            const { document } = t;\n\n            loadDocumentThumbnailContent(store, document, null);\n            loadDocumentContent(store, document, null, false);\n            break;\n        }\n        case 'richTextItalic': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextMarked': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPlain': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTexts': {\n            const { texts } = t;\n\n            texts.forEach(x => loadRichTextContent(store, x));\n            break;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSubscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSuperscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUnderline': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUrl': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n    }\n}\n\nfunction getAnimationData(file) {\n    return new Promise(resolve => {\n        if (!file) {\n            resolve(null);\n            return;\n        }\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) {\n            resolve(null);\n            return;\n        }\n\n        const fileReader = new FileReader();\n        fileReader.onload = event => resolve(JSON.parse(event.target.result));\n        fileReader.onerror = () => resolve(null);\n        fileReader.onabort = () => resolve(null);\n        fileReader.readAsText(blob);\n    });\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadChatContent,\n    loadChatsContent,\n    loadDraftContent,\n    loadInstantViewContent,\n    loadStickerContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    loadStickerThumbnailContent,\n    loadUserContent,\n    loadUsersContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension,\n    getViewerFile,\n    getViewerThumbnail,\n    getAnimationData\n};\n","/*\n*license\n */\n\nimport React from 'react';\nimport dateFormat from '../Utils/Date';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport { formatPhoneNumber } from './Phone';\nimport { getChannelStatus } from './Channel';\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport ChatStore from '../Stores/ChatStore';\nimport NotificationStore from '../Stores/NotificationStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function canUnpinMessage(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { pinned_message_id } = chat;\n\n    return pinned_message_id > 0;\n}\n\nexport function isChatArchived(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { chat_list } = chat;\n    if (!chat_list) return false;\n\n    return chat_list['@type'] === 'chatListArchive';\n}\n\nexport function canSetChatChatList(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_sponsored, chat_list } = chat;\n    if (is_sponsored) return false;\n    if (!chat_list) return false;\n\n    if (chat_list['@type'] === 'chatListMain') {\n        if (isMeChat(chatId) || chatId === SERVICE_NOTIFICATIONS_USER_ID) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function draftEquals(draft1, draft2) {\n    if (!draft1 && !draft2) return true;\n    if (draft1 && !draft2) return false;\n    if (draft2 && !draft1) return false;\n\n    const { input_message_text: inputMessageText1, reply_to_message_id: replyToMessageId1 } = draft1;\n    const { input_message_text: inputMessageText2, reply_to_message_id: replyToMessageId2 } = draft2;\n\n    if (replyToMessageId1 !== replyToMessageId2) {\n        return false;\n    }\n\n    if (inputMessageText1['@type'] !== inputMessageText2['@type']) {\n        return false;\n    }\n\n    if (inputMessageText1['@type'] !== 'inputMessageText') {\n        return true;\n    }\n\n    const { text: formattedText1 } = inputMessageText1;\n    const { text: formattedText2 } = inputMessageText2;\n\n    if (!formattedText1 && !formattedText2) return true;\n    if (formattedText1 && !formattedText2) return false;\n    if (formattedText2 && !formattedText1) return false;\n\n    const { text: text1, entities: entities1 } = formattedText1;\n    const { text: text2, entities: entities2 } = formattedText2;\n\n    if (text1 !== text2) {\n        return false;\n    }\n\n    return entitiesEquals(entities1, entities2);\n}\n\nfunction entitiesEquals(entities1, entities2) {\n    if (!entities1 && !entities2) return true;\n    if (entities1 && !entities2) return false;\n    if (entities2 && !entities1) return false;\n\n    if (entities1.length !== entities2.length) {\n        return false;\n    }\n\n    const map = new Map();\n    entities1.forEach(x => {\n        map.set(`${x.type['@type']}_${x.offset}_${x.length}`, x);\n    });\n\n    return entities2.every(x => map.has(`${x.type['@type']}_${x.offset}_${x.length}`));\n}\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message, t = k => k) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    return getUserFullName(message.sender_user_id, null, t);\n}\n\nfunction getMessageSenderName(message, t = k => k) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id, t);\n}\n\nfunction getLastMessageSenderName(chat, t = k => k) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message, t);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction showChatUnreadMessageIcon(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, last_message, last_read_outbox_message_id } = chat;\n    if (!last_message) return false;\n\n    const { is_outgoing } = last_message;\n\n    return (\n        is_outgoing && last_message.id > last_read_outbox_message_id && !is_marked_as_unread && !showChatDraft(chatId)\n    );\n}\n\nfunction showChatUnreadMentionCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { unread_mention_count } = chat;\n\n    return unread_mention_count > 0;\n}\n\nfunction showChatUnreadCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return (\n        unread_count > 1 ||\n        (unread_count === 1 && unread_mention_count === 0) ||\n        (is_marked_as_unread && unread_count === 0 && unread_mention_count === 0)\n    );\n}\n\nfunction isChatUnread(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return is_marked_as_unread || unread_count > 0;\n}\n\nfunction isChatMuted(chatId) {\n    return getChatMuteFor(chatId) > 0;\n}\n\nfunction getChatMuteFor(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return 0;\n\n    const { use_default_mute_for, mute_for } = notification_settings;\n\n    if (use_default_mute_for) {\n        const settings = getScopeNotificationSettings(chatId);\n\n        return settings ? settings.mute_for : false;\n    }\n\n    return mute_for;\n}\n\nexport function getScopeNotificationSettings(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return NotificationStore.settings.get('notificationSettingsScopePrivateChats');\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            let settings = null;\n            if (isChannelChat(chatId)) {\n                settings = NotificationStore.settings.get('notificationSettingsScopeChannelChats');\n            } else {\n                settings = NotificationStore.settings.get('notificationSettingsScopeGroupChats');\n            }\n            return settings;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return supergroup.is_channel\n                    ? getChannelStatus(supergroup, chatId)\n                    : getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat, t) {\n    if (!chat) return null;\n\n    let title = chat.title || t('HiddenName');\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return formatPhoneNumber(user.phone_number);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return supergroup.status.is_member;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return basicGroup.status.is_member;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nexport function isDeletedPrivateChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            const user = UserStore.get(chat.type.user_id);\n\n            return user && user.type['@type'] === 'userTypeDeleted';\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nasync function getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypePrivate': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeSecret': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeBasicGroup': {\n            return await TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: type.basic_group_id\n            });\n        }\n        case 'chatTypeSupergroup': {\n            return await TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: type.supergroup_id\n            });\n        }\n    }\n\n    return null;\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendMediaMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_media_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_media_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_media_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_media_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_media_messages && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_media_messages && is_member && permissions && permissions.can_send_media_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false, t = k => k) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id, t);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPolls(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_polls } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_polls;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_polls;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_polls && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_polls && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_polls && is_member && permissions && permissions.can_send_polls;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_messages && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_messages && is_member && permissions && permissions.can_send_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    return replyToMessageId;\n}\n\nfunction canPinMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_pin_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return status.can_pin_messages;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return false;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return false;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_pin_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_pin_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return can_pin_messages || status.can_pin_messages;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_pin_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return false;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_pin_messages && is_member && permissions && permissions.can_pin_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction isChatVerified(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n\n            return user && user.is_verified;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n\n            return supergroup && supergroup.is_verified;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatSecret(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate': {\n            return false;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport function isCreator(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const { basic_group_id } = type;\n            const basicGroup = BasicGroupStore.get(basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (status) return false;\n\n            return status['@type'] === 'chatMemberStatusCreator';\n        }\n        case 'chatTypePrivate': {\n            return false;\n        }\n        case 'chatTypeSecret': {\n            return false;\n        }\n        case 'chatTypeSupergroup': {\n            const { supergroup_id } = type;\n            const supergroup = SupergroupStore.get(supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            return status['@type'] === 'chatMemberStatusCreator';\n        }\n    }\n\n    return false;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    showChatUnreadMessageIcon,\n    showChatUnreadMentionCount,\n    showChatUnreadCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatUnread,\n    isChatMember,\n    isChatVerified,\n    isChatSecret,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canPinMessages,\n    canSendMediaMessages,\n    canSendMessages,\n    canSendPolls\n};\n","/*\n*license\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (\n        status &&\n        (status['@type'] === 'chatMemberStatusBanned' ||\n            status['@type'] === 'chatMemberStatusLeft' ||\n            (status['@type'] === 'chatMemberStatusCreator' && !status.is_member))\n    ) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n*license\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getChannelStatus(supergroup, chatId) {\n    if (!supergroup) return '';\n\n    let { status, is_channel, member_count: count } = supergroup;\n    if (!is_channel) return '';\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return 'channel is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 subscribers';\n    if (count === 1) return '1 subscriber';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} subscribers, ${onlineCount} online`;\n    }\n\n    return `${count} subscribers`;\n}\n","/*\n*license\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { openChat, openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MentionLink.css';\nimport { isGroupChat } from '../../Utils/Chat';\n\nclass MentionLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, username } = props;\n\n        if (state.prevUserId !== userId || state.prevUsername !== username) {\n            return {\n                prevUserId: userId,\n                prevUsername: username,\n                error: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = async event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { userId, username, popup } = this.props;\n        if (userId) {\n            openUser(userId, popup);\n        } else if (username) {\n            const chat = await TdLibController.send({\n                '@type': 'searchPublicChat',\n                username\n            }).catch(() => {\n                this.setState({ error: true });\n            });\n\n            if (chat) {\n                if (isGroupChat(chat.id)) {\n                    openChat(chat.id, null, false);\n                } else {\n                    openChat(chat.id, null, popup);\n                }\n            }\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ error: false });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { children, t, title, username } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <a title={title} onClick={this.handleClick}>\n                    {children}\n                </a>\n                {error && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleClose}\n                        onClick={this.handleDialogClick}\n                        aria-labelledby='confirm-dialog-title'>\n                        <DialogTitle id='confirm-dialog-title'>{t('Error')}</DialogTitle>\n                        <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                            <DialogContentText>{`Can't find username ${username}.`}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose}>{t('Ok')}</Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nMentionLink.propTypes = {\n    userId: PropTypes.number,\n    username: PropTypes.string,\n    title: PropTypes.string,\n    popup: PropTypes.bool\n};\n\nMentionLink.defaultProps = {\n    popup: true\n};\n\nexport default withTranslation()(MentionLink);\n","/*\n*license\n */\n\nimport React from 'react';\nimport emojiRegex from 'emoji-regex';\nimport MentionLink from '../Components/Additional/MentionLink';\nimport Poll from '../Components/Message/Media/Poll';\nimport SafeLink from '../Components/Additional/SafeLink';\nimport dateFormat from '../Utils/Date';\nimport { searchChat, setMediaViewerContent } from '../Actions/Client';\nimport { getChatTitle, isMeChat } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getFitSize, getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getDecodedUrl } from './Url';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM, PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function isMetaBubble(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) {\n        return false;\n    }\n\n    const { content } = message;\n    if (!content) {\n        return false;\n    }\n\n    const { caption } = content;\n    if (caption && caption.text && caption.text.length > 0) {\n        return false;\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageLocation': {\n            return true;\n        }\n        case 'messagePhoto': {\n            return true;\n        }\n        case 'messageSticker': {\n            return true;\n        }\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageVideoNote': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isMessageUnread(chatId, messageId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) {\n        return false;\n    }\n\n    const { last_read_inbox_message_id, last_read_outbox_message_id } = chat;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) {\n        return false;\n    }\n\n    const { id, is_outgoing } = message;\n    const isMe = isMeChat(chatId);\n    if (is_outgoing && isMe) {\n        return false;\n    }\n\n    return is_outgoing ? id > last_read_outbox_message_id : id > last_read_inbox_message_id;\n}\n\nfunction getAuthor(message, t = k => k) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(forward_info.sender_user_id, null, t);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message, t);\n}\n\nfunction getTitle(message, t = k => k) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(sender_user_id, null, t);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction searchCurrentChat(event, text) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    const { chatId } = AppStore;\n\n    searchChat(chatId, text);\n}\n\nfunction getFormattedText(formattedText, t = k => k) {\n    if (formattedText['@type'] !== 'formattedText') return null;\n\n    const { text, entities } = formattedText;\n    if (!text) return null;\n    if (!entities) return text;\n\n    let deleteLineBreakAfterPre = false;\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < entities.length; i++) {\n        const entity = entities[i];\n        const { offset, length, type } = entity;\n\n        // skip nested entities\n        if (index > offset) {\n            continue;\n        }\n\n        let textBefore = substring(text, index, offset);\n        const textBeforeLength = textBefore.length;\n        if (textBefore) {\n            if (deleteLineBreakAfterPre && textBefore.length > 0 && textBefore[0] === '\\n') {\n                textBefore = textBefore.substr(1);\n                deleteLineBreakAfterPre = false;\n            }\n            if (textBefore) {\n                result.push(textBefore);\n            }\n        }\n\n        const entityKey = offset;\n        let entityText = substring(text, offset, offset + length);\n        if (deleteLineBreakAfterPre && entityText.length > 0 && entityText[0] === '\\n') {\n            entityText = entityText.substr(1);\n            deleteLineBreakAfterPre = false;\n        }\n\n        switch (type['@type']) {\n            case 'textEntityTypeBold': {\n                result.push(<strong key={entityKey}>{entityText}</strong>);\n                break;\n            }\n            case 'textEntityTypeBotCommand': {\n                const command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a key={entityKey} onClick={stopPropagation} href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeCashtag': {\n                result.push(\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeCode': {\n                result.push(<code key={entityKey}>{entityText}</code>);\n                break;\n            }\n            case 'textEntityTypeEmailAddress': {\n                result.push(\n                    <a\n                        key={entityKey}\n                        href={`mailto:${entityText}`}\n                        onClick={stopPropagation}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeHashtag': {\n                result.push(\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeItalic': {\n                result.push(<em key={entityKey}>{entityText}</em>);\n                break;\n            }\n            case 'textEntityTypeMentionName': {\n                result.push(\n                    <MentionLink key={entityKey} userId={type.user_id} title={getUserFullName(type.user_id, null, t)}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            }\n            case 'textEntityTypeMention': {\n                result.push(\n                    <MentionLink key={entityKey} username={entityText}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            }\n            case 'textEntityTypePhoneNumber': {\n                result.push(\n                    <a key={entityKey} href={`tel:${entityText}`} onClick={stopPropagation}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypePre': {\n                result.push(<pre key={entityKey}>{entityText}</pre>);\n                deleteLineBreakAfterPre = true;\n                break;\n            }\n            case 'textEntityTypePreCode': {\n                result.push(\n                    <pre key={entityKey}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                deleteLineBreakAfterPre = true;\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                const url = type.url ? type.url : entityText;\n\n                result.push(\n                    <SafeLink key={entityKey} url={url}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            case 'textEntityTypeUrl': {\n                result.push(\n                    <SafeLink key={entityKey} url={entityText}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += textBeforeLength + entity.length;\n    }\n\n    if (index < text.length) {\n        let textAfter = text.substring(index);\n        if (deleteLineBreakAfterPre && textAfter.length > 0 && textAfter[0] === '\\n') {\n            textAfter = textAfter.substr(1);\n        }\n        if (textAfter) {\n            result.push(textAfter);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message, meta, t = k => k) {\n    if (!message) return null;\n\n    let result = [];\n\n    const { content } = message;\n    if (!content) return [...result, meta];\n\n    const { text, caption } = content;\n\n    if (text && text['@type'] === 'formattedText' && text.text) {\n        result = getFormattedText(text, t);\n    } else if (caption && caption['@type'] === 'formattedText' && caption.text) {\n        const formattedText = getFormattedText(caption, t);\n        if (formattedText) {\n            result = result.concat(formattedText);\n        }\n    }\n\n    return result && result.length > 0 ? [...result, meta] : [];\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n\n    return dateFormat(d, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n    return dateFormat(d, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            return getUserFullName(sender_user_id, null, t);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterDuplicateMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction filterMessages(messages) {\n    return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document && document.file_name) {\n                return document.file_name + caption;\n            }\n\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(\n    location,\n    width = LOCATION_WIDTH,\n    height = LOCATION_HEIGHT,\n    zoom = LOCATION_ZOOM,\n    scale = LOCATION_SCALE\n) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${width},${height}&scale=${scale}&zoom=${zoom}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message, t = k => k) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message, t);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        // download file at loadMediaViewerContent instead\n        // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.user_id, true);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                // openDocument(audio, message, fileCancel);\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nexport function getReplyMinithumbnail(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { minithumbnail } = animation;\n            return minithumbnail || null;\n        }\n        case 'messageAudio': {\n            return null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return photo.minithumbnail || null;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { minithumbnail } = document;\n            return minithumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { minithumbnail } = animation;\n                if (minithumbnail) {\n                    return minithumbnail;\n                }\n            }\n\n            if (photo) {\n                return photo.minithumbnail || null;\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return photo.minithumbnail || null;\n        }\n        case 'messageSticker': {\n            return null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return photo.minithumbnail || null;\n                }\n                if (animation) {\n                    const { minithumbnail } = animation;\n                    return minithumbnail || null;\n                }\n                if (audio) {\n                    return null;\n                }\n                if (document) {\n                    const { minithumbnail } = document;\n                    return minithumbnail || null;\n                }\n                if (sticker) {\n                    return null;\n                }\n                if (video) {\n                    const { minithumbnail } = video;\n                    return minithumbnail || null;\n                }\n                if (video_note) {\n                    const { minithumbnail } = video_note;\n                    return minithumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { minithumbnail } = video;\n            return minithumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { minithumbnail } = video_note;\n            return minithumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getEmojiMatches(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return 0;\n\n    const { content } = message;\n    if (!content) return 0;\n    if (content['@type'] !== 'messageText') return 0;\n\n    const { text: textContent } = content;\n    if (!textContent) return;\n    if (textContent['@type'] !== 'formattedText') return 0;\n\n    const { text, entities } = textContent;\n    if (!text) return 0;\n    if (entities && entities.length > 0) return 0;\n\n    let lastIndex = 0;\n    let emojiMatches = 0;\n    let m;\n    const re = emojiRegex();\n    do {\n        m = re.exec(text);\n\n        if (m) {\n            emojiMatches += 1;\n            // none-emoji symbol between prev and current emojis or before first\n            if (lastIndex !== m.index) {\n                emojiMatches = 0;\n                break;\n            }\n            // more than 3 emojis in a row\n            if (emojiMatches > 3) {\n                emojiMatches = 0;\n                break;\n            }\n            lastIndex = re.lastIndex;\n        }\n        // none-emoji symbol at the end\n        if (!m && lastIndex !== text.length) {\n            emojiMatches = 0;\n            break;\n        }\n    } while (m);\n\n    return emojiMatches;\n}\n\nfunction messageComparatorDesc(left, right) {\n    return left.id - right.id;\n}\n\nfunction checkInclusion(index, entities) {\n    if (!entities) return false;\n    if (!entities.length) return false;\n\n    for (let i = 0; i < entities.length; i++) {\n        if (index >= entities[i].offset && index < entities[i].offset + entities[i].length) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkIntersection(startIndex, endIndex, entities) {\n    if (!entities) return false;\n    if (!entities.length) return false;\n\n    for (let i = 0; i < entities.length; i++) {\n        if (startIndex <= entities[i].offset && entities[i].offset + entities[i].length - 1 <= endIndex) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkEntity(startIndex, endIndex, entities) {\n    return (\n        !checkInclusion(startIndex, entities) &&\n        !checkInclusion(endIndex, entities) &&\n        !checkIntersection(startIndex, endIndex, entities)\n    );\n}\n\nfunction removeOffsetAfter(start, countToRemove, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    entities.forEach(e => {\n        if (e.offset > start) {\n            e.offset -= countToRemove;\n        }\n    });\n}\n\nfunction addOffsetAfter(start, countToAdd, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    entities.forEach(e => {\n        if (e.offset > start) {\n            e.offset += countToAdd;\n        }\n    });\n}\n\nfunction removeEntities(startIndex, endIndex, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    for (let i = 0; i < entities.length; i++) {\n        const entity = entities[i];\n        const entityStart = entity.offset;\n        const entityEnd = entity.offset + entity.length - 1;\n        if (\n            (startIndex <= entityStart && entityStart <= endIndex) ||\n            (startIndex <= entityEnd && entityEnd <= endIndex) ||\n            (entityStart < startIndex && endIndex > entityEnd)\n        ) {\n            entities.splice(i--, 1);\n        }\n    }\n}\n\nfunction addTextNode(offset, length, text, nodes) {\n    const node = document.createTextNode(text.substr(offset, length));\n    nodes.push(node);\n}\n\nexport function getNodes(text, entities, t = k => k) {\n    if (!text) return [];\n\n    entities = (entities || []).sort((a, b) => {\n        if (a.offset - b.offset !== 0) {\n            return a.offset - b.offset;\n        }\n\n        return b.length - a.length;\n    });\n\n    let nodes = [];\n    let offset = 0;\n    let prevEntity = null;\n    entities.forEach(x => {\n        if (x.offset - offset > 0) {\n            addTextNode(offset, x.offset - offset, text, nodes);\n            offset = x.offset;\n        }\n\n        if (!(prevEntity && checkInclusion(x.offset, [prevEntity]))) {\n            switch (x.type['@type']) {\n                case 'textEntityTypeBold': {\n                    const node = document.createElement('b');\n                    node.innerText = text.substr(x.offset, x.length);\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeBotCommand': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeCashtag': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeCode': {\n                    const node = document.createTextNode('`' + text.substr(x.offset, x.length) + '`');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeEmailAddress': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeHashtag': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeItalic': {\n                    const node = document.createElement('i');\n                    node.innerText = text.substr(x.offset, x.length);\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeMention': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeMentionName': {\n                    try {\n                        const { user_id } = x.type;\n                        const user = UserStore.get(user_id);\n                        if (user) {\n                            const node = document.createElement('a');\n                            // node.href = getDecodedUrl(url, false);\n                            node.title = getUserFullName(user_id, null, t);\n                            // node.target = '_blank';\n                            // node.rel = 'noopener noreferrer';\n                            node.dataset.userId = user_id;\n                            node.innerText = text.substr(x.offset, x.length);\n                            nodes.push(node);\n                        } else {\n                            addTextNode(x.offset, x.length, text, nodes);\n                        }\n                    } catch {\n                        addTextNode(x.offset, x.length, text, nodes);\n                    }\n                    break;\n                }\n                case 'textEntityTypePhoneNumber': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypePre': {\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypePreCode': {\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeTextUrl': {\n                    try {\n                        const { url } = x.type;\n\n                        const node = document.createElement('a');\n                        node.href = getDecodedUrl(url, false);\n                        node.title = getDecodedUrl(url, false);\n                        node.target = '_blank';\n                        node.rel = 'noopener noreferrer';\n                        node.innerText = text.substr(x.offset, x.length);\n                        nodes.push(node);\n                    } catch {\n                        addTextNode(x.offset, x.length, text, nodes);\n                    }\n                    break;\n                }\n                case 'textEntityTypeUrl': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                default: {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n            }\n\n            prevEntity = x;\n            offset += x.length;\n        }\n    });\n\n    if (offset < text.length) {\n        addTextNode(offset, text.length - offset, text, nodes);\n    }\n\n    return nodes;\n}\n\n// based on code from official Android Telegram client\n// https://github.com/DrKLO/Telegram/blob/28eb8dfd0ef959fd5ad7d5d22f1d32879707c0a0/TMessagesProj/src/main/java/org/telegram/messenger/MediaDataController.java#L3782\nexport function getEntities(text) {\n    const entities = [];\n    if (!text) return { text, entities };\n\n    text = text.replace(/<div><br><\\/div>/gi, '<br>');\n    text = text.replace(/<div>/gi, '<br>');\n    text = text.replace(/<\\/div>/gi, '');\n    text = text.split('<br>').join('\\n');\n\n    // 0 looking for html entities\n    text = getHTMLEntities(text, entities);\n\n    // 1 looking for ``` and ` in order to find mono and pre entities\n    text = getMonoPreEntities(text, entities);\n\n    // 2 looking for bold, italic entities\n    text = getBoldItalicEntities(text, entities);\n\n    return { text, entities };\n}\n\nexport function getHTMLEntities(text, entities) {\n    const result = new DOMParser().parseFromString(text, 'text/html');\n\n    let offset = 0;\n    let length = 0;\n\n    let finalText = '';\n    result.body.childNodes.forEach(node => {\n        const { textContent, nodeName } = node;\n\n        length = textContent.length;\n        finalText += textContent;\n\n        if (!checkEntity(offset, offset + length - 1, entities)) {\n            return;\n        }\n\n        switch (nodeName) {\n            case '#text': {\n                offset += length;\n                break;\n            }\n            case 'A': {\n                if (node.dataset.userId) {\n                    entities.push({\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeMentionName', user_id: node.dataset.userId },\n                        textContent: finalText.substring(offset, offset + length)\n                    });\n                } else if (node.href) {\n                    entities.push({\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeTextUrl', url: node.href },\n                        textContent: finalText.substring(offset, offset + length)\n                    });\n                }\n                offset += length;\n                break;\n            }\n            case 'B':\n            case 'STRONG': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeBold' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'BR': {\n                break;\n            }\n            case 'CODE': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeCode' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'I':\n            case 'EM': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeItalic' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'PRE': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypePre' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            default: {\n                offset += length;\n                break;\n            }\n        }\n    });\n    text = finalText;\n\n    return text;\n}\n\nexport function getMonoPreEntities(text, entities) {\n    const mono = '`';\n    const pre = '```';\n    let isPre = false;\n\n    let index = -1;     // first index of end tag\n    let lastIndex = 0;  // first index after end tag\n    let start = -1;     // first index of start tag\n\n    let offset = 0, length = 0;\n\n    while ((index = text.indexOf(isPre ? pre : mono, lastIndex)) !== -1) {\n        if (start === -1) {\n            // find start tag\n            isPre = text.length - index > 2 && text[index + 1] === mono && text[index + 2] === mono;\n            start = index;\n            lastIndex = index + (isPre ? 3 : 1);\n        } else {\n            // find end tag\n            for (let i = index + (isPre ? 3 : 1); i < text.length; i++) {\n                if (text[i] === mono) {\n                    index++;\n                } else {\n                    break;\n                }\n            }\n\n            lastIndex = index + (isPre ? 3 : 1);\n            if (isPre) {\n                // add pre tag\n\n                let textBefore = text.substring(0, start);\n                let textContent = text.substring(start + 3, index);\n                let textAfter = text.substring(index + 3, text.length);\n\n                if (textContent.length > 0) {\n                    offset = start;\n                    length = index - start - 3;\n\n                    text = textBefore + textContent + textAfter;\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        language: '',\n                        type: { '@type': 'textEntityTypePre' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeEntities(offset, offset + length - 1 + 6);\n                    removeOffsetAfter(offset + length, 6, entities);\n                    entities.push(entity);\n                    lastIndex -= 6;\n\n                    // clean text before\n                    if (textBefore.length > 0) {\n                        const lastChar = textBefore[textBefore.length - 1];\n                        if (lastChar !== '\\n') {\n                            if (lastChar === ' ' || lastChar === '\\xA0') {\n                                textBefore = textBefore.substr(0, textBefore.length - 1) + '\\n';\n                                text = textBefore + textContent + textAfter;\n                            } else {\n                                textBefore += '\\n';\n                                text = textBefore + textContent + textAfter;\n                                addOffsetAfter(offset - 1, 1, entities);\n                                lastIndex += 1;\n                            }\n                        }\n                    }\n\n                    // clean text after\n                    if (textAfter.length > 0) {\n                        const firstChar = textAfter[0];\n                        if (firstChar !== '\\n') {\n                            if (firstChar === ' ' || firstChar === '\\xA0') {\n                                textAfter = '\\n' + textAfter.substr(1);\n                                text = textBefore + textContent + textAfter;\n                            } else {\n                                textAfter = '\\n' + textAfter;\n                                text = textBefore + textContent + textAfter;\n                                addOffsetAfter(offset + length - 1, 1, entities);\n                                lastIndex += 1;\n                            }\n                        }\n                    }\n\n                    // clean text content\n                    if (textContent.length > 2) {\n                        if (textContent[0] === '\\n') {\n                            textContent = textContent.substring(1);\n                            text = textBefore + textContent + textAfter;\n                            entity.length -= 1;\n                            entity.textContent = textContent;\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\n                            lastIndex -= 1;\n                        }\n                    }\n\n                    if (textContent.length > 2) {\n                        if (textContent[textContent.length - 1] === '\\n') {\n                            textContent = textContent.substring(0, textContent.length - 1);\n                            text = textBefore + textContent + textAfter;\n                            entity.length -= 1;\n                            entity.textContent = textContent;\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\n                            lastIndex -= 1;\n                        }\n                    }\n                }\n            } else {\n                // add code tag\n                if (start + 1 !== index) {\n                    offset = start;\n                    length = index - start - 1;\n\n                    text =\n                        text.substring(0, start) +\n                        text.substring(start + 1, index) +\n                        text.substring(index + 1, text.length);\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeCode' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeEntities(offset, offset + length - 1 + 2);\n                    removeOffsetAfter(offset + length, 2, entities);\n                    entities.push(entity);\n                    lastIndex -= 2;\n                }\n            }\n\n            start = -1;\n            isPre = false;\n        }\n    }\n\n    // 1.1 case when ``` is one ` mono symbol\n    if (start !== -1 && isPre) {\n        offset = start;\n        length = 1;\n\n        if (checkEntity(offset, offset + length + 2 - 1, entities)) {\n            text = text.substring(0, start) + text.substring(start + 2, text.length);\n\n            const entity = {\n                '@type': 'textEntity',\n                offset,\n                length,\n                type: { '@type': 'textEntityTypeCode' },\n                textContent: text.substring(offset, offset + length)\n            };\n            removeEntities(offset, offset + length - 1 + 2);\n            removeOffsetAfter(offset + length, 2, entities);\n            entities.push(entity);\n        }\n    }\n\n    return text;\n}\n\nexport function getBoldItalicEntities(text, entities) {\n    const bold = '**';\n    const italic = '__';\n\n\n    let index = -1;     // first index of end tag\n    let lastIndex = 0;  // first index after end tag\n    let start = -1;     // first index of start tag\n\n    let offset = 0, length = 0;\n\n    for (let c = 0; c < 2; c++) {\n        lastIndex = 0;\n        start = -1;\n        const checkString = c === 0 ? bold : italic;\n        const checkChar = c === 0 ? '*' : '_';\n        while ((index = text.indexOf(checkString, lastIndex)) !== -1) {\n            if (start === -1) {\n                const prevChar = index === 0 ? ' ' : text[index - 1];\n                if (\n                    !checkInclusion(index, entities) &&\n                    (prevChar === ' ' || prevChar === '\\xA0' || prevChar === '\\n')\n                ) {\n                    start = index;\n                }\n                lastIndex = index + 2;\n            } else {\n                for (let a = index + 2; a < text.length; a++) {\n                    if (text[a] === checkChar) {\n                        index++;\n                    } else {\n                        break;\n                    }\n                }\n                lastIndex = index + 2;\n                if (checkInclusion(index, entities) || checkIntersection(start, index, entities)) {\n                    start = -1;\n                    continue;\n                }\n                if (start + 2 !== index) {\n                    offset = start;\n                    length = index - start - 2;\n                    text =\n                        text.substring(0, start) +\n                        text.substring(start + 2, index) +\n                        text.substring(index + 2, text.length);\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        language: '',\n                        type: { '@type': c === 0 ? 'textEntityTypeBold' : 'textEntityTypeItalic' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeOffsetAfter(offset + length, 4, entities);\n                    entities.push(entity);\n                    lastIndex -= 4;\n                }\n                start = -1;\n            }\n        }\n    }\n\n    return text;\n}\n\nexport function canMessageBeEdited(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { can_be_edited } = message;\n\n    return can_be_edited;\n}\n\nexport function showMessageForward(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { forward_info, content } = message;\n\n    return forward_info && content && content['@type'] !== 'messageSticker' && content['@type'] !== 'messageAudio';\n}\n\nexport function isTextMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n\n    return content && content['@type'] === 'messageText';\n}\n\nexport function isMessagePinned(chatId, messageId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    return chat.pinned_message_id === messageId;\n}\n\nexport function canMessageBeUnvoted(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return;\n    if (content['@type'] !== 'messagePoll') return;\n\n    const { poll } = content;\n    if (!poll) return false;\n\n    const { type, is_closed, options } = poll;\n    if (!type) return false;\n    if (type['@type'] !== 'pollTypeRegular') return false;\n    if (is_closed) return false;\n\n    return options.some(x => x.is_chosen || x.is_being_chosen);\n}\n\nexport function canMessageBeClosed(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content, can_be_edited } = message;\n    if (!content) return;\n    if (content['@type'] !== 'messagePoll') return;\n\n    return can_be_edited;\n}\n\nexport function canMessageBeForwarded(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n\n    return message && message.can_be_forwarded;\n}\n\nexport function canMessageBeDeleted(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n\n    return message && (message.can_be_deleted_only_for_self || message.can_be_deleted_for_all_users);\n}\n\nexport function getMessageStyle(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { width, height, thumbnail } = animation;\n\n            const size = { width, height } || thumbnail;\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const size = getSize(photo.sizes, PHOTO_SIZE);\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail, width, height } = video;\n\n            const size = { width, height } || thumbnail;\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n    }\n\n    return null;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterDuplicateMessages,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize,\n    getEmojiMatches,\n    messageComparatorDesc,\n    substring,\n    stopPropagation\n};\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M5.29289322,5.29289322 C5.68341751,4.90236893 6.31658249,4.90236893 6.70710678,5.29289322 L6.70710678,5.29289322 L12,10.585 L17.2928932,5.29289322 C17.6834175,4.90236893 18.3165825,4.90236893 18.7071068,5.29289322 C19.0976311,5.68341751 19.0976311,6.31658249 18.7071068,6.70710678 L13.415,12 L18.7071068,17.2928932 C19.0675907,17.6533772 19.0953203,18.2206082 18.7902954,18.6128994 L18.7071068,18.7071068 C18.3165825,19.0976311 17.6834175,19.0976311 17.2928932,18.7071068 L17.2928932,18.7071068 L12,13.415 L6.70710678,18.7071068 C6.31658249,19.0976311 5.68341751,19.0976311 5.29289322,18.7071068 C4.90236893,18.3165825 4.90236893,17.6834175 5.29289322,17.2928932 L10.585,12 L5.29289322,6.70710678 C4.93240926,6.34662282 4.90467972,5.77939176 5.20970461,5.38710056 Z' />,\n    'Close'\n);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallIcon from '@material-ui/icons/Call';\nimport { getCallTitle } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport './Call.css';\n\nclass Call extends React.Component {\n    render() {\n        const { chatId, messageId, duration, openMedia, title, meta } = this.props;\n\n        const callTitle = getCallTitle(chatId, messageId);\n        const durationString = getDurationString(Math.floor(duration || 0));\n\n        return (\n            <div className={classNames('document', { 'media-title': title })}>\n                <IconButton color='primary' aria-label='Call'>\n                    <CallIcon fontSize='large' />\n                </IconButton>\n                <div className='document-content'>\n                    <div className='document-title'>{callTitle}</div>\n                    <div className='document-action'>\n                        {durationString}\n                        {meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCall.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nexport default Call;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport UserTile from '../../Tile/UserTile';\nimport { formatPhoneNumber } from '../../../Utils/Phone';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, title, openMedia, meta, caption, t } = this.props;\n        if (!contact) return null;\n\n        const { user_id: id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id,\n            first_name,\n            last_name\n        };\n\n        const fullName = getUserFullName(id, user, t);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className={classNames('contact', { 'media-title': title })}>\n                <div className='contact-tile'>\n                    <UserTile userId={id} firstName={first_name} lastName={last_name} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>\n                        {number}\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(Contact);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport './Game.css';\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { game, t } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text, t);\n\n        return (\n            <div className='game'>\n                <div className='border' />\n                <div className='game-wrapper'>\n                    {title && <div className='game-title'>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Game);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia, meta, title, caption } = this.props;\n        if (!venue) return null;\n\n        const { title: venueTitle, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location\n                    type='venue'\n                    chatId={chatId}\n                    messageId={messageId}\n                    location={location}\n                    openMedia={openMedia}\n                    title={title}\n                    caption={caption}\n                />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{venueTitle}</div>\n                    </a>\n                    <div className='venue-subtitle'>\n                        {address}\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Venue;\n","export function LOG(message, ...optionalParams) {\n    console.log(message, ...optionalParams);\n}\n\nexport function ERROR(message, ...optionalParams) {\n    console.error(message, ...optionalParams);\n}\n\nexport function logSourceBufferRanges (sourceBuffer, currentTime, duration) {\n    const ranges = [];\n    for (let i = 0; i < sourceBuffer.buffered.length; i++) {\n        ranges.push({ start: sourceBuffer.buffered.start(i), end: sourceBuffer.buffered.end(i)})\n    }\n\n    LOG('[SourceBuffer] ranges', sourceBuffer.id, currentTime, duration, sourceBuffer.pendingUpdates.length, JSON.stringify(ranges));\n}\n\nexport const strtokBITSET = {\n    get: (buf, off, bit) => {\n        return (buf[off] & (1 << bit)) !== 0;\n    },\n    len: 1\n};\n\nfunction readUTF16String(buffer) {\n    let offset = 2;\n    let label = 'utf-16';\n    if (buffer[0] === 0xFE && buffer[1] === 0xFF) { // big endian\n        offset = 2;\n        label = 'utf-16be';\n    } else if (buffer[0] === 0xFF && buffer[1] === 0xFE) { // little endian\n        offset = 2;\n        label = 'utf-16le';\n    }\n\n    return new TextDecoder(label).decode(buffer.slice(offset));\n}\n\nfunction readUTF8String(buffer) {\n    return new TextDecoder('utf-8').decode(buffer);\n}\n\nfunction readWindows1292String(buffer) {\n    return new TextDecoder('iso-8859-1').decode(buffer);\n}\n\n/**\n *\n * @param buffer Decoder input data\n * @param encoding 'utf16le' | 'utf16' | 'utf8' | 'iso-8859-1'\n * @return {string}\n */\nexport function decodeString(buffer, encoding) {\n    // annoying workaround for a double BOM issue\n    // https://github.com/leetreveil/musicmetadata/issues/84\n    if (buffer[0] === 0xFF && buffer[1] === 0xFE && buffer[2] === 0xFE && buffer[3] === 0xFF) {\n        buffer = buffer.slice(2);\n    }\n\n    if (encoding === 'utf16le' || encoding === 'utf16') {\n        return readUTF16String(buffer);\n    } else if (encoding === 'utf8') {\n        return readUTF8String(buffer);\n    } else if (encoding === 'iso-8859-1') {\n        return readWindows1292String(buffer);\n    }\n\n    throw Error(encoding + ' encoding is not supported!');\n}\n\nexport function trimRightNull(x) {\n    const pos0 = x.indexOf('\\0');\n    return pos0 === -1 ? x : x.substr(0, pos0);\n}\n\n/**\n * Read bit-aligned number start from buffer\n * Total offset in bits = byteOffset * 8 + bitOffset\n * @param buf Byte buffer\n * @param byteOffset Starting offset in bytes\n * @param bitOffset Starting offset in bits: 0 = lsb\n * @param len Length of number in bits\n * @return {number} decoded bit aligned number\n */\nexport function getBitAllignedNumber(buf, byteOffset, bitOffset, len){\n    const byteOff = byteOffset + ~~(bitOffset / 8);\n    const bitOff = bitOffset % 8;\n    let value = buf[byteOff];\n    value &= 0xff >> bitOff;\n    const bitsRead = 8 - bitOff;\n    const bitsLeft = len - bitsRead;\n    if (bitsLeft < 0) {\n        value >>= (8 - bitOff - len);\n    } else if (bitsLeft > 0) {\n        value <<= bitsLeft;\n        value |= getBitAllignedNumber(buf, byteOffset, bitOffset + bitsRead, bitsLeft);\n    }\n    return value;\n}\n\n/**\n * Read bit-aligned number start from buffer\n * Total offset in bits = byteOffset * 8 + bitOffset\n * @param buf Byte buffer\n * @param byteOffset Starting offset in bytes\n * @param bitOffset Starting offset in bits: 0 = most significant bit, 7 is least significant bit\n * @return {boolean} decoded bit aligned number\n */\nexport function isBitSet(buf, byteOffset, bitOffset) {\n    return getBitAllignedNumber(buf, byteOffset, bitOffset, 1) === 1;\n}","import { trimRightNull } from './Common';\n\n/**\n * 28 bits (representing up to 256MB) integer, the msb is 0 to avoid 'false syncsignals'.\n * 4 * %0xxxxxxx\n */\nexport const UINT32SYNCSAFE = {\n    get: (buf, off) => {\n        return buf[off + 3] & 0x7f | (buf[off + 2] << 7) | (buf[off + 1] << 14) | (buf[off] << 21);\n    },\n    len: 4\n};\n\nexport const UINT8 = {\n    get: (buf, off) => {\n        return buf[off];\n    }\n}\n\nexport const UINT32_BE = {\n    get: (buf, off) => {\n        return buf[off + 3] | (buf[off + 2] << 8) | (buf[off + 1] << 16) | (buf[off] << 24);\n    }\n}\n\nexport const UINT24_BE = {\n    get: (buf, off) => {\n        return buf[off + 2] | (buf[off + 1] << 8) | (buf[off] << 16);\n    }\n}\n\nexport const UINT16_BE = {\n    get: (buf, off) => {\n        return buf[off + 1] | (buf[off] << 8);\n    }\n}\n\nexport const ASCII_TEXT = {\n    get: (buf, off, len) => {\n        return new TextDecoder('ascii').decode(buf.slice(off, off + len));\n    }\n}\n\nexport const Id3v1StringType = {\n    get: (buf, off, len) => {\n        let value = new TextDecoder('ascii').decode(buf.slice(off, off + len));\n        value = trimRightNull(value);\n        value = value.trim();\n        return value.length > 0 ? value : undefined;\n    }\n}","import {Id3v1StringType, UINT8} from '../../Utils/Token';\n\n/**\n * Spec: http://id3.org/ID3v1\n * Wiki: https://en.wikipedia.org/wiki/ID3\n */\nexport const ID3v1Header = {\n    len: 128,\n\n    /**\n     * @param buf Buffer possibly holding the 128 bytes ID3v1.1 metadata header\n     * @param off Offset in buffer in bytes\n     * @returns ID3v1.1 header if first 3 bytes equals 'TAG', otherwise null is returned\n     */\n    get: (buf, off) => {\n        const header = Id3v1StringType.get(buf, off, 3);\n        return header === 'TAG' ? {\n            header,\n            title: Id3v1StringType.get(buf, off + 3, 30),\n            artist: Id3v1StringType.get(buf, off + 33, 30),\n            album: Id3v1StringType.get(buf, off + 63, 30),\n            year: Id3v1StringType.get(buf, off + 93, 4),\n            comment: Id3v1StringType.get(buf, off + 97, 28),\n            // ID3v1.1 separator for track\n            zeroByte: UINT8.get(buf, off + 127),\n            // track: ID3v1.1 field added by Michael Mutschler\n            track: UINT8.get(buf, off + 126),\n            genre: UINT8.get(buf, off + 127)\n        } : null;\n    }\n};","import {ID3v1Header} from './ID3v1Token';\nimport {Id3v1StringType} from '../../Utils/Token';\n\nexport class ID3v1Parser {\n    parse(buffer) {\n        if (buffer.length < 128) {\n            console.log('[ID3v1Parser] Skip checking for ID3v1 because the file-size is less than 128 bytes');\n            return null;\n        }\n\n        return ID3v1Header.get(buffer, buffer.length - ID3v1Header.len);\n    }\n}\n\nexport function hasID3v1Header(buffer) {\n    if (buffer.length >= 128) {\n        const tag = Id3v1StringType.get(buffer, buffer.length - 128, 3);\n        return tag === 'TAG';\n    }\n    return false;\n}","import { strtokBITSET } from '../../Utils/Common';\nimport { UINT16_BE, UINT32_BE, ASCII_TEXT, UINT32SYNCSAFE } from '../../Utils/Token';\n\n/**\n * ID3v2 header\n * Ref: http://id3.org/id3v2.3.0#ID3v2_header\n */\nexport const ID3v2Header = {\n    get: (buffer, offset) => {\n        // ID3v2/file identifier   'ID3'\n        const fileIdentifier = ASCII_TEXT.get(buffer, offset, 3); // new TextDecoder('ascii').decode(buffer.slice(offset, 3));\n\n        // ID3v2 versionIndex\n        const version = {\n            major: buffer[offset + 3],\n            revision: buffer[offset + 4]\n        };\n\n        // ID3v2 flags\n        const flags = {\n            raw: buffer[offset + 5],\n            // Unsynchronisation\n            unsynchronisation: strtokBITSET.get(buffer, offset + 5, 7),\n            // Extended header\n            isExtendedHeader: strtokBITSET.get(buffer, offset + 5, 6),\n            // Experimental indicator\n            expIndicator: strtokBITSET.get(buffer, offset + 5, 5),\n            footer: strtokBITSET.get(buffer, offset + 5, 4)\n        };\n\n        // ID3v2 size\n        // The ID3v2 tag size is the size of the complete tag after unsychronisation, including padding, excluding the header but not excluding the extended header\n        const size = UINT32SYNCSAFE.get(buffer, offset + 6);\n\n        return {\n            fileIdentifier,\n            version,\n            flags,\n            size\n        };\n    },\n    len: 10\n}\n\n/**\n * ID3v2 header\n * Ref: http://id3.org/id3v2.3.0#ID3v2_extended_header\n */\nexport const ExtendedHeader = {\n    len: 10,\n\n    get: (buf, off) => {\n        // Extended header size (10 or 6 excluding itself)\n        const size = UINT32_BE.get(buf, off);\n\n        // Extended Flags\n        const extendedFlags = UINT16_BE.get(buf, off + 4);\n\n        // Size of padding\n        const sizeOfPadding = UINT32_BE.get(buf, off + 6);\n\n        // CRC data present\n        const crcDataPresent = strtokBITSET.get(buf, off + 4, 31);\n\n        const crcData = crcDataPresent ? UINT32_BE.get(buf, off + 10) : null;\n\n        return {\n            size,\n            extendedFlags,\n            sizeOfPadding,\n            crcDataPresent,\n            crcData\n        };\n    }\n}\n\nexport const TextEncodingToken = {\n    len: 1,\n\n    get: (buf, off) => {\n        switch (buf[off]) {\n            case 0x00:\n                return { encoding: 'iso-8859-1' }; // binary\n            case 0x01:\n                return { encoding: 'utf16', bom: true };\n            case 0x02:\n                return { encoding: 'utf16', bom: false };\n            case 0x03:\n                return { encoding: 'utf8', bom: false };\n            default:\n                return { encoding: 'utf8', bom: false };\n\n        }\n    }\n};","import {TextEncodingToken} from './ID3v2Token';\nimport {decodeString} from '../../Utils/Common';\n\nconst defaultEnc = 'iso-8859-1';\n\nexport class FrameParser {\n\n    /**\n     * Create id3v2 frame parser\n     * @param major - Major version, e.g. (4) for  id3v2.4\n     */\n    constructor(major)  {\n        this.major = major;\n    }\n\n    readData(b, type) {\n\n        if (b.length === 0) {\n            console.log(`id3v2.${this.major} header has empty tag type=${type}`);\n            return;\n        }\n\n        const {encoding, bom} = TextEncodingToken.get(b, 0);\n        let output = [];\n\n        console.debug(`Parsing tag type=${type}, encoding=${encoding}, bom=${bom}`);\n        switch (type) {\n            case 'TPE1': // 4.2.1. Text information frames - details\n            case 'TIT2': {\n                const text = decodeString(b.slice(1), encoding).replace(/\\x00+$/, '');\n                output = this.major >= 4 ? this.splitValue(type, text) : [text];\n            }\n            default:\n                //console.log('Warning: unsupported id3v2-tag-type: ' + type);\n                break;\n        }\n\n        return output;\n    }\n\n    /**\n     * id3v2.4 defines that multiple T* values are separated by 0x00\n     * id3v2.3 defines that TCOM, TEXT, TOLY, TOPE & TPE1 values are separated by /\n     * @param tag - Tag name\n     * @param text - Concatenated tag value\n     * @returns Split tag value\n     */\n    splitValue(tag, text) {\n        let values;\n        if (this.major < 4) {\n            values = text.split(/\\x00/g);\n            if (values.length > 1) {\n                console.log(`ID3v2.${this.major} ${tag} uses non standard null-separator.`);\n            } else {\n                values = text.split(/\\//g);\n            }\n        } else {\n            values = text.split(/\\x00/g);\n        }\n        return FrameParser.trimArray(values);\n    }\n\n    static trimArray(values) {\n        return values.map(value => value.replace(/\\x00+$/, '').trim());\n    }\n}","import { ExtendedHeader, ID3v2Header } from './ID3v2Token';\nimport { strtokBITSET } from '../../Utils/Common';\nimport { ASCII_TEXT, UINT24_BE, UINT32_BE, UINT32SYNCSAFE } from '../../Utils/Token';\nimport { FrameParser } from './FrameParser';\n\nexport class ID3v2Parser {\n    static removeUnsyncBytes(buffer) {\n        let readI = 0;\n        let writeI = 0;\n        while (readI < buffer.length - 1) {\n            if (readI !== writeI) {\n                buffer[writeI] = buffer[readI];\n            }\n            readI += (buffer[readI] === 0xFF && buffer[readI + 1] === 0) ? 2 : 1;\n            writeI++;\n        }\n        if (readI < buffer.length) {\n            buffer[writeI++] = buffer[readI];\n        }\n        return buffer.slice(0, writeI);\n    }\n\n    static readFrameData(buf, frameHeader, majorVer, includeCovers, warningCollector) {\n        const frameParser = new FrameParser(majorVer, warningCollector);\n        switch (majorVer) {\n            case 2:\n                return frameParser.readData(buf, frameHeader.id, includeCovers);\n            case 3:\n            case 4:\n                if (frameHeader.flags.format.unsynchronisation) {\n                    buf = ID3v2Parser.removeUnsyncBytes(buf);\n                }\n                if (frameHeader.flags.format.data_length_indicator) {\n                    buf = buf.slice(4, buf.length);\n                }\n                return frameParser.readData(buf, frameHeader.id, includeCovers);\n            default:\n                throw new Error('Unexpected majorVer: ' + majorVer);\n        }\n    }\n\n    static readFrameFlags(b) {\n        return {\n            status: {\n                tag_alter_preservation: strtokBITSET.get(b, 0, 6),\n                file_alter_preservation: strtokBITSET.get(b, 0, 5),\n                read_only: strtokBITSET.get(b, 0, 4)\n            },\n            format: {\n                grouping_identity: strtokBITSET.get(b, 1, 7),\n                compression: strtokBITSET.get(b, 1, 3),\n                encryption: strtokBITSET.get(b, 1, 2),\n                unsynchronisation: strtokBITSET.get(b, 1, 1),\n                data_length_indicator: strtokBITSET.get(b, 1, 0)\n            }\n        };\n    }\n\n    static readFrameHeader(v, majorVer) {\n        let header;\n        switch (majorVer) {\n\n            case 2:\n                header = {\n                    id: ASCII_TEXT.get(v, 0, 3),\n                    length: UINT24_BE.get(v, 3)\n                };\n                break;\n\n            case 3:\n                header = {\n                    id: ASCII_TEXT.get(v, 0, 4),\n                    length: UINT32_BE.get(v, 4),\n                    flags: ID3v2Parser.readFrameFlags(v.slice(8, 10))\n                };\n                break;\n\n            case 4:\n                header = {\n                    id: ASCII_TEXT.get(v, 0, 4),\n                    length: UINT32SYNCSAFE.get(v, 4),\n                    flags: ID3v2Parser.readFrameFlags(v.slice(8, 10))\n                };\n                break;\n\n            default:\n                throw new Error('Unexpected majorVer: ' + majorVer);\n        }\n\n        return header;\n    }\n\n    static getFrameHeaderLength(majorVer) {\n        switch (majorVer) {\n            case 2:\n                return 6;\n            case 3:\n            case 4:\n                return 10;\n            default:\n                throw new Error('header versionIndex is incorrect');\n        }\n    }\n\n    parseMetadata(data) {\n        let offset = 0;\n        const tags = [];\n\n        while (true) {\n            if (offset === data.length) break;\n\n            const frameHeaderLength = ID3v2Parser.getFrameHeaderLength(this.id3Header.version.major);\n            if (offset + frameHeaderLength > data.length) {\n                console.log('Illegal ID3v2 tag length');\n                break;\n            }\n\n            const frameHeaderBytes = data.slice(offset, offset += frameHeaderLength);\n            const frameHeader = ID3v2Parser.readFrameHeader(frameHeaderBytes, this.id3Header.version.major);\n\n            // Last frame. Check first char is a letter, bit of defensive programming\n            if (frameHeader.id === '' || frameHeader.id === '\\u0000\\u0000\\u0000\\u0000' || 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.indexOf(frameHeader.id[0]) === -1) {\n                console.log('Illegal ID3v2 tag header', frameHeaderBytes, frameHeader.id);\n                break;\n            }\n\n            const frameDataBytes = data.slice(offset, offset += frameHeader.length);\n            const values = ID3v2Parser.readFrameData(frameDataBytes, frameHeader, this.id3Header.version.major, true, []);\n\n            console.log('[ID3v2Parser] parseMetadata', offset, frameHeader.length, frameHeader.id, values);\n            tags.push({ id: frameHeader.id, value: values });\n        }\n        return tags;\n    }\n\n    parseExtendedHeader(buffer) {\n        const extendedHeader = ExtendedHeader.get(buffer, 10);\n\n        return this.parseId3Data(buffer, this.id3Header.size + extendedHeader.size + 4, this.id3Header.size);\n    }\n\n    parseId3Data(buf, offset, dataLen) {\n        const buffer = buf.slice(offset, offset + dataLen);\n        return this.parseMetadata(buffer)\n    }\n\n    parse(buffer) {\n        const id3Header = ID3v2Header.get(buffer, 0);\n\n        this.id3Header = id3Header;\n        if (id3Header.fileIdentifier !== 'ID3') {\n            throw new Error('expected ID3-header file-identifier \\'ID3\\' was not found');\n        }\n\n        if (id3Header.flags.isExtendedHeader) {\n            return this.parseExtendedHeader(buffer);\n        } else {\n            return this.parseId3Data(buffer, ID3v2Header.len, id3Header.size);\n        }\n    }\n}\n\nexport function hasID3v2Header(buffer) {\n    if (buffer.length > 10) {\n        const tag = ASCII_TEXT.get(buffer, 0, 3);\n        return tag === 'ID3';\n    }\n    return false;\n}","/*\n*license\n */\n\nimport { hasID3v1Header, ID3v1Parser } from './ID3v1/ID3v1Parser';\nimport { hasID3v2Header, ID3v2Parser } from './ID3v2/ID3v2Parser';\n\nexport class ID3Parser {\n    getArrayBuffer(blob) {\n        return new Promise((resolve) => {\n            let fr = new FileReader();\n            fr.onload = () => {\n                resolve(fr.result);\n            };\n            fr.readAsArrayBuffer(blob);\n        })\n    }\n\n    async parse(file) {\n        const tags = { artist: '', title: '' };\n        const result = { tags };\n\n        if (!file) return result;\n\n        const arrayBuffer = await this.getArrayBuffer(file);\n        if (!arrayBuffer) return result;\n\n        const buffer = new Uint8Array(arrayBuffer);\n        if (!buffer) return result;\n\n        if (hasID3v2Header(buffer)) {\n            const id3Tags = new ID3v2Parser().parse(buffer);\n            if (id3Tags) {\n                const artistTag = id3Tags.find(x => x.id === 'TPE1');\n                if (artistTag && artistTag.value.length > 0){\n                    tags.artist = artistTag.value[0];\n                }\n                const titleTag = id3Tags.find(x => x.id === 'TIT2');\n                if (titleTag && titleTag.value.length > 0){\n                    tags.title = titleTag.value[0];\n                }\n            }\n        } else if (hasID3v1Header(buffer)) {\n            const id3Tags = new ID3v1Parser().parse(buffer);\n\n            if (id3Tags) {\n                tags.artist = id3Tags.artist;\n                tags.title = id3Tags.title;\n            }\n        }\n\n        return result;\n    }\n}","/*\n*license\n */\n\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../Constants';\nimport MessageStore from '../Stores/MessageStore';\nimport Animation from '../Components/Message/Media/Animation';\nimport Audio from '../Components/Message/Media/Audio';\nimport Call from '../Components/Message/Media/Call';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker, { StickerSourceEnum } from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport React from 'react';\nimport { getRandomInt, readImageSize } from './Common';\nimport FileStore from '../Stores/FileStore';\nimport { ID3Parser } from '../Components/Player/Steaming/MP3/ID3Parser';\n\nexport function getCallTitle(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content, is_outgoing } = message;\n    if (content['@type'] !== 'messageCall') return null;\n\n    const { discard_reason, duration } = content;\n    if (is_outgoing) {\n        return discard_reason['@type'] === 'callDiscardReasonMissed' ? 'Cancelled Call' : 'Outgoing Call';\n    } else if (discard_reason['@type'] === 'callDiscardReasonMissed') {\n        return 'Missed Call';\n    } else if (discard_reason['@type'] === 'callDiscardReasonDeclined') {\n        return 'Declined Call';\n    }\n\n    return 'Incoming Call';\n}\n\nexport function isEditedMedia(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageAudio': {\n            return true;\n        }\n        case 'messageDocument': {\n            return true;\n        }\n        case 'messagePhoto': {\n            return true;\n        }\n        case 'messageVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isValidAnimatedSticker(sticker, chatId, messageId) {\n    if (!sticker) return false;\n    if (!sticker.is_animated) return false;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (message) {\n        const { sending_state } = message;\n        if (sending_state && !sticker.set_id) return false;\n    }\n\n    return true;\n}\n\nexport function isBlurredThumbnail(thumbnail, blurredSize = THUMBNAIL_BLURRED_SIZE_90) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < blurredSize;\n}\n\nexport function getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nexport function getAudioShortTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer ? `${trimmedPerformer || 'Unknown Artist'}` : file_name;\n}\n\nexport function getAudioSubtitle(audio) {\n    if (!audio) return null;\n\n    const { title } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n\n    return trimmedTitle || 'Unknown Track';\n}\n\nexport function getStickers(sets) {\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\n}\n\nexport function getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\n    const result = [];\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\n    if (row === -1) return [];\n    if (column === -1) return [];\n\n    const prevPrevRow = row - 2;\n    const prevRow = row - 1;\n    const nextRow = row + 1;\n    const nextNextRow = row + 2;\n\n    const prevColumn = column - 1;\n    const nextColumn = column + 1;\n\n    let skipPrevRow = prevRow < 0;\n    let skipPrePrevRow = prevPrevRow < 0;\n    if (!skipPrevRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipPrevRow = true;\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\n                skipPrePrevRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipPrevRow = true;\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\n            skipPrePrevRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    if (prevColumn >= 0) {\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    if (nextColumn < stickersPerRow) {\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\n    let skipNextRow = nextRow >= totalRows;\n    let skipNextNextRow = nextRow >= totalRows;\n    if (!skipNextRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipNextRow = true;\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\n                skipNextNextRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipNextRow = true;\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\n            skipNextNextRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    const items = getStickers(sets);\n    return result.map(x => items[x]);\n}\n\nfunction toRowColumn(sticker, sets, stickersPerRow) {\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\n    if (setIndex === -1) return [-1, -1];\n\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\n    if (stickerIndex === -1) return [-1, -1];\n\n    let prevRows = 0;\n    for (let i = 0; i < setIndex; i++) {\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\n    }\n\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\n}\n\nfunction toIndex(row, column, sets, stickersPerRow) {\n    let index = -1;\n    let totalRows = 0;\n    let setIndex = -1;\n    for (let i = 0; i < sets.length; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        totalRows += setRows;\n        if (totalRows > row) {\n            setIndex = i;\n            break;\n        }\n    }\n    if (setIndex === -1) return index;\n\n    let setRow = row;\n    let setColumn = column;\n    for (let i = 0; i < setIndex; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        setRow -= setRows;\n    }\n\n    index = stickersPerRow * setRow + setColumn;\n\n    if (index >= sets[setIndex].stickers.length) return -1;\n\n    for (let i = 0; i < setIndex; i++) {\n        index += sets[i].stickers.length;\n    }\n\n    return index;\n}\n\nfunction getInputMediaThumbnail(thumbnail) {\n    if (!thumbnail) return null;\n\n    const { photo, width, height } = thumbnail;\n    if (!photo) return null;\n\n    return {\n        '@type': 'inputThumbnail',\n        thumbnail: {\n            '@type': 'inputFileId',\n            id: photo.id\n        },\n        width,\n        height\n    };\n}\n\nfunction getInputMediaCaption(text) {\n    if (!text) return null;\n\n    return {\n        '@type': 'formattedText',\n        text: text,\n        entities: null\n    };\n}\n\nexport function getInputMediaContent(media, text) {\n    if (!media) return null;\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { animation: file, thumbnail, width, height, duration } = media;\n\n            return {\n                '@type': 'inputMessageAnimation',\n                animation: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'audio': {\n            const { audio: file, album_cover_thumbnail: thumbnail, title, performer, duration } = media;\n\n            return {\n                '@type': 'inputMessageAudio',\n                audio: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                album_cover_thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                title,\n                performer,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'contact': {\n            return {\n                '@type': 'inputMessageContact',\n                contact: media\n            };\n        }\n        case 'document': {\n            const { document: file, thumbnail } = media;\n\n            return {\n                '@type': 'inputMessageDocument',\n                document: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'game': {\n            return null;\n        }\n        case 'invoice': {\n            return null;\n        }\n        case 'location': {\n            return {\n                '@type': 'inputMessageLocation',\n                location: media,\n                live_period: 0\n            };\n        }\n        case 'photo': {\n            const { sizes } = media;\n            if (!sizes.length) return null;\n\n            const thumbnail = sizes[0];\n            const photo = sizes[sizes.length - 1];\n            if (!photo) return null;\n\n            const { photo: file, width, height } = photo;\n\n            return {\n                '@type': 'inputMessagePhoto',\n                photo: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                width,\n                height,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'poll': {\n            return null;\n        }\n        case 'sticker': {\n            const { sticker: file, thumbnail, width, height } = media;\n\n            return {\n                '@type': 'inputMessageSticker',\n                sticker: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'venue': {\n            return {\n                '@type': 'inputMessageVenue',\n                venue: media\n            };\n        }\n        case 'video': {\n            const { video: file, thumbnail, width, height, duration, supports_streaming } = media;\n\n            return {\n                '@type': 'inputMessageVideo',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                duration,\n                width,\n                height,\n                supports_streaming,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'videoNote': {\n            const { video: file, thumbnail, duration, length } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                length,\n                ttl: 0\n            };\n        }\n        case 'voiceNote': {\n            const { voice: file, duration, waveform } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                voice_note: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                duration,\n                waveform\n            };\n        }\n    }\n\n    return null;\n}\n\nexport function getMedia(message, openMedia, hasTitle = false, hasCaption = false, inlineMeta = null) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return (\n                <Animation\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    animation={content.animation}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageAudio':\n            return (\n                <Audio\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    audio={content.audio}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageCall':\n            return (\n                <Call\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    duraton={content.duration}\n                    discardReason={content.discard_reason}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageContact':\n            return (\n                <Contact\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    contact={content.contact}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageDocument':\n            return (\n                <Document\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    document={content.document}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return (\n                <Location\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    location={content.location}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messagePhoto':\n            return (\n                <Photo\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    photo={content.photo}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} meta={inlineMeta} />;\n        case 'messageSticker':\n            return (\n                <Sticker\n                    chatId={chat_id}\n                    messageId={id}\n                    sticker={content.sticker}\n                    source={StickerSourceEnum.MESSAGE}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return (\n                <Venue\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    venue={content.venue}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageVideo':\n            return (\n                <Video\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    video={content.video}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageVideoNote':\n            return (\n                <VideoNote\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    videoNote={content.video_note}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageVoiceNote':\n            return (\n                <VoiceNote\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    voiceNote={content.voice_note}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        default:\n            return [`[${content['@type']}]`, inlineMeta];\n    }\n}\n\nexport async function getMediaTags(file) {\n    return new Promise(async resolve => {\n        const tag = await new ID3Parser().parse(file);\n\n        const { tags } = tag;\n        const { artist, title } = tags;\n\n        const audio = document.createElement('audio');\n        const url = URL.createObjectURL(file);\n\n        audio.src = url;\n        audio.addEventListener('loadedmetadata', function(){\n            URL.revokeObjectURL(url);\n            const duration = audio.duration;\n            audio.src = null;\n            resolve({ title, performer : artist, duration : Math.trunc(duration) });\n        },false);\n        audio.addEventListener('error', function() {\n            resolve(null);\n        });\n    })\n}\n\nexport async function getMediaDocumentFromFile(file) {\n    if (!file) {\n        return null;\n    }\n\n    const fileId = -getRandomInt(1, 1000000);\n    FileStore.setBlob(fileId, file);\n\n    const { name, type, size } = file;\n\n    if (type === 'audio/mp3') {\n        const tags = await getMediaTags(file);\n        if (tags) {\n            const { title, performer, duration } = tags;\n\n            return ({\n                '@type': 'messageAudio',\n                audio: {\n                    '@type': 'audio',\n                    duration,\n                    title,\n                    performer,\n                    file_name: name,\n                    mime_type: type,\n                    album_cover_minithumbnail: null,\n                    album_cover_thumbnail: null,\n                    audio: {\n                        '@type': 'file',\n                        id: fileId,\n                        size,\n                        expected_size: size,\n                        local: {\n                            is_downloading_completed: true\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    return ({\n        '@type': 'messageDocument',\n        document: {\n            '@type': 'document',\n            file_name: name,\n            mime_type: type,\n            minithumbnail: null,\n            thumbnail: null,\n            document: {\n                '@type': 'file',\n                id: fileId,\n                size,\n                expected_size: size,\n                local: {\n                    is_downloading_completed: true\n                }\n            }\n        }\n    });\n}\n\nexport async function getMediaPhotoFromFile(file) {\n    if (!file) {\n        return null;\n    }\n\n    if (file.type.startsWith('image')) {\n        const [width, height] = await readImageSize(file);\n\n        const fileId = -getRandomInt(1, 1000000);\n        FileStore.setBlob(fileId, file);\n\n        const photoSize = {\n            '@type': 'photoSize',\n            photo: {\n                '@type': 'file',\n                id: fileId,\n                size: file.size,\n                expected_size: file.expected_size,\n                local: {\n                    is_downloading_completed: true\n                }\n            },\n            width,\n            height\n        };\n\n        return ({\n            '@type': 'messagePhoto',\n            photo: {\n                '@type': 'photo',\n                has_stickers: false,\n                minithumbnail: null,\n                sizes: [ photoSize ]\n            }\n        });\n    } else {\n        return null;\n    }\n}\n","/*\n*license\n */\n\nimport dateFormat from '../Utils/Date';\nimport { getFirstLetter, getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(userId, user, t = k => k) {\n    user = UserStore.get(userId) || user;\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name && last_name) return `${first_name} ${last_name}`;\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId, t = k => k) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(userId, firstName, lastName, t) {\n    const user = UserStore.get(userId);\n    if (!user && !(firstName || lastName)) return null;\n\n    const title = getUserFullName(userId, null, t) || `${firstName} ${lastName}`.trim();\n    const letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    if (user) {\n        firstName = user.first_name;\n        lastName = user.last_name;\n    }\n\n    const firstNameSymbol = getFirstLetter(firstName) || firstName.charAt(0);\n    if (firstNameSymbol) return firstNameSymbol;\n\n    const lastNameSymbol = getFirstLetter(lastName) || lastName.charAt(0);\n    if (lastNameSymbol) return lastNameSymbol;\n\n    return '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(photo) {\n    if (!photo) return null;\n\n    const { id, sizes } = photo;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const { photo: small } = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const { photo: big } = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id,\n        small,\n        big\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nfunction getUserInfo (userId){\n    const user = UserStore.get(userId);\n    if (!user) return null;\n    return user;\n}\n\nexport function isDeletedUser(userId) {\n    const user = UserStore.get(userId);\n\n    return user && user.type['@type'] === 'userTypeDeleted';\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName,\n    getUserInfo\n};\n","/*\n*license\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const { playbackRate, volume } = this.loadPlayerSettings();\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n        this.instantView = null;\n        this.pageBlock = null;\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    loadPlayerSettings() {\n        const player = localStorage.getItem('player') || {};\n\n        let { playbackRate, volume } = player;\n\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        return { playbackRate, volume };\n    }\n\n    savePlayerSettings() {\n        const { volume, playbackRate } = this;\n\n        localStorage.setItem('player', JSON.stringify({ volume, playbackRate }));\n    }\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.reset();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId, instantView, pageBlock } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (message) {\n                    this.message = message;\n                    this.emit(update['@type'], update);\n                    this.getPlaylist(chatId, messageId);\n\n                    return;\n                } else if (instantView && pageBlock) {\n                    this.instantView = instantView;\n                    this.pageBlock = pageBlock;\n                    this.emit(update['@type'], update);\n                }\n\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                this.savePlayerSettings();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                this.savePlayerSettings();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaSeek': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaSeeking': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport UserTile from './UserTile';\nimport UserStatus from './UserStatus';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from './../../Stores/UserStore';\nimport './User.css';\n\nclass User extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: UserStore.get(props.userId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, t, showStatus } = this.props;\n\n        const fullName = getUserFullName(userId, null, t);\n\n        const user = UserStore.get(userId);\n        const { is_contact, username } = user;\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='user-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='user-title'>{fullName}</div>\n                        </div>\n                        {showStatus && (\n                            <div className='tile-second-row'>\n                                {!is_contact && username ? <div className='user-content dialog-content'>{'@' + username}</div> : <UserStatus userId={userId} /> }\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showStatus: PropTypes.bool\n};\n\nUser.defaultProps = {\n    showStatus: true\n};\n\nexport default withTranslation()(User);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.off('updateFile', this.onUpdateFile);\n    }\n\n    fileEquals(file1, file2) {\n        if (file1 === file2 && file1 === null) return true;\n        if (file1 !== null && file2 === null) return false;\n        if (file1 === null && file2 !== null) return false;\n\n        const { local: local1, remote: remote1 } = file1;\n        const { local: local2, remote: remote2 } = file2;\n\n        if (local1.can_be_deleted !== local2.can_be_deleted) return false;\n        if (local1.can_be_downloaded !== local2.can_be_downloaded) return false;\n        if (local1.download_offset !== local2.download_offset) return false;\n        if (local1.downloaded_prefix_size !== local2.downloaded_prefix_size) return false;\n        if (local1.downloaded_size !== local2.downloaded_size) return false;\n        if (local1.is_downloading_active !== local2.is_downloading_active) return false;\n        if (local1.is_downloading_completed !== local2.is_downloading_completed) return false;\n        if (local1.path !== local2.path) return false;\n\n        if (remote1.id !== remote2.id) return false;\n        if (remote1.is_uploading_active !== remote2.is_uploading_active) return false;\n        if (remote1.is_uploading_completed !== remote2.is_uploading_completed) return false;\n        if (remote1.uploaded_size !== remote2.uploaded_size) return false;\n\n        return true;\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            if (this.fileEquals(nextFile, currentFile)) {\n                // console.log('[fp] update equals', nextFile, currentFile);\n            } else {\n                // console.log('[fp] update', nextFile, currentFile);\n                this.setState({ file: nextFile, prevFile: currentFile });\n            }\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `[fp]] render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className={classNames('file-progress', 'file-progress-complete')} style={style}>\n                        {completeIcon}\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <CircularProgress\n                        className='file-progress-indicator'\n                        classes={{ circle: 'file-progress-circle' }}\n                        variant='static'\n                        value={progress}\n                        size={48}\n                        thickness={2}\n                    />\n                    {cancelButton && <CloseIcon />}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    {icon}\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n*license\n */\n\nexport function randomString() {\n    return (\n        '$' +\n        Math.random()\n            .toString(36)\n            .slice(2, 10)\n    );\n}\n","/*\n*license\n */\n\nimport { randomString } from './Helpers';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport PakoWorker from './pako.worker';\n\nconst worker = new PakoWorker();\nconst handlers = new Map();\n\nworker.onmessage = event => {\n    const { data } = event;\n    if (!data) return;\n\n    const { key, error, result, msg } = data;\n\n    const { resolve, reject } = handlers.get(key);\n    handlers.delete(key);\n\n    if (!error) {\n        resolve(result);\n    } else {\n        reject(msg);\n    }\n};\n\nexport async function inflateBlob(blob) {\n    const key = randomString();\n    return new Promise((resolve, reject) => {\n        handlers.set(key, { resolve, reject });\n        worker.postMessage({ key, blob });\n    });\n}\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n// import Lottie from '../../Viewer/Lottie';\nimport { isBlurredThumbnail, isValidAnimatedSticker } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getBlob, getSrc } from '../../../Utils/File';\nimport { inflateBlob } from '../../../Workers/BlobInflator';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport StickerStore from '../../../Stores/StickerStore';\nimport './Sticker.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nexport const StickerSourceEnum = Object.freeze({\n    HINTS: 'HINTS',\n    MESSAGE: 'MESSAGE',\n    PICKER_HEADER: 'PICKER_HEADER',\n    PICKER: 'PICKER',\n    PREVIEW: 'PREVIEW',\n    STICKER_SET: 'STICKER_SET',\n    UNKNOWN: 'UNKNOWN'\n});\n\nclass Sticker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.stickerPreview = StickerStore.stickerPreview;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.state = {\n            animationDate: null,\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log('[Sticker] render error', error, errorInfo);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, sticker, blur, displaySize } = this.props;\n        const { animationData } = this.state;\n\n        if (animationData !== nextState.animationData) {\n            return true;\n        }\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (sticker !== nextProps.sticker) {\n            return true;\n        }\n\n        if (blur !== nextProps.blur) {\n            return true;\n        }\n\n        if (displaySize !== nextProps.displaySize) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.sticker !== this.props.sticker) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.on('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.on('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.off('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.off('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.off('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateDialogChatId = update => {\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerPreview = update => {\n        this.stickerPreview = update.sticker;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.openedStickerSet = stickerSet;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        const { chatId, messageId, sticker } = this.props;\n\n        const isAnimated = isValidAnimatedSticker(sticker, chatId, messageId);\n        if (!isAnimated) return;\n\n        this.windowFocused = focused;\n        this.startStopAnimation();\n    };\n\n    startStopAnimation() {\n        const { autoplay } = this.props;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (\n            this.windowFocused &&\n            !this.stickerPreview &&\n            !this.openMediaViewer &&\n            !this.openProfileMediaViewer &&\n            !this.openIV &&\n            !this.dialogChatId\n        ) {\n            if (this.entered) {\n                // console.log('[Sticker] play 1');\n                player.play();\n                this.pause = false;\n                return;\n            }\n\n            // console.log('[Sticker] startStopAnimation', this.openedStickerSet);\n            if (!this.openedStickerSet) {\n                if (this.paused) {\n                    // console.log('[Sticker] play 2');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n\n                if (autoplay && this.inView) {\n                    // console.log('[Sticker] play 3');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n            }\n        }\n\n        // console.log('[Sticker] pause');\n        this.paused = player.pause();\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker, is_animated } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            if (is_animated) {\n                this.loadContent();\n            } else {\n                this.forceUpdate();\n            }\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = async () => {\n        const { chatId, messageId, sticker: source, autoplay, play } = this.props;\n        const { is_animated, sticker } = source;\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        if (!is_animated) return;\n        if (!isAnimated) return;\n        if (!play) return;\n\n        const blob = getBlob(sticker);\n        if (!blob) return;\n\n        let animationData = null;\n        try {\n            // animationData = StickerStore.getAnimationData(blob);\n            // if (animationData) {\n            //     this.setState({ animationData });\n            //     return;\n            // }\n            const result = await inflateBlob(blob);\n            if (!result) return;\n\n            animationData = JSON.parse(result);\n            // StickerStore.setAnimationData(blob, animationData);\n        } catch (err) {\n            console.log('[Sticker] loadContent error', err);\n        }\n        if (!animationData) return;\n\n        if (autoplay) {\n            this.setState({ animationData });\n        } else {\n            this.animationData = animationData;\n        }\n    };\n\n    handleMouseEnter = event => {\n        const { animationData } = this;\n        // console.log('[Sticker] handleMouseEnter', animationData);\n        if (animationData) {\n            this.setState({ animationData }, () => {\n                this.handleAnimationMouseEnter();\n            });\n        }\n    };\n\n    handleAnimationMouseEnter = () => {\n        // console.log('[Sticker] handleAnimationMouseEnter 1');\n        if (this.props.autoplay) return;\n\n        this.entered = true;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        // console.log('[Sticker] handleAnimationMouseEnter 2');\n        this.loopCount = 0;\n        this.startStopAnimation();\n    };\n\n    handleAnimationLoopComplete = () => {\n        if (this.props.autoplay) return;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (!this.entered) this.loopCount += 1;\n        if (this.loopCount > 2) {\n            const { animationData } = this.state;\n            if (animationData) {\n                this.setState({ animationData: null });\n            }\n        }\n    };\n\n    handleAnimationMouseOut = () => {\n        this.entered = false;\n    };\n\n    render() {\n        const {\n            chatId,\n            messageId,\n            autoplay,\n            className,\n            displaySize,\n            blur,\n            sticker: source,\n            style,\n            openMedia,\n            preview\n        } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n        const { animationData, hasError } = this.state;\n\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        if (hasError) {\n            const style = {\n                width: displaySize,\n                height: displaySize\n            };\n\n            if (process.env.NODE_ENV !== 'production') {\n                style.background = '#ff000066';\n            }\n\n            return (\n                <div className={classNames('sticker', className)} style={style} onClick={openMedia}>\n                    { thumbnailSrc && (\n                        <img\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                            draggable={false}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                    )}\n                </div>\n            );\n        }\n\n        let content = null;\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (fitSize) {\n            content = isAnimated ? (\n                <>\n                    {animationData ? (\n                        <React.Suspense fallback={null}>\n                            <Lottie\n                                ref={this.lottieRef}\n                                options={{\n                                    autoplay: autoplay,\n                                    loop: true,\n                                    animationData,\n                                    renderer: 'svg',\n                                    rendererSettings: {\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                        clearCanvas: false,\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                        className: 'lottie-svg'\n                                    }\n                                }}\n                                eventListeners={[\n                                    {\n                                        eventName: 'loopComplete',\n                                        callback: this.handleAnimationLoopComplete\n                                    }\n                                ]}\n                                onMouseOut={this.handleAnimationMouseOut}\n                            />\n                        </React.Suspense>\n                    ) : (\n                        <>\n                            {thumbnailSrc && (\n                                <img\n                                    className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                                    draggable={false}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                />\n                            )}\n                        </>\n                    )}\n                </>\n            ) : (\n                <>\n                    {src && !preview ? (\n                        <img className='sticker-image' draggable={false} src={src} alt='' />\n                    ) : (\n                        <>\n                            { thumbnailSrc && (\n                                <img\n                                    className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                                    draggable={false}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                />\n                            )}\n                        </>\n                    )}\n                </>\n            );\n        }\n\n        const stickerStyle = {\n            width: fitSize ? fitSize.width : 0,\n            height: fitSize ? fitSize.height : 0,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('sticker', className)}\n                style={stickerStyle}\n                onClick={openMedia}\n                onMouseEnter={this.handleMouseEnter}>\n                {content}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    autoplay: PropTypes.bool,\n    play: PropTypes.bool,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number,\n    preview: PropTypes.bool,\n    source: PropTypes.string\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n\n    autoplay: true,\n    play: true,\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE,\n    preview: false,\n    source: StickerSourceEnum.UNKNOWN\n};\n\nexport default Sticker;\n","/*\n*license\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport { getUserLetters, isDeletedUser } from '../../Utils/User';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTile.css';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\n\nclass UserTile extends Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                user: UserStore.get(this.props.userId),\n                loaded: false\n            };\n        } else {\n            this.state = {\n                loaded: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        if (nextState.loaded !== this.state.loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId !== update.userId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n        const { chatId } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n        const { chat_id, photo } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n\n                if (photo) {\n                    const store = FileStore.getStore();\n                    loadChatContent(store, chat);\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId && !chat.photo) return;\n\n                this.forceUpdate();\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { className, userId, fistName, lastName, onSelect, small, dialog, poll, t } = this.props;\n        const { loaded } = this.state;\n\n        const user = UserStore.get(userId);\n        if (!user && !(fistName || lastName)) return null;\n\n        if (isDeletedUser(userId)) {\n            return (\n                <div\n                    className={classNames(\n                        className,\n                        'user-tile',\n                        'tile_color_0',\n                        { pointer: onSelect },\n                        { 'tile-dialog': dialog },\n                        { 'tile-small': small },\n                        { 'tile-poll': poll }\n                    )}\n                    onClick={this.handleSelect}>\n                    <div className='tile-photo'>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize='default' />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const letters = getUserLetters(userId, fistName, lastName, t);\n        const src = getSrc(user && user.profile_photo ? user.profile_photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    className,\n                    'user-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-poll': poll }\n                )}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n            </div>\n        );\n    }\n}\n\nUserTile.propTypes = {\n    userId: PropTypes.number.isRequired,\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    onSelect: PropTypes.func,\n    small: PropTypes.bool\n};\n\nexport default withTranslation()(UserTile);\n","/*\n*license\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.stickerSet = null;\n        this.hint = null;\n        this.animationData = new WeakMap();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            case 'updateRecentStickers': {\n                this.emit('updateRecentStickers', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            case 'clientUpdateStickerPreview': {\n                this.emit('clientUpdateStickerPreview', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    getAnimationData(key) {\n        return this.animationData.get(key);\n    }\n\n    setAnimationData(key, data) {\n        this.animationData.set(key, data);\n    }\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M5,19 L19,19 C19.5522847,19 20,19.4477153 20,20 C20,20.5128358 19.6139598,20.9355072 19.1166211,20.9932723 L19,21 L5,21 C4.44771525,21 4,20.5522847 4,20 C4,19.4871642 4.38604019,19.0644928 4.88337887,19.0067277 L5,19 L19,19 L5,19 Z M11.8833789,3.00672773 L12,3 C12.5128358,3 12.9355072,3.38604019 12.9932723,3.88337887 L13,4 L13,13.585 L16.2928932,10.2928932 C16.6533772,9.93240926 17.2206082,9.90467972 17.6128994,10.2097046 L17.7071068,10.2928932 C18.0675907,10.6533772 18.0953203,11.2206082 17.7902954,11.6128994 L17.7071068,11.7071068 L12.7071068,16.7071068 C12.3466228,17.0675907 11.7793918,17.0953203 11.3871006,16.7902954 L11.2928932,16.7071068 L6.29289322,11.7071068 C5.90236893,11.3165825 5.90236893,10.6834175 6.29289322,10.2928932 C6.65337718,9.93240926 7.22060824,9.90467972 7.61289944,10.2097046 L7.70710678,10.2928932 L11,13.585 L11,4 C11,3.48716416 11.3860402,3.06449284 11.8833789,3.00672773 L12,3 L11.8833789,3.00672773 Z' />,\n    'Download'\n);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        if (photo !== state.prevPhoto) {\n            return {\n                prevPhoto: photo,\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo ? photo.minithumbnail : null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, openMedia, showProgress, title, caption, type, style } = this.props;\n        const { thumbSize, photoSize, minithumbnail } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = (!thumbSrc && miniSrc) || isBlurredThumbnail(thumbSize);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        // console.log('[photo] render', displaySize, fitPhotoSize);\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const hasSrc = Boolean(src || thumbSrc || miniSrc);\n\n        return (\n            <div\n                className={classNames(className, 'photo', {\n                    'photo-big': type === 'message',\n                    'photo-title': title,\n                    'photo-caption': caption,\n                    pointer: openMedia\n                })}\n                style={photoStyle}\n                onClick={openMedia}>\n                {hasSrc && (\n                    <img\n                        className={classNames('photo-image', {\n                            'media-blurred': !src && isBlurred,\n                            'media-mini-blurred': !src && !thumbSrc && isBlurred\n                        })}\n                        draggable={false}\n                        src={src || thumbSrc || miniSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n*license\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo': {\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\nconst dateFormat = (function() {\n    const token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n    const timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n    const timezoneClip = /[^-+\\dA-Z]/g;\n\n    // Regexes and supporting functions are cached through closure\n    return function(date, mask, utc, gmt) {\n        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n            mask = date;\n            date = undefined;\n        }\n\n        date = date || new Date();\n\n        if (!(date instanceof Date)) {\n            date = new Date(date);\n        }\n\n        if (isNaN(date)) {\n            throw TypeError('Invalid date');\n        }\n\n        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\n\n        // Allow setting the utc/gmt argument via the mask\n        var maskSlice = mask.slice(0, 4);\n        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n            mask = mask.slice(4);\n            utc = true;\n            if (maskSlice === 'GMT:') {\n                gmt = true;\n            }\n        }\n\n        var _ = utc ? 'getUTC' : 'get';\n        var d = date[_ + 'Date']();\n        var D = date[_ + 'Day']();\n        var m = date[_ + 'Month']();\n        var y = date[_ + 'FullYear']();\n        var H = date[_ + 'Hours']();\n        var M = date[_ + 'Minutes']();\n        var s = date[_ + 'Seconds']();\n        var L = date[_ + 'Milliseconds']();\n        var o = utc ? 0 : date.getTimezoneOffset();\n        var W = getWeek(date);\n        var N = getDayOfWeek(date);\n        var flags = {\n            d: d,\n            dd: pad(d),\n            ddd: dateFormat.i18n.dayNames[D],\n            dddd: dateFormat.i18n.dayNames[D + 7],\n            m: m + 1,\n            mm: pad(m + 1),\n            mmm: dateFormat.i18n.monthNames[m],\n            mmmm: dateFormat.i18n.monthNames[m + 12],\n            yy: String(y).slice(2),\n            yyyy: y,\n            h: H % 12 || 12,\n            hh: pad(H % 12 || 12),\n            H: H,\n            HH: pad(H),\n            M: M,\n            MM: pad(M),\n            s: s,\n            ss: pad(s),\n            l: pad(L, 3),\n            L: pad(Math.round(L / 10)),\n            t: H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n            tt: H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n            T: H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n            TT: H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n            Z: gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n            o: (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + (Math.abs(o) % 60), 4),\n            S: ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (((d % 100) - (d % 10) != 10) * d) % 10],\n            W: W,\n            N: N\n        };\n\n        return mask.replace(token, function(match) {\n            if (match in flags) {\n                return flags[match];\n            }\n            return match.slice(1, match.length - 1);\n        });\n    };\n})();\n\ndateFormat.masks = {\n    default: 'ddd mmm dd yyyy HH:MM:ss',\n    shortDate: 'm/d/yy',\n    mediumDate: 'mmm d, yyyy',\n    longDate: 'mmmm d, yyyy',\n    fullDate: 'dddd, mmmm d, yyyy',\n    shortTime: 'h:MM TT',\n    mediumTime: 'h:MM:ss TT',\n    longTime: 'h:MM:ss TT Z',\n    isoDate: 'yyyy-mm-dd',\n    isoTime: 'HH:MM:ss',\n    isoDateTime: \"yyyy-mm-dd'T'HH:MM:sso\",\n    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\",\n    expiresHeaderFormat: 'ddd, dd mmm yyyy HH:MM:ss Z'\n};\n\n// Internationalization strings\ndateFormat.i18n = {\n    dayNames: [\n        'Sun',\n        'Mon',\n        'Tue',\n        'Wed',\n        'Thu',\n        'Fri',\n        'Sat',\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ],\n    monthNames: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ],\n    timeNames: ['a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM']\n};\n\nfunction pad(val, len) {\n    val = String(val);\n    len = len || 2;\n    while (val.length < len) {\n        val = '0' + val;\n    }\n    return val;\n}\n\n/**\n * Get the ISO 8601 week number\n * Based on comments from\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getWeek(date) {\n    // Remove time components of date\n    var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n    // Change date to Thursday same week\n    targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\n    // Take January 4th as it is always in week 1 (see ISO 8601)\n    var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\n    // Change date to Thursday same week\n    firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\n    // Check if daylight-saving-time-switch occurred and correct for it\n    var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n    targetThursday.setHours(targetThursday.getHours() - ds);\n\n    // Number of weeks between target Thursday and first Thursday\n    var weekDiff = (targetThursday - firstThursday) / (86400000 * 7);\n    return 1 + Math.floor(weekDiff);\n}\n\n/**\n * Get ISO-8601 numeric representation of the day of the week\n * 1 (for Monday) through 7 (for Sunday)\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getDayOfWeek(date) {\n    var dow = date.getDay();\n    if (dow === 0) {\n        dow = 7;\n    }\n    return dow;\n}\n\n/**\n * kind-of shortcut\n * @param  {*} val\n * @return {String}\n */\nfunction kindOf(val) {\n    if (val === null) {\n        return 'null';\n    }\n\n    if (val === undefined) {\n        return 'undefined';\n    }\n\n    if (typeof val !== 'object') {\n        return typeof val;\n    }\n\n    if (Array.isArray(val)) {\n        return 'array';\n    }\n\n    return {}.toString\n        .call(val)\n        .slice(8, -1)\n        .toLowerCase();\n}\n\nexport default dateFormat;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { getDecodedUrl, getHref, isUrlSafe } from '../../Utils/Url';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './SafeLink.css';\nimport { openChat } from '../../Actions/Client';\n\nclass SafeLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displayText, mail, url } = props;\n\n        if (state.prevUrl !== url || state.prevDisplayText !== displayText) {\n            return {\n                prevUrl: url,\n                prevDisplayText: displayText,\n                safe: isUrlSafe(displayText, url),\n                decodedUrl: getDecodedUrl(url, mail),\n                href: getHref(url, mail),\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.setState({ confirm: true });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleDone = event => {\n        this.handleClose();\n\n        const { url, onClick } = this.props;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    isTelegramLink(url) {\n        if (!url) return false;\n\n        const lowerCaseUrl = url\n            .toLowerCase()\n            .replace('https://', '')\n            .replace('http://', '');\n\n        return lowerCaseUrl.startsWith('t.me') || lowerCaseUrl.startsWith('tg://');\n    }\n\n    handleSafeClick = async event => {\n        event.stopPropagation();\n\n        const { onClick, url: href } = this.props;\n\n        if (this.isTelegramLink(href)) {\n            event.preventDefault();\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: href\n                });\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                const { chat_id, message } = messageLinkInfo;\n                if (chat_id) {\n                    openChat(chat_id, message ? message.id : null);\n                    return;\n                }\n            } catch (error) {\n                console.log('[safeLink] messageLinkInfo error', error);\n            }\n\n            if (onClick) {\n                onClick(event);\n            }\n        }\n\n        if (onClick) {\n            event.preventDefault();\n            onClick(event);\n        }\n    };\n\n    render() {\n        const { className, children, t, url } = this.props;\n        const { confirm, decodedUrl, href, safe } = this.state;\n\n        if (!url) return null;\n        if (!decodedUrl) return null;\n\n        return (\n            <>\n                {safe ? (\n                    <a\n                        className={className}\n                        href={href}\n                        title={decodedUrl}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        onClick={this.handleSafeClick}>\n                        {children || url}\n                    </a>\n                ) : (\n                    <>\n                        <a className={className} title={decodedUrl} onClick={this.handleClick}>\n                            {children || url}\n                        </a>\n                        {confirm && (\n                            <Dialog\n                                transitionDuration={0}\n                                open={confirm}\n                                onClose={this.handleClose}\n                                onClick={this.handleDialogClick}\n                                aria-labelledby='confirm-dialog-title'>\n                                <DialogTitle id='confirm-dialog-title'>{t('Confirm')}</DialogTitle>\n                                <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                                    <DialogContentText>{`Open this link?\\n\\n${decodedUrl}`}</DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={this.handleClose}>{t('Cancel')}</Button>\n                                    <Button onClick={this.handleDone} color='primary'>\n                                        {t('Open')}\n                                    </Button>\n                                </DialogActions>\n                            </Dialog>\n                        )}\n                    </>\n                )}\n            </>\n        );\n    }\n}\n\nSafeLink.propTypes = {\n    url: PropTypes.string.isRequired,\n    displayText: PropTypes.string,\n    mail: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SafeLink);\n","/*\n*license\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass InstantViewStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = [];\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateBlocksInView': {\n                this.emit('clientUpdateBlocksInView', update);\n                break;\n            }\n            case 'clientUpdateInstantViewContent': {\n                const { content } = update;\n\n                if (content) {\n                    this.items.push(content.instantView);\n                } else {\n                    this.items = [];\n                }\n\n                this.emit('clientUpdateInstantViewContent', update);\n\n                break;\n            }\n            case 'clientUpdateInstantViewUrl': {\n                this.emit('clientUpdateInstantViewUrl', update);\n                break;\n            }\n            case 'clientUpdateInstantViewViewerContent': {\n                const { content } = update;\n\n                this.viewerContent = content;\n\n                this.emit('clientUpdateInstantViewViewerContent', update);\n                break;\n            }\n            case 'clientUpdatePrevInstantView': {\n                if (this.items.length <= 1) return;\n\n                this.items.pop();\n                const prevInstantView = this.items.pop();\n\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateInstantViewContent',\n                    content: {\n                        instantView: prevInstantView\n                    }\n                });\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    hasPrev() {\n        return this.items.length > 1;\n    }\n\n    getCurrent() {\n        return this.items.length > 0 ? this.items[this.items.length - 1] : null;\n    }\n}\n\nconst store = new InstantViewStore();\nwindow.instantView = store;\nexport default store;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(userId, null, t);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport AppStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.setPlayerParams();\n    }\n\n    setPlayerParams() {\n        this.windowFocused = window.hasFocus;\n\n        this.inView = false;\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.ivInView = false;\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.animation !== this.props.animation) {\n            this.setPlayerParams();\n        }\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.on('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.off('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (\n            this.windowFocused &&\n            ((this.inView && !this.openMediaViewer && !this.openProfileMediaViewer && !this.openIV) ||\n                (this.ivInView && !this.openIVMedia))\n        ) {\n            player.play();\n        } else {\n            player.pause();\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateInstantViewViewerContent = update => {\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateBlocksInView = update => {\n        const { pageBlock } = this.props;\n        if (!pageBlock) return;\n\n        this.ivInView = update.blocks.has(pageBlock);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate(() => {\n                this.startStopPlayer();\n            });\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t, title, caption, type, style } = this.props;\n        const { minithumbnail, thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        const animationStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n        const isGif = isGifMimeType(mime_type);\n        const source = src ? <source src={src} type={mime_type}/> : null;\n\n        return (\n            <div\n                className={classNames('animation', {\n                    'animation-big': type === 'message',\n                    'animation-title': title,\n                    'media-title': title,\n                    'animation-caption': caption,\n                    pointer: openMedia\n                })}\n                style={animationStyle}\n                onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='animation-preview' src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-animation'\n                            poster={thumbnailSrc || miniSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={animationStyle.width}\n                            height={animationStyle.height}\n                        >\n                            {source}\n                        </video>\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !src && !thumbnailSrc && isBlurred\n                            })}\n                            src={thumbnailSrc || miniSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    pageBlock: PropTypes.object,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    iv: PropTypes.bool\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    iv: false\n};\n\nexport default withTranslation()(Animation);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-12.000000, -12.000000)'\n        d='M19.3717789,13.8876217 L33.8466511,23.2537154 C34.2588127,23.5204082 34.3767385,24.0707284 34.1100457,24.48289 C34.0418356,24.5883056 33.9520666,24.6780745 33.8466511,24.7462846 L19.3717789,34.1123783 C18.9596173,34.3790711 18.4092971,34.2611454 18.1426043,33.8489838 C18.0495218,33.705129 18,33.5374371 18,33.3660938 L18,14.6339062 C18,14.1429865 18.3979691,13.7450173 18.8888889,13.7450173 C19.0602323,13.7450173 19.2279241,13.7945391 19.3717789,13.8876217 Z'\n    />,\n    'PlayArrow'\n);\n","\n/*\n*license\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n*license\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n*license\n */\n\nimport punycode from './Punycode';\n\nexport function getHref(url, mail) {\n    if (!url) return null;\n\n    if (mail) return url.startsWith('mailto:') ? url : 'mailto:' + url;\n\n    // if (url.startsWith('tg://')) return url;\n\n    return url.startsWith('http') ? url : 'http://' + url;\n}\n\nexport function isUrlSafe(displayText, url) {\n    if (displayText && displayText !== url) {\n        return false;\n    }\n\n    if (hasRTLOSymbol(url)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getDecodedUrl(url, mail) {\n    if (!url) return null;\n\n    const href = getHref(url, mail);\n\n    try {\n        let decodedHref = decodeURI(href);\n\n        const domain = decodedHref.match(/^https?:\\/\\/([^\\/:?#]+)(?:[\\/:?#]|$)/i)[1];\n        decodedHref = decodedHref.replace(domain, punycode.ToUnicode(domain));\n\n        return decodedHref;\n    } catch (error) {\n        console.log('SafeLink.getDecodedUrl error ', url, error);\n    }\n\n    return null;\n}\n\nconst regExpRTLO = /\\u202e/;\n\nexport function hasRTLOSymbol(url) {\n    if (!url) return false;\n\n    return regExpRTLO.test(url);\n}\n\nconst regExpDomainExplicit = new RegExp(\n    '(?:([a-zA-Z]+):\\\\/\\\\/)((?:[A-Za-z' +\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\n        '0-9\\\\-\\\\_]+\\\\.){0,10}([A-Za-z' +\n        '\\xD1\\x80\\xD1\\x84' +\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\n);\nconst regExpDomain = new RegExp(\n    '(?:([a-zA-Z]+):\\\\/\\\\/)?((?:[A-Za-z' +\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\n        '0-9\\\\-\\\\_]+\\\\.){1,10}([A-Za-z' +\n        '\\xD1\\x80\\xD1\\x84' +\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\n);\nconst regExpProtocol = new RegExp('^([a-zA-Z]+):\\\\/\\\\/');\n\n// https://github.com/telegramdesktop/tdesktop/blob/4e80d54be130eca76129f2c4995fe685d1014442/Telegram/SourceFiles/base/qthelp_url.cpp#L105\nexport function validateUrl(value) {\n    // value = punycode.ToASCII(value);\n\n    const trimmed = value.trim();\n    if (!trimmed) {\n        return null;\n    }\n\n    const match = trimmed.match(regExpDomainExplicit);\n    if (!match) {\n        const domainMatch = trimmed.match(regExpDomain);\n        if (!domainMatch || domainMatch.index !== 0) {\n            return null;\n        }\n\n        return 'http://' + trimmed;\n    } else if (match.index !== 0) {\n        return null;\n    }\n\n    const protocolMatch = trimmed.match(regExpProtocol);\n    return protocolMatch && isGoodProtocol(protocolMatch[0]) ? trimmed : null;\n}\n\nfunction isGoodProtocol(value) {\n    return ['http', 'https', 'tg'].some(x => value.toLowerCase().indexOf(x) === 0);\n}\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../../Assets/Icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport { getAudioShortTitle, getAudioSubtitle, getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia, title, meta, caption } = this.props;\n        const { playing, active } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const audioTitle = getAudioSubtitle(audio);\n        const audioSubtitle = getAudioShortTitle(audio);\n\n        return (\n            <div className={classNames('audio', 'document', { 'media-title': title })}>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='audio-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={audioTitle}>\n                            {audioTitle}\n                        </a>\n                    </div>\n                    <div className='audio-action' style={{ opacity: active ? 0 : 1 }}>{audioSubtitle}</div>\n                    <VoiceNoteSlider className='audio-slider' chatId={chatId} messageId={messageId} duration={duration} style={{ opacity: active ? 1 : 0 }}/>\n                    <AudioAction\n                        chatId={chatId}\n                        messageId={messageId}\n                        duration={duration}\n                        file={file}\n                        meta={caption ? null : meta}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    audio: PropTypes.object,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-15.000000, -15.000000)'\n        d='M23,16 C23.5522847,16 24,16.4477153 24,17 L24,37 C24,37.5522847 23.5522847,38 23,38 L18,38 C17.4477153,38 17,37.5522847 17,37 L17,17 C17,16.4477153 17.4477153,16 18,16 L23,16 Z M36,16 C36.5522847,16 37,16.4477153 37,17 L37,37 C37,37.5522847 36.5522847,38 36,38 L31,38 C30.4477153,38 30,37.5522847 30,37 L30,17 C30,16.4477153 30.4477153,16 31,16 L36,16 Z'\n    />,\n    'Pause'\n);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nclass DocumentTile extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { minithumbnail, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n        const { loaded } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbnailSrc && loaded;\n        const src = thumbnailSrc || miniSrc;\n\n        return (\n            <div\n                className={classNames('document-tile', { 'document-tile-image': !src }, { pointer: openMedia })}\n                onClick={openMedia}>\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={src}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={typeof completeIcon === 'function' ? completeIcon(src) : completeIcon}\n                    />\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {!tileLoaded && <div className='document-tile-background' />}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\n\nexport default DocumentTile;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            seekProgress: 0,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n        PlayerStore.on('clientUpdateMediaSeeking', this.onClientUpdateMediaSeeking);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n        PlayerStore.off('clientUpdateMediaSeeking', this.onClientUpdateMediaSeeking);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    onClientUpdateMediaSeeking = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { duration: playerDuration, active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const d = playerDuration || duration;\n\n            this.setState({\n                seekProgress: update.value,\n                seeking: true,\n                timeString: this.getTimeString(d * update.value, d, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { duration: playerDuration, active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const d = playerDuration || duration;\n\n            this.setState({\n                seekProgress: 0,\n                seeking: false,\n                timeString: this.getTimeString(d * update.value, d, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, playerDuration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file, seekProgress, seeking } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            const time = seeking ? seekProgress * playerDuration : update.currentTime;\n\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                timeString: this.getTimeString(time, playerDuration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: active ? this.state.timeString : this.getTimeString(0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString} / ${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { title, meta } = this.props;\n        const { active, file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize} / ${size}` : `${size}`;\n        const strings = [];\n        if (!isDownloadingCompleted) {\n            strings.push(sizeString);\n        }\n        if (!isDownloadingActive) {\n            strings.push(timeString);\n        }\n\n        return (\n            <div className='audio-action'>\n                {!active && <span>{title}</span>}\n                {<span>{strings.join(', ')}</span>}\n                {meta}\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n\n    title: PropTypes.string\n};\n\nexport default AudioAction;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location, width, height, zoom, scale } = this.props;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { location, width, height, zoom, scale, type, style, title, caption } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        const locationStyle = {\n            width,\n            height,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('location', {\n                    'location-message': type === 'message',\n                    'location-venue': type === 'venue',\n                    'location-title': title,\n                    'location-caption': caption\n                })}\n                style={locationStyle}>\n                <a href={source} target='_blank' rel='noopener noreferrer' onClick={this.handleClick}>\n                    <div className='location-wrapper'>\n                        <img className='location-image' draggable={false} alt={source} src={src} />\n                        <div className='location-icon'>\n                            <RoomIcon fontSize='large' color='primary' />\n                        </div>\n                    </div>\n                </a>\n            </div>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    width: PropTypes.number,\n    height: PropTypes.number,\n    zoom: PropTypes.number,\n    scale: PropTypes.number\n};\n\nLocation.defaultProps = {\n    width: LOCATION_WIDTH,\n    height: LOCATION_HEIGHT,\n    zoom: LOCATION_ZOOM,\n    scale: LOCATION_SCALE\n};\n\nexport default Location;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, title, caption, type, style } = this.props;\n        const { minithumbnail, thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const videoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <div\n                className={classNames('video', {\n                    'video-big': type === 'message',\n                    'video-title': title,\n                    'video-caption': caption,\n                    pointer: openMedia\n                })}\n                style={videoStyle}\n                onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', {\n                        'media-blurred': isBlurred,\n                        'media-mini-blurred': !thumbnailSrc && isBlurred\n                    })}\n                    src={thumbnailSrc || miniSrc}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(3.000000, 0.600000)'>\n        <path\n            d='M9,0 C13.9705627,-9.13077564e-16 18,4.02943725 18,9 L18,23 L18,23 L15,20 L12,23 L9,20 L6,23 L3,20 L0,23 L0,9 C-6.08718376e-16,4.02943725 4.02943725,9.13077564e-16 9,0 Z'\n            stroke='currentColor'\n            strokeWidth='1.5'\n            strokeLinejoin='round'\n            fill='none'\n        />\n        <circle cx='5' cy='9' r='2' />\n        <circle cx='13' cy='9' r='2' />\n    </g>,\n    'DeletedAccount'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Check'\n);\n","/*\n*license\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n*license\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatus.css';\n\nclass UserStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { status, isAccent } = this.state;\n\n        return (\n            <div className={classNames('user-content', 'dialog-content', { 'user-status-accent': isAccent })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default UserStatus;\n","/*\n*license\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateClosePollResults': {\n                this.emit('clientUpdateClosePollResults', update);\n                break;\n            }\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    type: {\n                        '@type': 'pollTypeRegular',\n                        allow_multiple_answers: false\n                    },\n                    id: Date.now(),\n                    question: '',\n                    options: [],\n                    is_anonymous: true\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollChangeAnonymous': {\n                const { poll } = this;\n                const isAnonymous = poll && poll.is_anonymous;\n\n                this.assign(this.poll, { is_anonymous: !isAnonymous });\n\n                this.emit('clientUpdatePollChangeAnonymous', update);\n                break;\n            }\n            case 'clientUpdatePollChangeAllowMultipleAnswers': {\n                const { poll } = this;\n                const { type } = poll;\n                if (type['@type'] === 'pollTypeRegular') {\n                    const allowMultipleAnswers = poll && poll.type.allow_multiple_answers;\n\n                    const newType = { ...type, allow_multiple_answers: !allowMultipleAnswers };\n\n                    this.assign(this.poll, { type: newType });\n                }\n\n                this.emit('clientUpdatePollChangeAllowMultipleAnswers', update);\n                break;\n            }\n            case 'clientUpdatePollChangeType': {\n                const { poll } = this;\n                const { type } = poll;\n                if (type['@type'] === 'pollTypeRegular') {\n                    const newType = { '@type': 'pollTypeQuiz', correct_option_id: -1 };\n\n                    this.assign(this.poll, { type: newType });\n                } else {\n                    const newType = { '@type': 'pollTypeRegular', allow_multiple_answers: false };\n\n                    this.assign(this.poll, { type: newType });\n                }\n\n                this.emit('clientUpdatePollChangeType', update);\n                break;\n            }\n            case 'clientUpdatePollChooseOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, {\n                    options: options.map(x => (x.id === id ? { ...x, is_chosen: true } : { ...x, is_chosen: false }))\n                });\n\n                this.emit('clientUpdatePollChooseOption', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options, type, is_anonymous } = this.poll;\n\n        if (type['@type'] === 'pollTypeQuiz') {\n            type.correct_option_id = options.findIndex(x => x.is_chosen);\n\n            if (type.correct_option_id === -1) {\n                return null;\n            }\n        }\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text),\n            is_anonymous,\n            type,\n            is_closed: false\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n*license\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","//https://stackoverflow.com/questions/183485/converting-punycode-with-dash-character-to-unicode\n//Javascript Punycode converter derived from example in RFC3492.\n//This implementation is created by some@domain.name and released into public domain\nfunction Punycode() {\n    // This object converts to and from puny-code used in IDN\n    //\n    // punycode.ToASCII ( domain )\n    //\n    // Returns a puny coded representation of \"domain\".\n    // It only converts the part of the domain name that\n    // has non ASCII characters. I.e. it dosent matter if\n    // you call it with a domain that already is in ASCII.\n    //\n    // punycode.ToUnicode (domain)\n    //\n    // Converts a puny-coded domain name to unicode.\n    // It only converts the puny-coded parts of the domain name.\n    // I.e. it dosent matter if you call it on a string\n    // that already has been converted to unicode.\n    //\n    //\n    this.utf16 = {\n        // The utf16-class is necessary to convert from javascripts internal character representation to unicode and back.\n        decode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value,\n                extra;\n            while (i < len) {\n                value = input.charCodeAt(i++);\n                if ((value & 0xf800) === 0xd800) {\n                    extra = input.charCodeAt(i++);\n                    if ((value & 0xfc00) !== 0xd800 || (extra & 0xfc00) !== 0xdc00) {\n                        throw new RangeError('UTF-16(decode): Illegal UTF-16 sequence');\n                    }\n                    value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                }\n                output.push(value);\n            }\n            return output;\n        },\n        encode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value;\n            while (i < len) {\n                value = input[i++];\n                if ((value & 0xf800) === 0xd800) {\n                    throw new RangeError('UTF-16(encode): Illegal UTF-16 value');\n                }\n                if (value > 0xffff) {\n                    value -= 0x10000;\n                    output.push(String.fromCharCode(((value >>> 10) & 0x3ff) | 0xd800));\n                    value = 0xdc00 | (value & 0x3ff);\n                }\n                output.push(String.fromCharCode(value));\n            }\n            return output.join('');\n        }\n    };\n\n    //Default parameters\n    var initial_n = 0x80;\n    var initial_bias = 72;\n    var delimiter = '\\x2D';\n    var base = 36;\n    var damp = 700;\n    var tmin = 1;\n    var tmax = 26;\n    var skew = 38;\n    var maxint = 0x7fffffff;\n\n    // decode_digit(cp) returns the numeric value of a basic code\n    // point (for use in representing integers) in the range 0 to\n    // base-1, or base if cp is does not represent a value.\n\n    function decode_digit(cp) {\n        return cp - 48 < 10 ? cp - 22 : cp - 65 < 26 ? cp - 65 : cp - 97 < 26 ? cp - 97 : base;\n    }\n\n    // encode_digit(d,flag) returns the basic code point whose value\n    // (when used for representing integers) is d, which needs to be in\n    // the range 0 to base-1. The lowercase form is used unless flag is\n    // nonzero, in which case the uppercase form is used. The behavior\n    // is undefined if flag is nonzero and digit d has no uppercase form.\n\n    function encode_digit(d, flag) {\n        return d + 22 + 75 * (d < 26) - ((flag != 0) << 5);\n        //  0..25 map to ASCII a..z or A..Z\n        // 26..35 map to ASCII 0..9\n    }\n    //** Bias adaptation function **\n    function adapt(delta, numpoints, firsttime) {\n        var k;\n        delta = firsttime ? Math.floor(delta / damp) : delta >> 1;\n        delta += Math.floor(delta / numpoints);\n\n        for (k = 0; delta > ((base - tmin) * tmax) >> 1; k += base) {\n            delta = Math.floor(delta / (base - tmin));\n        }\n        return Math.floor(k + ((base - tmin + 1) * delta) / (delta + skew));\n    }\n\n    // encode_basic(bcp,flag) forces a basic code point to lowercase if flag is zero,\n    // uppercase if flag is nonzero, and returns the resulting code point.\n    // The code point is unchanged if it is caseless.\n    // The behavior is undefined if bcp is not a basic code point.\n\n    function encode_basic(bcp, flag) {\n        bcp -= (bcp - 97 < 26) << 5;\n        return bcp + ((!flag && bcp - 65 < 26) << 5);\n    }\n\n    // Main decode\n    this.decode = function(input, preserveCase) {\n        // Dont use utf16\n        var output = [];\n        var case_flags = [];\n        var input_length = input.length;\n\n        var n, out, i, bias, basic, j, ic, oldi, w, k, digit, t, len;\n\n        // Initialize the state:\n\n        n = initial_n;\n        i = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points: Let basic be the number of input code\n        // points before the last delimiter, or 0 if there is none, then\n        // copy the first basic code points to the output.\n\n        basic = input.lastIndexOf(delimiter);\n        if (basic < 0) basic = 0;\n\n        for (j = 0; j < basic; ++j) {\n            if (preserveCase) case_flags[output.length] = input.charCodeAt(j) - 65 < 26;\n            if (input.charCodeAt(j) >= 0x80) {\n                throw new RangeError('Illegal input >= 0x80');\n            }\n            output.push(input.charCodeAt(j));\n        }\n\n        // Main decoding loop: Start just after the last delimiter if any\n        // basic code points were copied; start at the beginning otherwise.\n\n        for (ic = basic > 0 ? basic + 1 : 0; ic < input_length; ) {\n            // ic is the index of the next character to be consumed,\n\n            // Decode a generalized variable-length integer into delta,\n            // which gets added to i. The overflow checking is easier\n            // if we increase i as we go, then subtract off its starting\n            // value at the end to obtain delta.\n            for (oldi = i, w = 1, k = base; ; k += base) {\n                if (ic >= input_length) {\n                    throw RangeError('punycode_bad_input(1)');\n                }\n                digit = decode_digit(input.charCodeAt(ic++));\n\n                if (digit >= base) {\n                    throw RangeError('punycode_bad_input(2)');\n                }\n                if (digit > Math.floor((maxint - i) / w)) {\n                    throw RangeError('punycode_overflow(1)');\n                }\n                i += digit * w;\n                t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                if (digit < t) {\n                    break;\n                }\n                if (w > Math.floor(maxint / (base - t))) {\n                    throw RangeError('punycode_overflow(2)');\n                }\n                w *= base - t;\n            }\n\n            out = output.length + 1;\n            bias = adapt(i - oldi, out, oldi === 0);\n\n            // i was supposed to wrap around from out to 0,\n            // incrementing n each time, so we'll fix that now:\n            if (Math.floor(i / out) > maxint - n) {\n                throw RangeError('punycode_overflow(3)');\n            }\n            n += Math.floor(i / out);\n            i %= out;\n\n            // Insert n at position i of the output:\n            // Case of last character determines uppercase flag:\n            if (preserveCase) {\n                case_flags.splice(i, 0, input.charCodeAt(ic - 1) - 65 < 26);\n            }\n\n            output.splice(i, 0, n);\n            i++;\n        }\n        if (preserveCase) {\n            for (i = 0, len = output.length; i < len; i++) {\n                if (case_flags[i]) {\n                    output[i] = String.fromCharCode(output[i])\n                        .toUpperCase()\n                        .charCodeAt(0);\n                }\n            }\n        }\n        return this.utf16.encode(output);\n    };\n\n    //** Main encode function **\n\n    this.encode = function(input, preserveCase) {\n        //** Bias adaptation function **\n\n        var n, delta, h, b, bias, j, m, q, k, t, ijv, case_flags;\n\n        if (preserveCase) {\n            // Preserve case, step1 of 2: Get a list of the unaltered string\n            case_flags = this.utf16.decode(input);\n        }\n        // Converts the input in UTF-16 to Unicode\n        input = this.utf16.decode(input.toLowerCase());\n\n        var input_length = input.length; // Cache the length\n\n        if (preserveCase) {\n            // Preserve case, step2 of 2: Modify the list to true/false\n            for (j = 0; j < input_length; j++) {\n                case_flags[j] = input[j] != case_flags[j];\n            }\n        }\n\n        var output = [];\n\n        // Initialize the state:\n        n = initial_n;\n        delta = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points:\n        for (j = 0; j < input_length; ++j) {\n            if (input[j] < 0x80) {\n                output.push(String.fromCharCode(case_flags ? encode_basic(input[j], case_flags[j]) : input[j]));\n            }\n        }\n\n        h = b = output.length;\n\n        // h is the number of code points that have been handled, b is the\n        // number of basic code points\n\n        if (b > 0) output.push(delimiter);\n\n        // Main encoding loop:\n        //\n        while (h < input_length) {\n            // All non-basic code points < n have been\n            // handled already. Find the next larger one:\n\n            for (m = maxint, j = 0; j < input_length; ++j) {\n                ijv = input[j];\n                if (ijv >= n && ijv < m) m = ijv;\n            }\n\n            // Increase delta enough to advance the decoder's\n            // <n,i> state to <m,0>, but guard against overflow:\n\n            if (m - n > Math.floor((maxint - delta) / (h + 1))) {\n                throw RangeError('punycode_overflow (1)');\n            }\n            delta += (m - n) * (h + 1);\n            n = m;\n\n            for (j = 0; j < input_length; ++j) {\n                ijv = input[j];\n\n                if (ijv < n) {\n                    if (++delta > maxint) return Error('punycode_overflow(2)');\n                }\n\n                if (ijv == n) {\n                    // Represent delta as a generalized variable-length integer:\n                    for (q = delta, k = base; ; k += base) {\n                        t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                        if (q < t) break;\n                        output.push(String.fromCharCode(encode_digit(t + ((q - t) % (base - t)), 0)));\n                        q = Math.floor((q - t) / (base - t));\n                    }\n                    output.push(String.fromCharCode(encode_digit(q, preserveCase && case_flags[j] ? 1 : 0)));\n                    bias = adapt(delta, h + 1, h == b);\n                    delta = 0;\n                    ++h;\n                }\n            }\n\n            ++delta;\n            ++n;\n        }\n        return output.join('');\n    };\n\n    this.ToASCII = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/[^A-Za-z0-9-]/) ? 'xn--' + punycode.encode(s) : s);\n        }\n        return out.join('.');\n    };\n    this.ToUnicode = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/^xn--/) ? punycode.decode(s.slice(4)) : s);\n        }\n        return out.join('.');\n    };\n}\n\nconst punycode = new Punycode();\nexport default punycode;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './VoiceNoteSlider.css';\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, dragging } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (messageId !== update.messageId) return;\n\n        const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n        const value = this.getValue(update.currentTime, playerDuration, active);\n\n        if (dragging) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration\n            });\n        } else {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                value\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, dragging } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            let value = this.state.value;\n            if (!dragging) {\n                value = this.getValue(active ? currentTime : 0, playerDuration, true);\n            }\n\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        this.setState({\n            dragging: true\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { chatId, messageId } = this.props;\n        const { value, active } = this.state;\n        if (!active) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaSeek',\n            chatId,\n            messageId,\n            value\n        });\n\n        this.setState({\n            dragging: false\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { chatId, messageId } = this.props;\n        const { active, dragging } = this.state;\n        if (!active) return;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaSeeking',\n                chatId,\n                messageId,\n                value\n            });\n        }\n\n        this.setState({\n            value\n        });\n    };\n\n    render() {\n        const { className, style } = this.props;\n        const { value } = this.state;\n\n        return (\n            <div className={classNames('voice-note-slider', className)} style={style}>\n                <Slider\n                    className='voice-note-slider-component'\n                    classes={{\n                        track: 'voice-note-slider-track',\n                        thumb: 'voice-note-slider-thumb',\n                        active: 'voice-note-slider-active'\n                    }}\n                    min={0}\n                    max={1}\n                    step={0.01}\n                    value={value}\n                    onChange={this.handleChange}\n                    onChangeCommitted={this.handleChangeCommitted}\n                    onMouseDown={this.handleMouseDown}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    duration: PropTypes.number.isRequired\n};\n\nexport default VoiceNoteSlider;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { clamp, getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.sourceRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n\n        const source = this.sourceRef.current;\n        if (!source) return;\n\n        if (source.src !== src) {\n            source.src = src;\n            player.load();\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (\n                this.inView &&\n                this.windowFocused &&\n                !this.openMediaViewer &&\n                !this.openProfileMediaViewer &&\n                !this.openIV\n            ) {\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { minithumbnail, thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = clamp(progressTime / videoDuration * 100, 0, 100);\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc || miniSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        >\n                            <source ref={this.sourceRef} src={null} type='video/mp4'/>\n                        </video>\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', {\n                                    'media-blurred': isBlurred,\n                                    'media-mini-blurred': !src && !thumbnailSrc && isBlurred\n                                })}\n                                style={style}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<DownloadIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport AudioAction from './AudioAction';\nimport VoiceNoteTile from '../../Tile/VoiceNoteTile';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, title, meta, caption } = this.props;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <div className={classNames('voice-note', 'document', { 'media-title': title })}>\n                <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNote;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport DocumentTile from './DocumentTile';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './VoiceNoteTile.css';\n\nclass VoiceNoteTile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { file, openMedia } = this.props;\n        const { playing } = this.state;\n\n        return (\n            <DocumentTile\n                thumbnail={null}\n                file={file}\n                openMedia={openMedia}\n                icon={<DownloadIcon />}\n                completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n            />\n        );\n    }\n}\n\nVoiceNoteTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNoteTile;\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Draws a rounded rectangle using the current state of the canvas.\n * If you omit the last three params, it will draw a rectangle\n * outline with a 5 pixel border radius\n * @param {CanvasRenderingContext2D} ctx\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} [radius = 5] The corner radius; It can also be an object\n *                 to specify different radii for corners\n * @param {Number} [radius.tl = 0] Top left\n * @param {Number} [radius.tr = 0] Top right\n * @param {Number} [radius.br = 0] Bottom right\n * @param {Number} [radius.bl = 0] Bottom left\n * @param {Boolean} [fill = false] Whether to fill the rectangle.\n * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\n */\nfunction roundRect(ctx, x, y, width, height, radius, fill, stroke) {\n    if (typeof stroke === 'undefined') {\n        stroke = true;\n    }\n    if (typeof radius === 'undefined') {\n        radius = 5;\n    }\n    if (typeof radius === 'number') {\n        radius = { tl: radius, tr: radius, br: radius, bl: radius };\n    } else {\n        var defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\n        for (var side in defaultRadius) {\n            radius[side] = radius[side] || defaultRadius[side];\n        }\n    }\n    ctx.beginPath();\n    ctx.moveTo(x + radius.tl, y);\n    ctx.lineTo(x + width - radius.tr, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n    ctx.lineTo(x + width, y + height - radius.br);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n    ctx.lineTo(x + radius.bl, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n    ctx.lineTo(x, y + radius.tl);\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    if (stroke) {\n        ctx.stroke();\n    }\n}\n\nclass Particle {\n    constructor(fireworks) {\n        this.fireworks = fireworks;\n        this.type = 0;\n        this.colorType = 0;\n        this.side = 0;\n        this.typeSize = 4;\n        this.xFinished = false;\n        this.finishedStart = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.rotation = 0;\n        this.moveX = 0;\n        this.moveY = 0;\n    }\n\n    draw(ctx) {\n        ctx.fillStyle = this.colorType;\n\n        if (this.type === 0) {\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.typeSize, 0, Math.PI * 2, false);\n            ctx.fill();\n        } else {\n            ctx.save();\n            ctx.translate(this.x, this.y);\n            ctx.rotate((this.rotation * Math.PI) / 180);\n            roundRect(ctx, -this.typeSize, -2, this.typeSize * 2, 4, 2, true, false);\n            ctx.restore();\n        }\n    }\n\n    update(dt) {\n        const moveCoef = dt / 16.0;\n        this.x += this.moveX * moveCoef;\n        this.y += this.moveY * moveCoef;\n        if (this.xFinished !== 0) {\n            const dp = 0.5;\n            if (this.xFinished === 1) {\n                this.moveX += dp * moveCoef * 0.05;\n                if (this.moveX >= dp) {\n                    this.xFinished = 2;\n                }\n            } else {\n                this.moveX -= dp * moveCoef * 0.05;\n                if (this.moveX <= -dp) {\n                    this.xFinished = 1;\n                }\n            }\n        } else {\n            if (this.side === 0) {\n                if (this.moveX > 0) {\n                    this.moveX -= moveCoef * 0.05;\n                    if (this.moveX <= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            } else {\n                if (this.moveX < 0) {\n                    this.moveX += moveCoef * 0.05;\n                    if (this.moveX >= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            }\n        }\n        let yEdge = -0.5;\n        const wasNegative = this.moveY < yEdge;\n        if (this.moveY > yEdge) {\n            this.moveY += (1.0 / 3.0) * moveCoef * this.fireworks.speedCoef;\n        } else {\n            this.moveY += (1.0 / 3.0) * moveCoef;\n        }\n        if (wasNegative && this.moveY > yEdge) {\n            this.fireworks.fallingDownCount++;\n        }\n        if (this.type === 1) {\n            this.rotation += moveCoef * 10;\n            if (this.rotation > 360) {\n                this.rotation -= 360;\n            }\n        }\n\n        return this.y >= this.fireworks.getMeasuredHeight();\n    }\n}\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nclass Fireworks {\n    static colors = ['#E8BC2C', '#D0049E', '#02CBFE', '#5723FD', '#FE8C27', '#6CB859'];\n\n    constructor(context) {\n        this.context = context;\n        this.particlesCount = 60;\n        this.fallParticlesCount = 30;\n        this.particles = [];\n        this.speedCoef = 1.0;\n        this.fallingDownCount = 0;\n    }\n\n    getMeasuredHeight() {\n        return this.context.canvas.clientHeight;\n    }\n\n    getMeasuredWidth() {\n        return this.context.canvas.clientWidth;\n    }\n\n    createParticle(fall) {\n        const particle = new Particle(this);\n        particle.colorType = Fireworks.colors[getRandomInt(0, Fireworks.colors.length)];\n        particle.type = getRandomInt(0, 2);\n        particle.side = getRandomInt(0, 2);\n        particle.finishedStart = 1 + getRandomInt(0, 2);\n        if (particle.type === 0) {\n            particle.typeSize = 4 + Math.random() * 2;\n        } else {\n            particle.typeSize = 4 + Math.random() * 4;\n        }\n        if (fall) {\n            particle.y = -Math.random() * this.getMeasuredHeight() * 1.2;\n            particle.x = 5 + getRandomInt(0, this.getMeasuredWidth() - 10);\n            particle.xFinished = particle.finishedStart;\n        } else {\n            const xOffset = 4 + getRandomInt(0, 10);\n            const yOffset = this.getMeasuredHeight() / 4;\n            if (particle.side === 0) {\n                particle.x = -xOffset;\n            } else {\n                particle.x = this.getMeasuredWidth() + xOffset;\n            }\n            particle.rotation = Math.random() * 360;\n            particle.moveX = (particle.side === 0 ? 1 : -1) * (1.2 + Math.random() * 4);\n            particle.moveY = -(4 + Math.random() * 4);\n            particle.y = yOffset / 2 + getRandomInt(0, yOffset * 2);\n        }\n        // console.log(`particle side=${particle.side} x=${particle.x} y=${particle.y} moveX=${particle.moveX} moveY=${particle.moveY}`);\n        return particle;\n    }\n\n    start() {\n        if (this.started) {\n            return;\n        }\n\n        this.particles = [];\n        this.started = true;\n        this.startedFall = false;\n        this.fallingDownCount = 0;\n        this.speedCoef = 1.0;\n        this.lastUpdateTime = 0;\n        for (let a = 0; a < this.particlesCount; a++) {\n            this.particles.push(this.createParticle(false));\n        }\n\n        this.draw();\n    }\n\n    startFall() {\n        if (this.startedFall) {\n            return;\n        }\n        this.startedFall = true;\n        for (let a = 0; a < this.fallParticlesCount; a++) {\n            this.particles.push(this.createParticle(true));\n        }\n    }\n\n    draw() {\n        const newTime = Date.now();\n        let dt = newTime - this.lastUpdateTime;\n        this.lastUpdateTime = newTime;\n        if (dt > 18) {\n            dt = 16;\n        }\n        // console.log('draw dt', dt);\n        this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        for (let a = 0, N = this.particles.length; a < N; a++) {\n            const p = this.particles[a];\n            p.draw(this.context);\n            if (p.update(dt)) {\n                this.particles.splice(a, 1);\n                a--;\n                N--;\n            }\n        }\n        if (this.fallingDownCount >= this.particlesCount / 2 && this.speedCoef > 0.2) {\n            this.startFall();\n            this.speedCoef -= (dt / 16.0) * 0.15;\n            if (this.speedCoef < 0.2) {\n                this.speedCoef = 0.2;\n            }\n        }\n        if (this.particles.length) {\n            window.requestAnimationFrame(() => this.draw());\n        } else {\n            this.started = false;\n            this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        }\n    }\n}\n\nclass FireworksComponent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.canvasRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.attachToParent();\n    }\n\n    componentWillUnmount() {\n        this.detachFromParent();\n    }\n\n    attachToParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = parentNode;\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n        window.addEventListener('resize', this.onResize);\n    }\n\n    detachFromParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = null;\n        window.removeEventListener('resize', this.onResize);\n    }\n\n    onResize = () => {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n    };\n\n    start() {\n        const ctx = this.canvasRef.current.getContext('2d');\n\n        const fireworks = new Fireworks(ctx);\n        fireworks.start();\n    }\n\n    render() {\n        return (\n            <canvas\n                ref={this.canvasRef}\n                style={{\n                    zIndex: 2,\n                    position: 'absolute',\n                    left: 0,\n                    top: 0,\n                    width: '100%',\n                    height: '100%',\n                    pointerEvents: 'none'\n                }}\n            />\n        );\n    }\n}\n\nFireworksComponent.propTypes = {};\n\nexport default FireworksComponent;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nclass PollRadio extends React.Component {\n    render() {\n        const { chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    color='primary'\n                    classes={{\n                        root: 'poll-radio-root',\n                        colorPrimary: 'message-control',\n                        disabled: 'message-control-disabled'\n                    }}\n                    TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? 'poll-radio-icon' : null }} />}\n                />\n                {beingChosen && (\n                    <CircularProgress\n                        size={20}\n                        thickness={4.4}\n                        classes={{ root: 'poll-radio-progress-root', colorPrimary: 'message-control' }}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool,\n    beingChosen: PropTypes.bool,\n    hidden: PropTypes.bool\n};\n\nexport default PollRadio;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, theme, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (theme !== nextProps.theme) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className='poll-percentage'>\n                {/*{!closed && chosen ? (*/}\n                {/*    <a className='poll-percentage-action' onClick={onClick}>*/}\n                {/*        {animated + '%'}*/}\n                {/*    </a>*/}\n                {/*) : (*/}\n                {/*    <>{animated + '%'}</>*/}\n                {/*)}*/}\n                <>{animated + '%'}</>\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CheckIcon from '../../../Assets/Icons/Check';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport './PollOption.css';\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    render() {\n        const { option, onChange, canBeSelected, closed, maxVoterCount, t, type, isCorrect } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, isMultiChoosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage value={vote_percentage} chosen={is_chosen} closed={closed} />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen || isMultiChoosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        {(is_chosen || isCorrect) && (\n                            <div\n                                className={classNames(\n                                    'poll-option-mark',\n                                    { 'poll-option-mark-correct': type === 'correct' },\n                                    { 'poll-option-mark-incorrect': type === 'incorrect' }\n                                )}>\n                                {type === 'incorrect' ? (\n                                    <CloseIcon className='poll-option-mark-icon' />\n                                ) : (\n                                    <CheckIcon className='poll-option-mark-icon' />\n                                )}\n                            </div>\n                        )}\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <LinearProgress\n                    classes={{\n                        root: 'poll-option-progress-root',\n                        bar: classNames(\n                            'poll-option-progress-bar',\n                            { 'poll-option-progress-bar-correct': type === 'correct' },\n                            { 'poll-option-progress-bar-incorrect': type === 'incorrect' }\n                        )\n                    }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    type: PropTypes.oneOf(['regular', 'correct', 'incorrect']).isRequired,\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nexport default withTranslation()(PollOption);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './UserPlaceholder.css';\nimport UserStatus from './UserStatus';\n\nclass UserPlaceholder extends React.Component {\n    render() {\n        const { index, showStatus } = this.props;\n\n        const titleWidth = `${20 + Math.sin(index) * 10}%`;\n        const contentWidth = `${30 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='user-placeholder'>\n                <div className='user-wrapper'>\n                    <div className='user-placeholder-tile' />\n                    <div className='user-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            <div className='dialog-placeholder-title' style={{ width: contentWidth, marginLeft: 8 }} />\n                        </div>\n                        {showStatus && (\n                            <div className='tile-second-row'>\n                                <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showStatus: PropTypes.bool\n};\n\nUserPlaceholder.defaultProps = {\n    showStatus: true\n};\n\nexport default UserPlaceholder;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../Tile/User';\nimport UserPlaceholder from '../Tile/UserPlaceholder';\nimport { openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResult.css';\n\nclass PollOptionResult extends React.Component {\n    onClick = () => {\n        const { userId } = this.props;\n        if (!userId) return;\n\n        openUser(userId, true);\n\n        setTimeout(() => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateClosePollResults'\n            });\n        }, 0);\n    };\n\n    render() {\n        const { index, userId } = this.props;\n\n        const content = userId ? (\n            <User userId={userId} showStatus={false} />\n        ) : (\n            <UserPlaceholder index={index} showStatus={false} />\n        );\n\n        return (\n            <ListItem button className='user-list-item' onClick={this.onClick}>\n                {content}\n            </ListItem>\n        );\n    }\n}\n\nPollOptionResult.propTypes = {\n    index: PropTypes.number.isRequired,\n    userId: PropTypes.number\n};\n\nexport default PollOptionResult;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport PollOptionResult from './PollOptionResult';\nimport { loadUsersContent } from '../../Utils/File';\nimport { POLL_RESULTS_FIRST_SLICE_LENGTH, POLL_RESULTS_LEAVE_LENGTH, POLL_RESULTS_SLICE_LENGTH } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResults.css';\n\nclass PollOptionResults extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { option } = this.props;\n\n        const count =\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\n                ? option.voter_count\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\n\n        this.state = {\n            voters: [],\n            offset: 0,\n            count\n        };\n    }\n\n    async updateVoters(offset, count, loadMore) {\n        const { chatId, messageId, optionId, option } = this.props;\n        const { voters } = this.state;\n        if (count <= 0) return;\n\n        const limit = count - offset;\n        // console.log(`[poll] getPollVoters start option_id=${optionId} offset=${offset} limit=${limit}`);\n        const result = await TdLibController.send({\n            '@type': 'getPollVoters',\n            chat_id: chatId,\n            message_id: messageId,\n            option_id: optionId,\n            offset,\n            limit\n        });\n        // console.log(`[poll] getPollVoters end option_id=${optionId} offset=${offset} limit=${limit}`, result, result.user_ids.map(x => UserStore.get(x)));\n\n        if (this.props.option !== option) {\n            return;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, result.user_ids);\n\n        this.setState(\n            {\n                voters: [...voters, ...result.user_ids]\n            },\n            async () => {\n                if (result.user_ids.length < limit && loadMore) {\n                    const offset2 = offset + result.user_ids.length;\n\n                    this.updateVoters(offset2, count, false);\n                }\n            }\n        );\n    }\n\n    componentDidMount() {\n        const { offset, count } = this.state;\n\n        this.updateVoters(offset, count, true);\n    }\n\n    handleShowMore = () => {\n        const { option } = this.props;\n        const { count } = this.state;\n\n        const newOffset = count;\n        const newCount = Math.min(option.voter_count, count + POLL_RESULTS_SLICE_LENGTH);\n\n        this.setState(\n            {\n                offset: newOffset,\n                count: newCount\n            },\n            () => {\n                this.updateVoters(newOffset, newCount, true);\n            }\n        );\n    };\n\n    handleCollapse = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { option } = this.props;\n\n        const count =\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\n                ? option.voter_count\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\n\n        this.setState({\n            voters: this.state.voters.slice(0, count),\n            offset: 0,\n            count\n        });\n    };\n\n    render() {\n        const { option, isQuiz, t } = this.props;\n        const { voters, count } = this.state;\n\n        const { text, voter_count, vote_percentage } = option;\n        if (voter_count === 0) {\n            return null;\n        }\n\n        const results = [];\n        for (let i = 0; i < count; i++) {\n            const userId = i < voters.length ? voters[i] : null;\n            results.push(<PollOptionResult key={`${i}_userId=${userId}`} index={i} userId={userId} />);\n        }\n\n        const voterCount = isQuiz\n            ? voter_count !== 1\n                ? `${voter_count} answers`\n                : `${voter_count} answer`\n            : voter_count !== 1\n            ? `${voter_count} votes`\n            : `${voter_count} vote`;\n\n        let showMoreButton = null;\n        const showMoreCount = voter_count - count;\n        if (showMoreCount > 0) {\n            const showMore = isQuiz\n                ? showMoreCount !== 1\n                    ? `${showMoreCount} answers`\n                    : `${showMoreCount} answer`\n                : showMoreCount !== 1\n                ? `${showMoreCount} votes`\n                : `${showMoreCount} vote`;\n\n            showMoreButton = (\n                <Button\n                    classes={{ root: 'poll-option-results-button' }}\n                    color='primary'\n                    fullWidth\n                    onClick={this.handleShowMore}>\n                    {t('ShowVotesOT').replace('%1$d', showMore)}\n                </Button>\n            );\n        }\n        const showCollapse =\n            count > POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH &&\n            voter_count > POLL_RESULTS_FIRST_SLICE_LENGTH;\n\n        return (\n            <>\n                <div className='poll-option-results-caption'>\n                    <div className='poll-option-results-answer'>{`${text} — ${vote_percentage}%`}</div>\n                    {showCollapse ? (\n                        <a onClick={this.handleCollapse}>{t('PollCollapse')}</a>\n                    ) : (\n                        <div className='poll-option-results-count'>{voterCount}</div>\n                    )}\n                </div>\n                {results}\n                {showMoreButton}\n            </>\n        );\n    }\n}\n\nPollOptionResults.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    optionId: PropTypes.number.isRequired,\n    option: PropTypes.object.isRequired,\n    isQuiz: PropTypes.bool.isRequired\n};\n\nexport default withTranslation()(PollOptionResults);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport PollOptionResults from './PollOptionResults';\nimport PollStore from '../../Stores/PollStore';\nimport './PollResultsDialog.css';\n\nclass PollResultsDialog extends React.Component {\n    componentDidMount() {\n        PollStore.on('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\n    }\n\n    onClientUpdateClosePollResults = update => {\n        const { onClose } = this.props;\n        onClose();\n    };\n\n    handleClose = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { onClose } = this.props;\n        onClose();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleContextMenu = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        if (!poll) return;\n\n        const { options, type, question } = poll;\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\n\n        return (\n            <Dialog\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                transitionDuration={0}\n                open={true}\n                onClick={this.handleClick}\n                onContextMenu={this.handleContextMenu}\n                onClose={this.handleClose}\n                aria-labelledby='poll-results-title'>\n                <DialogTitle id='poll-results-title'>{isQuiz ? t('QuizAnswers') : t('PollResults')}</DialogTitle>\n                <DialogContent classes={{ root: 'poll-results-content' }}>\n                    <div className='poll-results-question'>{question}</div>\n                    {options.map((x, i) => (\n                        <PollOptionResults\n                            key={i}\n                            isQuiz={isQuiz}\n                            chatId={chatId}\n                            messageId={messageId}\n                            optionId={i}\n                            option={x}\n                        />\n                    ))}\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nPollResultsDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(PollResultsDialog);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FireworksComponent from './FireworksControl';\nimport PollOption from './PollOption';\nimport UserTile from '../../Tile/UserTile';\nimport { setPollAnswer } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport TdLibController from './../../../Controllers/TdLibController';\nimport './Poll.css';\nimport PollResultsDialog from '../../Popup/PollResultsDialog';\n\nclass Poll extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.fireworksRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId, poll } = this.props;\n\n        if (poll && poll.type['@type'] === 'pollTypeQuiz') {\n            const { poll: prevPoll } = prevProps;\n            if (prevPoll.type.correct_option_id === -1 && poll.type.correct_option_id !== -1) {\n                const fireworks = this.fireworksRef.current;\n                if (!fireworks) return;\n\n                if (poll.options[poll.type.correct_option_id].is_chosen) {\n                    fireworks.start();\n                } else {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMessageShake',\n                        chatId,\n                        messageId\n                    });\n                }\n            }\n        }\n    }\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 answer';\n\n        return count + ' answers';\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, poll } = this.props;\n        if (!poll) return;\n\n        const { type } = poll;\n        if (!type) return;\n\n        if (this.viewResults(poll)) {\n            return;\n        }\n\n        if (!type.allow_multiple_answers) {\n            return;\n        }\n\n        const optionIds = [];\n        poll.options.forEach((x, index) => {\n            if (x.isMultiChoosen) {\n                optionIds.push(index);\n            }\n        });\n\n        if (!optionIds.length) {\n            return;\n        }\n\n        setPollAnswer(chatId, messageId, optionIds);\n    };\n\n    handleVote = index => {\n        const { chatId, messageId, poll } = this.props;\n        if (!poll) return;\n\n        const { type } = poll;\n        if (!type) return;\n\n        if (type['@type'] === 'pollTypeRegular' && type.allow_multiple_answers) {\n            poll.options[index].isMultiChoosen = !poll.options[index].isMultiChoosen;\n            this.forceUpdate();\n        } else {\n            setPollAnswer(chatId, messageId, [index]);\n        }\n    };\n\n    viewResults(poll) {\n        if (!poll) return false;\n\n        const { options, is_closed, is_anonymous } = poll;\n        if (is_anonymous) {\n            return false;\n        }\n\n        return is_closed || options.some(x => x.is_chosen);\n    }\n\n    getOptionType(index, poll) {\n        const types = ['regular', 'correct', 'incorrect'];\n        const defaultTypeId = 0;\n        const correctTypeId = 1;\n        const incorrectTypeId = 2;\n        if (!poll) return types[defaultTypeId];\n\n        const option = poll.options[index];\n        if (!option) return types[defaultTypeId];\n        if (!option.is_chosen) return types[defaultTypeId];\n\n        const { type } = poll;\n        if (!type) return types[defaultTypeId];\n        if (type['@type'] !== 'pollTypeQuiz') return types[defaultTypeId];\n\n        const { correct_option_id } = type;\n        if (correct_option_id === -1) return types[defaultTypeId];\n\n        return correct_option_id === index ? types[correctTypeId] : types[incorrectTypeId];\n    }\n\n    getOptionIsCorrect(index, poll) {\n        if (!poll) return false;\n\n        const option = poll.options[index];\n        if (!option) return false;\n\n        const { type } = poll;\n        if (!type) return false;\n        if (type['@type'] !== 'pollTypeQuiz') return false;\n\n        const { correct_option_id } = type;\n        if (correct_option_id === -1) return false;\n\n        return correct_option_id === index;\n    }\n\n    handleOpenResults = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { poll } = this.props;\n\n        this.setState({\n            viewResultsPoll: poll\n        });\n    };\n\n    handleCloseResults = () => {\n        this.setState({\n            viewResultsPoll: null\n        });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t, meta } = this.props;\n        const { viewResultsPoll } = this.state;\n        const { question, options, total_voter_count, type, is_closed, is_anonymous, recent_voter_user_ids } = poll;\n\n        let subtitle = t('FinalResults');\n        if (!is_closed) {\n            switch (type['@type']) {\n                case 'pollTypeRegular': {\n                    subtitle = is_anonymous ? t('AnonymousPoll') : t('PublicPoll');\n                    break;\n                }\n                case 'pollTypeQuiz': {\n                    subtitle = is_anonymous ? t('AnonymousQuizPoll') : t('QuizPoll');\n                    break;\n                }\n            }\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const isSelected = !is_closed && options.some(x => x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n        const showViewResults = this.viewResults(poll);\n        const showButton = (type.allow_multiple_answers && !isSelected) || showViewResults;\n        const buttonEnabled = showViewResults || options.some(x => x.isMultiChoosen);\n        let recentVoters = [];\n        if (recent_voter_user_ids) {\n            recentVoters = recent_voter_user_ids.map(id => <UserTile key={id} poll userId={id} />);\n        }\n\n        return (\n            <div className='poll'>\n                {isQuiz && <FireworksComponent ref={this.fireworksRef} />}\n                <div className='poll-question'>\n                    <div className='poll-question-title'>{question}</div>\n                    <div className='poll-question-subtitle'>\n                        <span style={{ marginRight: 6 }}>{subtitle}</span>\n                        {recentVoters}\n                    </div>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            type={this.getOptionType(index, poll)}\n                            isCorrect={this.getOptionIsCorrect(index, poll)}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                        />\n                    ))}\n                </div>\n                {showButton ? (\n                    <Button\n                        fullWidth\n                        color='primary'\n                        classes={{\n                            root: 'poll-button',\n                            textPrimary: 'message-control',\n                            disabled: 'message-control-disabled'\n                        }}\n                        TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\n                        disabled={!buttonEnabled}\n                        onClick={showViewResults ? this.handleOpenResults : this.handleSubmit}>\n                        {showViewResults ? t('PollViewResults') : t('PollSubmitVotes')}\n                    </Button>\n                ) : (\n                    <div className='poll-total-count'>\n                        {this.getTotalVoterCountString(total_voter_count, t)}\n                        {meta}\n                    </div>\n                )}\n                {Boolean(viewResultsPoll) && (\n                    <PollResultsDialog\n                        chatId={chatId}\n                        messageId={messageId}\n                        poll={viewResultsPoll}\n                        onClose={this.handleCloseResults}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(Poll);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fillRule='evenodd'>\n        <path d='M6,0 L33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,48 C54,51.3137085 51.3137085,54 48,54 L6,54 C2.6862915,54 4.05812251e-16,51.3137085 0,48 L0,6 C-4.05812251e-16,2.6862915 2.6862915,6.08718376e-16 6,0 Z' />\n        <path\n            d='M33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,22 C54,19.790861 52.209139,18 50,18 L40,18 C37.790861,18 36,16.209139 36,14 L36,4 C36,1.790861 34.209139,-3.88578059e-16 32,0 L33.5147186,0 Z'\n            fill='#000000'\n            style={{ mixBlendMode: 'normal' }}\n            opacity='0.15'\n        />\n    </g>,\n    'Document'\n);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { meta } = this.props;\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n                {meta}\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport DocumentIcon from '../../../Assets/Icons/Document';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia, width, height, meta, title, caption } = this.props;\n        if (!document) return null;\n\n        const { minithumbnail, thumbnail, file_name } = document;\n        const file = document.document;\n\n        const style = width && height ? { width, height } : null;\n        const completeIconFunc = thumb =>\n            thumb ? null : (\n                <div className='document-tile-complete-icon'>\n                    <DocumentIcon className='document-tile-icon-fill' viewBox='0 0 54 54' />\n                    <div className='document-tile-file-ext'>{getExtension(file_name)}</div>\n                </div>\n            );\n\n        return (\n            <div className={classNames('document', { 'media-title': title })} style={style}>\n                <DocumentTile\n                    minithumbnail={minithumbnail}\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={completeIconFunc}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} meta={caption ? null : meta} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    width: PropTypes.number,\n    height: PropTypes.number\n};\n\nexport default Document;\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"ebc9db11cd3500eeab4f.worker.js\");\n};","/*\n*license\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n*license\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { loaded } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size, t } = this.props;\n        const { loaded } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_4', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat, t);\n        const src = getSrc(photo ? photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n*license\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n*license\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n*license\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n*license\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n*license\n */\nimport TdLibController from '../Controllers/TdLibController';\nimport ChatStore from '../Stores/ChatStore';\nimport { isChatMuted } from '../Utils/Chat';\nimport { MUTED_VALUE_MAX, MUTED_VALUE_MIN } from '../Constants';\n\nexport async function getChat(chatId) {\n    const chat = TdLibController.send({\n        '@type': 'getChat',\n        chat_id: chatId\n    });\n    ChatStore.set(chat);\n\n    return chat;\n}\n\nexport function setChatChatList(chatId, chatList) {\n    TdLibController.send({\n        '@type': 'setChatChatList',\n        chat_id: chatId,\n        chat_list: chatList\n    });\n}\n\nexport function toggleChatIsPinned(chatId, isPinned) {\n    TdLibController.send({\n        '@type': 'toggleChatIsPinned',\n        chat_id: chatId,\n        is_pinned: isPinned\n    });\n}\n\nexport function toggleChatIsMarkedAsUnread(chatId, isMarkedAsUnread) {\n    TdLibController.send({\n        '@type': 'toggleChatIsMarkedAsUnread',\n        chat_id: chatId,\n        is_marked_as_unread: isMarkedAsUnread\n    });\n}\n\nexport function toggleChatNotificationSettings(chatId, isMuted) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return;\n\n    const isMutedPrev = isChatMuted(chatId);\n    if (isMutedPrev === isMuted) {\n        return;\n    }\n\n    const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n    const newNotificationSettings = {\n        ...chat.notification_settings,\n        use_default_mute_for: false,\n        mute_for: muteFor\n    };\n\n    TdLibController.send({\n        '@type': 'setChatNotificationSettings',\n        chat_id: chatId,\n        notification_settings: newNotificationSettings\n    });\n}\n\nexport async function getChatCounters(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const promises = [];\n\n    const photoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterPhoto' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(photoCounter);\n\n    const videoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVideo' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(videoCounter);\n\n    const documentCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterDocument' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(documentCounter);\n\n    const audioCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterAudio' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(audioCounter);\n\n    const urlCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterUrl' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(urlCounter);\n\n    const voiceAndVideoNoteCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVoiceNote' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(voiceAndVideoNoteCounter);\n\n    return await Promise.all(promises);\n}\n","/*\n*license\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n*license\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n*license\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './MoreListItem.css';\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className='list-item' onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className='list-item' onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className='list-item' onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MoreListItem);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport { copy } from '../../Utils/Text';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('TextCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nexport default SharedDocument;\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n*license\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 8) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n*license\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            AppStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n*license\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n*license\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatIsPinned', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_pinned, unread_count } = chat;\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {is_pinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n*license\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n*license\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n*license\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n*license\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canSetChatChatList,\n    isChatArchived,\n    isChatMuted,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    setChatChatList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const chat = ChatStore.get(chatId);\n            const { is_pinned } = chat;\n            const canTogglePin = (await this.canPinChats(chatId)) || is_pinned;\n            const canToggleArchive = canSetChatChatList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: isChatArchived(chatId) ? { '@type': 'chatListArchive' } : { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && chat.is_pinned ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const { is_pinned } = chat;\n\n        if (!is_pinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, !is_pinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canSetChatChatList(chatId)) return;\n\n        setChatChatList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        const { is_pinned } = chat;\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {is_pinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n*license\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={className}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n*license\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { isChatMember } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (isAuthorizationReady(authorizationState)) {\n            await FileStore.initDB(() => this.onLoadNext(true));\n        }\n    };\n\n    saveCache = () => {\n        const { onSaveCache } = this.props;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatOrder = update => {\n        const { type } = this.props;\n        const { chats } = this.state;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id, order } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        const { chat_list } = chat;\n        if (chat_list && chat_list['@type'] !== type) {\n            return;\n        }\n\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0' && isChatMember(chat.id)) {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                AppStore.changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[update] GETCHATS start');\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': type },\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[update] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady' });\n            }\n        });\n        // TdLibController.send({\n        //     '@type': 'getChats',\n        //     offset_chat_id: offsetChatId,\n        //     offset_order: offsetOrder,\n        //     limit: CHAT_SLICE_LIMIT + 100\n        // });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { type, open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (type === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n            // <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n            //     {showArchive && offset === 0 && <Archive title={archiveTitle} />}\n            //     {dialogs}\n            // </div>\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n*license\n */\n\nexport class KeyboardHandler {\n    constructor(onKeyDown) {\n        this.onKeyDown = onKeyDown;\n    }\n}\n\nclass KeyboardManager {\n    constructor() {\n        this.handlers = [];\n\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        const { handlers } = this;\n        if (!handlers.length) return;\n\n        const handler = handlers[handlers.length - 1];\n        if (handler) {\n            // event.preventDefault();\n            // event.stopPropagation();\n\n            const { onKeyDown } = handler;\n            if (onKeyDown) {\n                onKeyDown(event);\n            }\n        }\n    };\n\n    add(handler) {\n        // console.log('[sm] add', page);\n        this.handlers.push(handler);\n    }\n\n    remove(handler) {\n        // console.log('[sm] remove', page);\n        const index = this.handlers.indexOf(handler);\n        if (index === -1) return;\n\n        this.handlers.splice(index, 1);\n    }\n}\n\nconst manager = new KeyboardManager();\nexport default manager;\n","/*\n*license\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n*license\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n\n\n        if(value.chats){\n            const marketingToolFakeChat = {\n                \"@type\":\"chat\",\n                \"id\":1111, //MARKETING TOOL\n                \"type\":{\n                  \"@type\":\"chatTypePrivate\",\n                  \"user_id\":\"marketingTool\"\n                },\n                \"title\":\"Marketing Tool\",\n                \"photo\":{\n                  \"@type\":\"chatPhoto\",\n                  \"small\":{\n                    \"@type\":\"file\",\n                    \"id\":1,\n                    \"size\":0,\n                    \"expected_size\":0,\n                    \"local\":{\n                      \"@type\":\"localFile\",\n                      \"path\":\"\",\n                      \"can_be_downloaded\":true,\n                      \"can_be_deleted\":false,\n                      \"is_downloading_active\":false,\n                      \"is_downloading_completed\":true,\n                      \"download_offset\":0,\n                      \"downloaded_prefix_size\":0,\n                      \"downloaded_size\":0\n                    },\n                    \"remote\":{\n                      \"@type\":\"remoteFile\",\n                      \"id\":\"AQADAQADr6cxGyjbCwAJRPdrBgAEAgADKNsLAAW77XFbp5pF0aozAAIYBA\",\n                      \"unique_id\":\"AQADRPdrBgAEqjMAAg\",\n                      \"is_uploading_active\":false,\n                      \"is_uploading_completed\":true,\n                      \"uploaded_size\":0\n                    }\n                  },\n                  \"big\":{\n                    \"@type\":\"file\",\n                    \"id\":2,\n                    \"size\":0,\n                    \"expected_size\":0,\n                    \"local\":{\n                      \"@type\":\"localFile\",\n                      \"path\":\"\",\n                      \"can_be_downloaded\":true,\n                      \"can_be_deleted\":false,\n                      \"is_downloading_active\":false,\n                      \"is_downloading_completed\":false,\n                      \"download_offset\":0,\n                      \"downloaded_prefix_size\":0,\n                      \"downloaded_size\":0\n                    },\n                    \"remote\":{\n                      \"@type\":\"remoteFile\",\n                      \"id\":\"AQADAQADr6cxGyjbCwAJRPdrBgAEAwADKNsLAAW77XFbp5pF0awzAAIYBA\",\n                      \"unique_id\":\"AQADRPdrBgAErDMAAg\",\n                      \"is_uploading_active\":false,\n                      \"is_uploading_completed\":true,\n                      \"uploaded_size\":0\n                    }\n                  }\n                },\n                \"permissions\":{\n                  \"@type\":\"chatPermissions\",\n                  \"can_send_messages\":true,\n                  \"can_send_media_messages\":true,\n                  \"can_send_polls\":true,\n                  \"can_send_other_messages\":true,\n                  \"can_add_web_page_previews\":true,\n                  \"can_change_info\":false,\n                  \"can_invite_users\":false,\n                  \"can_pin_messages\":false\n                },\n                \"order\":\"6826228184820744200\",\n                \"is_pinned\":false,\n                \"is_marked_as_unread\":false,\n                \"is_sponsored\":false,\n                \"has_scheduled_messages\":false,\n                \"can_be_deleted_only_for_self\":true,\n                \"can_be_deleted_for_all_users\":true,\n                \"can_be_reported\":false,\n                \"default_disable_notification\":false,\n                \"unread_count\":0,\n                \"last_read_inbox_message_id\":8388608,\n                \"last_read_outbox_message_id\":0,\n                \"unread_mention_count\":0,\n                \"notification_settings\":{\n                  \"@type\":\"chatNotificationSettings\",\n                  \"use_default_mute_for\":true,\n                  \"mute_for\":0,\n                  \"use_default_sound\":true,\n                  \"sound\":\"default\",\n                  \"use_default_show_preview\":true,\n                  \"show_preview\":false,\n                  \"use_default_disable_pinned_message_notifications\":true,\n                  \"disable_pinned_message_notifications\":false,\n                  \"use_default_disable_mention_notifications\":true,\n                  \"disable_mention_notifications\":false\n                },\n                \"pinned_message_id\":0,\n                \"reply_markup_message_id\":0,\n                \"client_data\":\"\",\n                \"chat_list\":{\n                  \"@type\":\"chatListMain\"\n                }\n            \n            }\n            value.chats.push(marketingToolFakeChat)\n            const myModifyValue = value;//new value\n\n            localStorage.setItem(key, JSON.stringify(myModifyValue));\n\n        }else{\n            localStorage.setItem(key, JSON.stringify(value)); //original code\n\n        }\n       \n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n*license\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveChatsInternal = debounce(this.saveChatsInternal, 2000);\n    }\n\n    reset = () => {\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async loadCache() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.chat_list) {\n                    ChatStore.updateChatChatList(x.id, x.chat_list);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async saveChats(chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n\n        this.saveChatsInternal();\n    }\n\n    async saveChatsInternal() {\n        // console.log('[cm] saveChatsInternal', this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.filter(x => Boolean(x)).forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n*license\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n    \n    handleCustomContacts = ()=>{\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCustomContacts',\n            open: true\n        });\n\n    }\n\n    handleMarketingTool = ()=>{\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMarketingTool',\n            open: true\n        });\n\n        TdLibController.setChatId(1111);//MARKETING TOOL FAKE CHAT DATA\n\n    }\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleMarketingTool}>\n                        <ListItemIcon>\n                            <AttachMoneyIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('MarketingTool')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleCustomContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CustomContacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n*license\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getBoldItalicEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getBoldItalicEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities })\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n*license\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n*license\n */\nimport ChatStore from '../Stores/ChatStore';\nimport { orderCompare } from './Common';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                if (chat.order !== '0') chats.push(chat);\n                chatsOrder.push({ order: chat.order, id: chat.id, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(b.order, a.order));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        return {\n            left: this.divRef.current.offsetLeft,\n            top: this.divRef.current.offsetTop,\n            width: this.divRef.current.offsetWidth,\n            height: this.divRef.current.offsetHeight\n        }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('user-chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='user-chip-delete'>\n                    <CloseIcon className='user-chip-delete-icon'/>\n                </div>\n                <div className='user-chip-name'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            const currentHeight = wrapPanel.scrollHeight;\n            const currentOffsetHeight = wrapPanel.offsetHeight;\n\n            const expanded = currentHeight > prevHeight;\n            const collapsed = currentHeight < prevHeight;\n            // console.log('[wrap]', prevHeight, prevOffsetHeight, currentHeight, currentOffsetHeight, expanded, collapsed);\n\n            const maxHeight = 123;\n            if (expanded) {\n                if (prevHeight < maxHeight) {\n                    // console.log('[wrap] animate expand', Math.min(prevHeight, maxHeight), Math.min(currentHeight, maxHeight));\n                    wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                    // console.log('[wrap] animate expand', wrapPanel.style.cssText);\n                    requestAnimationFrame(() => {\n                        wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                        setTimeout(() => {\n                            // console.log('[wrap] scrollIntoView');\n                            this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                        }, 250);\n                        // console.log('[wrap] animate expand', wrapPanel.style.cssText);\n                    });\n                } else {\n                    // console.log('[wrap] expand', prevHeight, maxHeight);\n                    wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                    //wrapPanel.scrollTop = wrapPanel.scrollHeight;\n                    // console.log('[wrap] scrollIntoView');\n                    this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n                    // console.log('[wrap] expand', wrapPanel.style.cssText);\n                }\n            } else if (collapsed) {\n                if (currentHeight < maxHeight) {\n                    // console.log('[wrap] animate collapse', Math.min(prevHeight, maxHeight), Math.min(currentHeight, maxHeight));\n                    wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                    // console.log('[wrap] animate collapse', wrapPanel.style.cssText);\n                    requestAnimationFrame(() => {\n                        wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                        // console.log('[wrap] animate collapse', wrapPanel.style.cssText);\n                    });\n                } else {\n                    // console.log('[wrap] collapse', prevHeight, maxHeight, wrapPanel.scrollTop, prevScrollTop);\n                    wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                    wrapPanel.scrollTop = prevScrollTop;\n                    // console.log('[wrap] collapse', wrapPanel.style.cssText, wrapPanel.scrollTop);\n                }\n            } else {\n                if (isDeleting) {\n                    wrapPanel.style.cssText = prevCSSText;\n                    wrapPanel.scrollTop = prevScrollTop;\n                } else {\n                    // console.log('[wrap] scrollIntoView');\n                    this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n                }\n            }\n\n            this.animateItems(prevMap);\n        });\n    };\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","\nimport EventEmitter from '../Stores/EventEmitter';\n// import packageJson from '../../package.json';\nimport axios from 'axios';\nimport UserStore from '../Stores/UserStore';\n\n\nimport { stringToBoolean, getBrowser, getOSName } from '../Utils/Common';\nimport {\n    VERBOSITY_JS_MAX,\n    VERBOSITY_JS_MIN,\n    VERBOSITY_MAX,\n    VERBOSITY_MIN,\n    WASM_FILE_HASH,\n    WASM_FILE_NAME\n} from '../Constants';\nimport TdClient from 'tdweb/dist/tdweb';\n\nimport TdlipController from './TdLibController';\n// import TdClient from '@arseny30/tdweb/dist/tdweb';\n\n\n\n\nconst config = {\n    headers: {\n        'Content-Type': 'application/json;charset=UTF-8',\n        \"Access-Control-Allow-Origin\": \"*\",\n        'crossdomain':'true',\n    }\n};\n\n\nclass ContactController extends EventEmitter {\n    constructor() {\n        super();\n\n        // this.parameters = {\n        //     useTestDC: false,\n        //     readOnly: false,\n        //     verbosity: 1,\n        //     jsVerbosity: 3,\n        //     fastUpdating: true,\n        //     useDatabase: false,\n        //     mode: 'wasm'\n        // };\n\n        // this.disableLog = true;\n    }\n\n\n    importContactToBackend = async (contacts)=>{\n        var telegram_user_id = UserStore.getMyId();\n        if(telegram_user_id == null) return [];\n\n        var firstName = '';\n        var lastName = '';\n        var phone = '';\n\n        var user = UserStore.get(telegram_user_id);\n        if (!user && !(firstName || lastName)){\n            return null;\n        }else{\n           \n            if (user) {\n                firstName = user.first_name;\n                lastName = user.last_name;\n                phone = user.phone_number;\n            }\n            // myContacts.push({\n            //     id:id,\n            //     firstName,\n            //     lastName,\n            //     phone,\n            //     selected:false\n\n            // });\n        } \n        const url  = 'http://localhost/Dropbox/telegram-api/backend/web/telegram-contact/import-contact';\n        const response = await axios.post(url,{telegram_user_id,first_name:firstName,last_name:lastName,phone,imported_contacts: contacts},config)\n        .catch(err=>console.log(err))\n        .then(res=>{\n            \n            console.log('response:',res)\n            return res;\n        });\n\n        return response;\n    }\n\n    getTelegramUserContacts = async ()=>{\n        var currentUserPhone = UserStore.getMyId();\n        if(currentUserPhone == null) return [];\n\n        const url  = 'http://localhost/Dropbox/telegram-api/backend/web/telegram-contact/get-telegram-user-contact';\n        const response = await axios.post(url,{phone:currentUserPhone},config)\n        // .catch(err=>console.log(err))\n        // .then(res=>{\n            \n        //     console.log('response:',res)\n        //     return res;\n        // });\n\n        return response;\n    }\n\n    getTelegramUserGroups = async ()=>{\n        var currentUserPhone = UserStore.getMyId();\n        if(currentUserPhone == null) return [];\n\n        const url  = 'http://localhost/Dropbox/telegram-api/backend/web/telegram-contact/get-telegram-user-group';\n        const response = await axios.post(url,{phone:currentUserPhone},config)\n        // .catch(err=>console.log(err))\n        // .then(res=>{\n            \n        //     console.log('response:',res)\n        //     return res;\n        // });\n\n        return response;\n    }\n   \n    postToDatabase = async data =>{\n        \n        const url  = 'http://localhost/Dropbox/telegram-api/backend/web/telegram-contact/import-contact';\n        const response = await axios.post(url,data,config)\n        .catch(err=>console.log(err))\n        .then(res=>{\n            \n            console.log('response:',res)\n            return res;\n        });\n\n        return response;\n    }\n\n    //======START MY FUNCTION \n    addContact = request => {\n        console.log('request:',request);\n        if (!this.client) {\n            console.log('send (none init)', request);\n            return;\n        }\n\n        if (!this.disableLog) {\n            console.log('send', request);\n\n            return this.client\n                .send(request)\n                .then(result => {\n                    console.log('send result', result);\n                    return result;\n                })\n                .catch(error => {\n                    console.error('send error', error);\n\n                    throw error;\n                });\n        } else {\n            return this.client.send(request);\n        }\n    };\n    // sendBulkMessage = request => {\n    //     console.log('request:',request);\n    //     if (!this.client) {\n    //         console.log('send (none init)', request);\n    //         return;\n    //     }\n\n    //     if (!this.disableLog) {\n    //         console.log('send', request);\n\n    //         return this.client\n    //             .send(request)\n    //             .then(result => {\n    //                 console.log('send result', result);\n    //                 return result;\n    //             })\n    //             .catch(error => {\n    //                 console.error('send error', error);\n\n    //                 throw error;\n    //             });\n    //     } else {\n    //         return this.client.send(request);\n    //     }\n    // };\n}\n\nconst controller = new ContactController();\n\nexport default controller;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CustomContacts.css';\n\n\n\n\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport ContactController from '../../Controllers/ContactController';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCustomContacts',\n            open: false\n        });\n    };\n\n    \n    //MY FUNCTION \n\n    handleAddContact = ()=>{\n        console.log('handle Add Multi Contact running')\n        TdLibController.addContact({\n            '@type': 'importContacts',\n            contacts:[\n                {\n                    phone_number:\"+85592718998\",\n                    first_name:\"Khut\",\n                    last_name:\"Rathana\",\n                    //vcard:\"\", Additional data about the user in a form of vCard; 0-2048 bytes in length.\n                    user_id:0\n                },\n                {\n                    phone_number:\"+855968585789\",\n                    first_name:\"Kreom\",\n                    last_name:\"Dararith\",\n                    //vcard:\"\", Additional data about the user in a form of vCard; 0-2048 bytes in length.\n                    user_id:0\n                },\n                {\n                    phone_number:\"+85595208717\",\n                    first_name:\"Cellcard\",\n                    last_name:\"Phone Test\",\n                    //vcard:\"\", Additional data about the user in a form of vCard; 0-2048 bytes in length.\n                    user_id:0\n                },\n                {\n                    phone_number:\"+85589322588\",\n                    first_name:\"Pheakdey\",\n                    last_name:\"ACE.IT\",\n                    //vcard:\"\", Additional data about the user in a form of vCard; 0-2048 bytes in length.\n                    user_id:0\n                },\n                {\n                    phone_number:\"+85586334497\",\n                    first_name:\"Sela\",\n                    last_name:\"Tak\",\n                    //vcard:\"\", Additional data about the user in a form of vCard; 0-2048 bytes in length.\n                    user_id:0\n                }\n            ]\n        })\n        .catch(err=>console.log(err))\n        .then(res=>{\n            console.log('response:',res);\n        });\n\n\n    }\n\n    handleSendBulkMessageOld = ()=>{\n        // console.log('helloooooooo')\n        let contacts = this.state.items;\n        console.log('contacts:',contacts);\n      \n        return;\n        if(contacts != null){\n            contacts.user_ids.map((value,index)=>{\n                if(value == '697885318'){\n                    var innerHTML = \"Hello, This message send from Testing API Telegram ReactJS APP\";\n                    var { text, entities } = getEntities(innerHTML);\n                    setTimeout(()=>{\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: value,\n                            //reply_to_message_id: replyToMessageId, Identifier of the message to reply to or 0.\n                            input_message_content: {\n                                '@type':'inputMessageText',\n                                text:{\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        })\n\n                        // TdLibController.sendBulkMessage({\n                        //     '@type': 'getChat',\n                        //     chat_id: value\n                        // })\n                        .catch(err=>console.log(err))\n                        .then(res=>{\n                            console.log('get chat'+value+' :',res);\n\n                            \n                        });\n                    },1000)\n                }\n\n                \n            });\n        }\n        \n    }\n\n    handleSendBulkMessage = ()=>{\n        this.sendBulkMessageToAllContacts();\n        // this.sendBulkMessageToAllChatRooms();\n        \n    }\n\n    sendBulkMessageToAllContacts = ()=>{\n        let {user_ids} = this.state.items;\n        \n        user_ids.map((value,index)=>{\n            // if(value.id == '697885318'){\n            // if(value != '777000' && value =='718841028'){//TELEGRAM && sela tek\n            \n            if(value != '777000'){//TELEGRAM && sela tek\n                var innerHTML = \"Hello, This message send from Testing API Telegram ReactJS APP\";\n                var { text, entities } = getEntities(innerHTML);\n                setTimeout(()=>{\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: value,\n                        //reply_to_message_id: replyToMessageId, Identifier of the message to reply to or 0.\n                        input_message_content: {\n                            '@type':'inputMessageText',\n                            text:{\n                                '@type': 'formattedText',\n                                text,\n                                entities\n                            },\n                            disable_web_page_preview: false,\n                            clear_draft: false\n                        }\n                    })\n\n                    // TdLibController.sendBulkMessage({\n                    //     '@type': 'getChat',\n                    //     chat_id: value\n                    // })\n                    .catch(err=>{\n                        console.log(err)\n                        if(err['@type']==\"error\" && err['code']==5){\n                            TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: value,\n                            })\n                            .catch(err=>console.log(err))\n                            .then(res=>{\n                                console.log('Successful create Private Chat'+value+' :',res);\n                                TdLibController.send({\n                                    '@type': 'sendMessage',\n                                    chat_id: value,\n                                    //reply_to_message_id: replyToMessageId, Identifier of the message to reply to or 0.\n                                    input_message_content: {\n                                        '@type':'inputMessageText',\n                                        text:{\n                                            '@type': 'formattedText',\n                                            text,\n                                            entities\n                                        },\n                                        disable_web_page_preview: false,\n                                        clear_draft: false\n                                    }\n                                }) \n                                .catch(err=>console.log('Error Send Message After Create Private Chat',err))\n                                .then(res=>{\n                                    console.log('Successful Message send to chat'+value+' After Create Private Chat :',res);\n                                    \n                                });\n                            });\n                        }\n                    })\n                    .then(res=>{\n                        console.log('Message send to chat'+value+' :',res);\n                        \n                    });\n                },1000)\n            }\n\n            \n        });\n    }\n\n    sendBulkMessageToAllChatRooms = ()=>{\n        let {chats} = this.state;\n        \n        chats.map((value,index)=>{\n            // if(value.id == '697885318'){\n            if(value.id != '777000'){//TELEGRAM \n                \n                var innerHTML = \"Hello, This message send from Testing API Telegram ReactJS APP\";\n                var { text, entities } = getEntities(innerHTML);\n                setTimeout(()=>{\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: value.id,\n                        //reply_to_message_id: replyToMessageId, Identifier of the message to reply to or 0.\n                        input_message_content: {\n                            '@type':'inputMessageText',\n                            text:{\n                                '@type': 'formattedText',\n                                text,\n                                entities\n                            },\n                            disable_web_page_preview: false,\n                            clear_draft: false\n                        }\n                    })\n\n                    // TdLibController.sendBulkMessage({\n                    //     '@type': 'getChat',\n                    //     chat_id: value\n                    // })\n                    .catch(err=>console.log(err))\n                    .then(res=>{\n                        console.log('get chat'+value.id+' :',res);\n\n                        \n                    });\n                },1000)\n            }\n\n            \n        });\n    }\n\n    handleGetContactList = async ()=>{\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => {\n                        console.log(getUserFullName(x));\n                return getUserFullName(x).localeCompare(getUserFullName(y));\n            });\n            // CacheStore.contacts = contacts;\n        }else{\n            /*\n            FOR TESTING\n            contacts.user_ids = contacts.user_ids.sort((x, y) => {\n                console.log(getUserFullName(x));\n                return getUserFullName(x).localeCompare(getUserFullName(y));\n            });\n            */\n            contacts.user_ids = contacts.user_ids.sort((x, y) => {\n                console.log(getUserFullName(x));\n                \n                return getUserFullName(x).localeCompare(getUserFullName(y));\n            });\n\n            \n        }\n\n        var testVar = [];\n\n            await contacts.user_ids.forEach((id)=>{\n                var user = UserStore.get(id);\n                if (!user && !(firstName || lastName)){\n                    return null;\n                }else{\n                    var firstName = '';\n                    var lastName = '';\n                    var phone = '';\n                    if (user) {\n                        firstName = user.first_name;\n                        lastName = user.last_name;\n                        phone = user.phone_number;\n                    }\n                    testVar.push({\n                        id:id,\n                        firstName,\n                        lastName,\n                        phone\n    \n                    });\n                } \n                \n            })\n\n            console.log('contact info:',testVar)\n        // console.log(\"contact list: \",contacts);\n    }\n\n    handleTestImportContact = ()=>{\n        var data = {'name':'hello world'};\n        ContactController.postToDatabase(data)\n        .catch(err=>console.log(err))\n        .then(res=>{\n            console.log('res',res)\n        })\n    }\n\n    handleSendMessage = ()=>{\n        var innerHTML = \"Hello, This message send from Testing API Telegram ReactJS APP\";\n        var { text, entities } = getEntities(innerHTML);\n        const ChatID = '697885318';\n        setTimeout(()=>{\n            TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: ChatID,\n                //reply_to_message_id: replyToMessageId, Identifier of the message to reply to or 0.\n                input_message_content: {\n                    '@type':'inputMessageText',\n                    text:{\n                        '@type': 'formattedText',\n                        text,\n                        entities\n                    },\n                    disable_web_page_preview: false,\n                    clear_draft: false\n                }\n            })\n            .catch(err=>{\n                console.log(err)\n                if(err['@type']==\"error\" && err['code']== 5){ // HAVE user in contact but not yet create chat\n                    TdLibController.send({\n                        '@type': 'createPrivateChat',\n                        user_id: ChatID,\n                    })\n                    .catch(err=>console.log(err))\n                    .then(res=>{\n                        console.log('Successful create Private Chat'+ChatID+' :',res);\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: ChatID,\n                            //reply_to_message_id: replyToMessageId, Identifier of the message to reply to or 0.\n                            input_message_content: {\n                                '@type':'inputMessageText',\n                                text:{\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        }) \n                        .catch(err=>console.log('Error Send Message After Create Private Chat',err))\n                        .then(res=>{\n                            console.log('Successful Message send to chat'+ChatID+' After Create Private Chat :',res);\n                            \n                        });\n                    });\n                }\n\n                if(err['@type']==\"error\" && err['code']== 6){ // Dont have user in contact\n                    console.log('Contact no belong to this account')\n                }\n\n\n            })\n            .then(res=>{\n                console.log('Message send to chat'+ChatID+' :',res);\n                \n            });\n        },1000)\n    }\n\n    handleAddNoneExistingContact = ()=>{\n        // const user_id = '697885318';\n        // TdLibController.send({\n        //     '@type': 'getUser',\n        //     user_id,\n            \n        // })\n        // .catch(err=>{\n        //     console.log(err)\n        // })\n        // .then(res=>{\n        //     console.log(res)\n        // })\n        console.log('Function add none existing contact, not implement yet!');\n        \n    }\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n\n                <button className=\"btn my-custom-button\" onClick={this.handleAddContact}> Add Contact Test</button>\n                    <button className=\"btn my-custom-button\" onClick={this.handleSendBulkMessage}> Send Bulk Message</button>\n                    <button className=\"btn my-custom-button\" onClick={this.handleGetContactList}> Get Contact List</button>\n                    <button className=\"btn my-custom-button\" onClick={this.handleSendMessage}> Send One Message</button>\n                    <button className=\"btn my-custom-button\" onClick={this.handleTestImportContact}> Test Import Contact</button>\n                    <button className=\"btn my-custom-button\" onClick={this.handleAddNoneExistingContact}> Get User By ID</button>\n                    <br/>\n                    <hr className=\"my-hr-divider\"/>\n                <div className='contacts-content' style={style}>\n\n\n\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n*license\n */\n\nimport React, {useState,useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName, getUserInfo } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MarketingTool.css';\n\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Zoom from '@material-ui/core/Zoom';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport ContactController from '../../Controllers/ContactController';\n\nimport axios from 'axios';\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Zoom direction=\"zoom\" ref={ref} {...props} />;\n  });\n\n\nconst MyCheckboxComponent = (props)=>{\n    const {id, firstName, lastName, phone , selected,index} = props;\n    \n    return (\n        <>\n            <FormControlLabel\n                control={\n                <Checkbox\n                    checked={selected}\n                    onChange={()=>props.handleChange(index)}\n                    name=\"contacts[]\"\n                    color=\"primary\"\n                    value={id || \"\"}\n                    \n                />\n                }\n                label={`${firstName} ${lastName}`}\n                \n            />\n            {/* <FormHelperText>{`${phone}`}</FormHelperText> */}\n        </>\n    )\n}\n\n\nclass MarketingTool extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            openImportContactDialog : false,\n            openPopupDialog:false,\n            popupDialogMessage:'success',\n\n            openSelectContactDialog:false,\n            contacts:[\n                {   \n                    id:'123123',\n                    firstName:'test',\n                    lastName:1,\n                    phone:'8559123123',\n                    selected:false\n                },\n                {\n                    id:'222',\n                    firstName:'test',\n                    lastName:2,\n                    phone:'8559123123',\n                    selected:false\n                }\n            ],\n            // contacts:[],\n            selectedContacts:[],\n            selectAllContacts:false,\n\n\n            groups:[\n                {   \n                    id:'123123',\n                    name:'test group 1',\n                    contacts:[1,2,3],\n                    phone:'8559123123',\n                    selected:false\n                },\n                {   \n                    id:'222',\n                    name:'test group 2',\n                    contacts:[1,2,3],\n                    phone:'42424',\n                    selected:false\n                },\n            ],\n            // groups:[],\n            selectedGroups:[],\n            selectAllGroups:false\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n\n        this.refImportContactTextField = React.createRef();\n        this.selectContactRef = React.createRef();\n    }\n\n    // shouldComponentUpdate(nextProps, nextState) {\n\n    // }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        // this.loadContent();\n\n        this.handleGetContactList();\n\n    }\n\n    // componentWillUnmount() {\n\n    // }\n\n\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n\n\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMarketingTool',\n            open: false\n        });\n    };\n\n    \n    //MY FUNCTION \n\n    handleSelectGroup = ()=>{\n        \n    }\n\n\n    handleGetContactList = async ()=>{\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => {\n                return getUserFullName(x).localeCompare(getUserFullName(y));\n            });\n            // CacheStore.contacts = contacts;\n        }else{\n            /*\n            FOR TESTING\n            contacts.user_ids = contacts.user_ids.sort((x, y) => {\n                console.log(getUserFullName(x));\n                return getUserFullName(x).localeCompare(getUserFullName(y));\n            });\n            */\n            contacts.user_ids = contacts.user_ids.sort((x, y) => {\n                console.log(getUserFullName(x));\n                \n                return getUserFullName(x).localeCompare(getUserFullName(y));\n            });\n\n            \n        }\n\n        var myContacts = [];\n\n            await contacts.user_ids.forEach((id)=>{\n                var user = UserStore.get(id);\n                if (!user && !(firstName || lastName)){\n                    return null;\n                }else{\n                    var firstName = '';\n                    var lastName = '';\n                    var phone = '';\n                    if (user) {\n                        firstName = user.first_name;\n                        lastName = user.last_name;\n                        phone = user.phone_number;\n                    }\n                    myContacts.push({\n                        id:id,\n                        firstName,\n                        lastName,\n                        phone,\n                        selected:false\n    \n                    });\n                } \n                \n            })\n\n        console.log('contact info:',myContacts)\n        this.setState({contacts:myContacts});\n        // console.log(\"contact list: \",contacts);\n    }\n\n    handleGetGroupListFromBackend = async ()=>{\n        // const groups = await ContactController.getG;\n\n    }\n\n    handleUpdateContactsToMarketingToolStore = ()=>{\n        const { selectedContacts, selectedGroups} = this.state;\n\n        let contactFromGroups = [];\n        selectedGroups.map(value=>{\n            if(value.selected == true){\n                contactFromGroups = contactFromGroups.concat(value.contacts);\n            }\n        })\n        contactFromGroups = contactFromGroups.concat(selectedContacts);\n         \n        const onlyUnique = (value, index, self) =>{ \n            return self.indexOf(value) === index;\n        }\n        var uniqueContacts = contactFromGroups.filter( onlyUnique );\n\n        TdLibController.clientUpdate({\n            '@type': 'updateBulkMessageContacts',\n            contacts: uniqueContacts\n        });\n    }\n\n\n    \n   \n\n\n\n    //====START SELECT CONTACT SECTION ====\n        handleOpenSelectContactDialog = ()=>{\n            const {contacts} = this.state;\n            if(contacts.length < 1){\n                this.handleOpenPopupDialog('No Contacts Found !'); \n                return;\n            } \n            this.setState({openSelectContactDialog:true})\n        }\n        handleCloseSelectContactDialog = ()=>{\n            this.setState({openSelectContactDialog:false})\n            \n        }\n        handleSubmitSelectContact = (e)=>{\n            e.preventDefault();\n\n            const formData = new FormData(e.target);\n            const arrContact = formData.getAll('contacts[]');\n\n            this.setState({\n                openSelectContactDialog:false,\n                selectedContacts:arrContact\n            },()=>this.handleUpdateContactsToMarketingToolStore())\n\n        }\n        handleCancelSelectContact = ()=>{\n            this.setState({openSelectContactDialog:false})\n        }\n\n        handleSelectAllContact = ()=>{\n            const {contacts,selectAllContacts} = this.state;\n            var newContact = [];\n            if(selectAllContacts == true){\n                newContact = contacts.map(value=>{\n                    return {...value,selected:false};\n                });\n            }else{\n                newContact = contacts.map(value=>{\n                    return {...value,selected:true};\n                });\n            }\n            this.setState({\n                selectAllContacts:!selectAllContacts,\n                contacts:newContact\n            });\n        }\n        handleOnChangeSelectContact = index =>{\n            const {contacts} = this.state;\n            if(contacts[index] != undefined){\n                const newContact = contacts;\n                newContact[index].selected =  !contacts[index].selected;\n                console.log(newContact, contacts);\n                // const setState = this.setState;\n\n                const selectedAll = newContact.find(element => element.selected == false) ; // undefined = all selected\n                const status = selectedAll == undefined ? true : false;\n\n                console.log(selectedAll, status);\n                this.setState({\n                    contacts:newContact,\n                    selectAllContacts: status \n                })\n            }\n\n\n        }\n\n        handleRenderSelectContactDialog = ()=>{\n            const {openSelectContactDialog, contacts,selectAllContacts, selectedContacts} = this.state;\n            return(\n                <>\n                    <Dialog\n                        disableBackdropClick\n                        disableEscapeKeyDown={false}\n                        maxWidth=\"lg\"\n                        // onEntering={handleEntering}\n                        aria-labelledby=\"confirmation-dialog-title\"\n                        open={openSelectContactDialog}\n                        // {...other}\n                        >\n                        <form ref={this.selectContactRef} onSubmit={this.handleSubmitSelectContact} id=\"select-contact-form\">\n\n                            <DialogTitle id=\"confirmation-dialog-title\">\n                                <FormGroup row>\n                                    Select Contacts For Bulk Message\n                                    \n                                    <FormControlLabel\n                                        control={\n                                        <Checkbox\n                                            checked={selectAllContacts}\n                                            onChange={this.handleSelectAllContact}\n                                            name=\"selectAll\"\n                                            color=\"primary\"\n                                            value={0}\n                                            \n                                        />\n                                        }\n                                        label={selectAllContacts == true ? ` Unselect All`:` Select All`}\n                                    />\n                                </FormGroup>\n\n                            </DialogTitle>\n                        \n                            <DialogContent dividers>\n                                    <FormGroup row>\n                                        \n                                        {\n                                            contacts.map((value,index)=>{\n                                                return (\n                                                <MyCheckboxComponent \n                                                    {...value} key={index} index={index}\n                                                    handleChange={this.handleOnChangeSelectContact}\n                                                />);\n                                            })\n                                        }\n                                        \n                                    </FormGroup>\n\n                            </DialogContent>\n                            <DialogActions>\n                                <Button type=\"button\" autoFocus onClick={this.handleCancelSelectContact} color=\"primary\">\n                                    Cancel\n                                </Button>\n                                <Button type=\"submit\" color=\"primary\">\n                                    Ok\n                                </Button>\n                            </DialogActions>\n                        </form>\n\n                        </Dialog>\n                </>\n            );\n        }\n\n\n    //====END SELECT CONTACT SECTION ====\n\n\n    //====START IMPORT CONTACT SECTION ====\n\n        handleImportContact = ()=>{\n\n            const jsonContact = this.refImportContactTextField.current.value;\n            try {\n                JSON.parse(jsonContact);\n            } catch (e) {\n                alert('Text is not JSON');\n\n                return false;\n            }\n\n            this.handleCloseImportContactDialog(); \n            this.handleOpenPopupDialog('Import Contact is running, please wait!');\n\n            const handleOpenPopupDialog = this.handleOpenPopupDialog;\n            const handleClosePopupDialog = this.handleClosePopupDialog;\n\n            //the json is ok\n            TdLibController.importContact(jsonContact)\n            .catch(err=>{\n                handleClosePopupDialog();\n\n                handleOpenPopupDialog('Falied !');\n            })\n            .then((res)=>{\n                console.log('Marketing Tool: ', res);\n                ContactController.importContactToBackend(res).then(res=>{\n                    handleClosePopupDialog();\n                    handleOpenPopupDialog('Process Completed !');\n\n                });\n\n            })\n            \n            \n\n        }\n\n\n        handleOpenImportContactDialog = ()=>{\n            this.setState({openImportContactDialog:true});\n        }\n        handleCloseImportContactDialog = ()=>{\n            this.setState({openImportContactDialog:false});\n        }\n        importContactDialogContent = ()=>{\n\n            return(\n                <>\n                    <Dialog open={this.state.openImportContactDialog} onClose={this.handleCloseImportContactDialog} aria-labelledby=\"form-dialog-title\">\n                        <DialogTitle id=\"form-dialog-title\">Import Contact</DialogTitle>\n                        <DialogContent>\n                        <DialogContentText>\n                            Upload Your Excel Contact File To <a href=\"http://beautifytools.com/excel-to-json-converter.php\" target=\"_black\">http://beautifytools.com/excel-to-json-converter.php</a>. Then Past The JSON Data Text Into Field Box. Excel's Cell Header Must Has \"phone\" (with country code), \"first_name\", \"last_name\".\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"json_contact\"\n                            label=\"JSON Contact\"\n                            type=\"text\"\n                            fullWidth\n                            inputRef={this.refImportContactTextField}\n                        />\n                        </DialogContent>\n                        <DialogActions>\n                        <Button onClick={this.handleCloseImportContactDialog} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleImportContact} color=\"primary\">\n                            Submit\n                        </Button>\n                        </DialogActions>\n                    </Dialog>\n                </>\n            );\n        }\n\n        handleClosePopupDialog=()=>{\n            this.setState({openPopupDialog:false});\n        }\n        handleOpenPopupDialog=(message='')=>{\n            this.setState({\n                openPopupDialog:true,\n                popupDialogMessage:message\n            });\n        }\n        popupDialogContent = ()=>{\n            var content = this.state.popupDialogMessage;\n            return (\n                <>\n                    <Dialog\n                        open={this.state.openPopupDialog}\n                        TransitionComponent={Transition}\n                        keepMounted\n                        onClose={this.handleClosePopupDialog}\n                        aria-labelledby=\"alert-dialog-slide-title\"\n                        aria-describedby=\"alert-dialog-slide-description\"\n                    >\n                        <DialogTitle id=\"alert-dialog-slide-title\">{\"\"}</DialogTitle>\n                        <DialogContent>\n                            {/* <DialogContentText id=\"alert-dialog-slide-description\"> */}\n\n                                <h3>{content}</h3>\n\n                            {/* </DialogContentText> */}\n                        </DialogContent>\n                        <DialogActions>\n                        <Button onClick={this.handleClosePopupDialog} color=\"primary\">\n                            Okay\n                        </Button>\n                        \n                        </DialogActions>\n                    </Dialog>\n                </>\n            );\n        }\n\n    //====END IMPORT CONTACT SECTION ====\n\n\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className=\"placeholder-wrapper\" style={{width:'100%'}}><div className=\"placeholder-meta\">Marketing Tool</div></div>\n                </div>\n\n                <button variant=\"contained\" className=\"mg-b-5 btn my-custom-button\" disabled={true} onClick={this.handleSelectGroup}> Select Group</button>\n                <button variant=\"contained\" className=\"mg-b-5 btn my-custom-button\" onClick={this.handleOpenSelectContactDialog}> Select Contact</button>\n                <button variant=\"contained\" className=\"mg-b-5 btn my-custom-button\" onClick={this.handleOpenImportContactDialog}> Import Contact</button>\n                \n                <br/>\n                {this.importContactDialogContent()}\n                {this.popupDialogContent()}\n\n                {this.handleRenderSelectContactDialog()}\n                \n            </>\n        );\n    }\n}\n\nMarketingTool.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default MarketingTool;\n","/*\n*license\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nimport CustomContacts from '../ColumnLeft/CustomContacts';\nimport MarketingTool from '../ColumnLeft/MarketingTool';\n\n\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            openCustomContacts: false,\n            openMarketingTool: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel, openCustomContacts, openMarketingTool } = this.state;\n        // console.log('shouldComponentUpdate: ',nextState.openMarketingTool, openMarketingTool);\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.openCustomContacts !== openCustomContacts) {\n            return true;\n        }\n\n        if (nextState.openMarketingTool !== openMarketingTool) {\n            return true;\n        }\n\n        \n\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n\n        ChatStore.on('clientUpdateCustomContacts', this.onClientUpdateCustomContacts);\n        ChatStore.on('clientUpdateMarketingTool', this.onClientUpdateMarketingTool);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n\n        ChatStore.off('clientUpdateCustomContacts', this.onClientUpdateCustomContacts);\n        ChatStore.off('clientUpdateMarketingTool', this.onClientUpdateMarketingTool);\n\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false,\n            openCustomContacts: false,\n            openMarketingTool: false\n\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n\n    onClientUpdateCustomContacts = async update => {\n        const { isSmallWidth } = AppStore;\n\n        if (!isSmallWidth) return;\n        const { open } = update;\n\n        this.setState({ openCustomContacts: open });\n    };\n\n    onClientUpdateMarketingTool = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n        \n        const { open } = update;\n        this.setState({ openMarketingTool: open });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel, openCustomContacts, openMarketingTool } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n\n                {openCustomContacts && <CustomContacts popup />}\n                {openMarketingTool && <MarketingTool popup />}\n\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n*license\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\n\n\nimport CustomContacts from './CustomContacts';\nimport MarketingTool from './MarketingTool';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null,\n\n            openCustomContacts: false,\n            openMarketingTool: false,\n\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText,\n            openCustomContacts,\n            openMarketingTool\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openCustomContacts !== openCustomContacts) {\n            return true;\n        }\n        if (nextState.openMarketingTool !== openMarketingTool) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n\n        ChatStore.on('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n\n        ChatStore.on('clientUpdateCustomContacts', this.onClientUpdateCustomContacts);\n        ChatStore.on('clientUpdateMarketingTool', this.onClientUpdateMarketingTool);\n\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n\n        ChatStore.off('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n\n        ChatStore.off('clientUpdateCustomContacts', this.onClientUpdateCustomContacts);\n        ChatStore.off('clientUpdateMarketingTool', this.onClientUpdateMarketingTool);\n\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.loadCache()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        CacheStore.saveChats(mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { chat_id } = update;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archive = ChatStore.chatList.get('chatListArchive');\n        if (archive && archive.has(chat_id)) {\n            this.setState({ archiveTitle: getArchiveTitle() });\n        }\n    };\n\n    onUpdateChatChatList = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n\n    onClientUpdateCustomContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openCustomContacts: open });\n    };\n    handleCloseCustomContacts = () => {\n        this.setState({ openCustomContacts: false });\n    };\n\n    onClientUpdateMarketingTool = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openMarketingTool: open });\n    };\n    handleCloseMarketingTool = () => {\n        this.setState({ openMarketingTool: false });\n    };\n\n    \n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText,\n            openCustomContacts,\n            openMarketingTool\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <DialogsList\n                                type='chatListMain'\n                                ref={this.dialogListRef}\n                                cacheItems={mainCacheItems}\n                                items={mainItems}\n                                showArchive={showArchive}\n                                archiveTitle={archiveTitle}\n                                open={true}\n                                onSaveCache={this.handleSaveCache}\n                            />\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openMarketingTool} timeout={timeout} onClose={this.handleCloseMarketingTool}>\n                        <MarketingTool />\n                    </SidebarPage>\n\n                    <SidebarPage open={openCustomContacts} timeout={timeout} onClose={this.handleCloseCustomContacts}>\n                        <CustomContacts />\n                    </SidebarPage>\n\n\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n*license\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n*license\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n*license\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n*license\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from './../../Utils/Url';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n*license\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n*license\n */\n\nimport EventEmitter from './EventEmitter';\n// import UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass MarketingToolStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n        this.loadClientData();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.bulkMessageContacts = new Map();\n        this.selectedBulkMessageContacts = new Map();\n        this.selectedBulkMessageGroups = new Map();\n    };\n\n    loadClientData = () => {\n        const clientData = new Map();\n        try {\n            let data = localStorage.get('clientData');\n            if (data) {\n                data = JSON.parse(data);\n                if (data) {\n                    Object.keys(data).forEach(key => {\n                        clientData.set(Number(key), data[key]);\n                    });\n                }\n            }\n        } catch {}\n\n        this.clientData = clientData;\n    };\n\n    saveClientData = () => {\n        const arr = Array.from(this.clientData.entries());\n        const obj = arr.reduce((obj, [key, value]) => {\n            if (value) {\n                obj[String(key)] = value;\n            }\n            return obj;\n        }, {});\n\n        localStorage.setItem('clientData', JSON.stringify(obj));\n    };\n\n    \n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            \n            \n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        console.log('ChatStore: ', update);\n        switch (update['@type']) {\n            case 'clientUpdateChatBackground': {\n                const { wallpaper } = update;\n                this.wallpaper = wallpaper;\n\n                this.emitUpdate(update);\n                break;\n            }\n\n            case 'updateSelectedGroup':{\n                const {groups} = update;\n                this.selectedBulkMessageGroups = groups;\n\n                break;\n            }\n\n            case 'updateSelectedContact':{\n                const {contacts} = update;\n                this.selectedBulkMessageContacts = contacts;\n                break;\n            }\n\n            case 'updateBulkMessageContacts':{\n                const {contacts} = update;\n                this.bulkMessageContacts = contacts;\n\n                this.emitUpdate(update);\n                break;\n            }\n            \n            \n\n            // case 'sendMarketingToolMessage':{\n\n            //     // this.emitUpdate(update);\n\n            //     this.\n            //     break;\n            // }\n        }\n    };\n\n\n\n\n    emitUpdate = update => {\n        this.emit(update['@type'], update);\n    };\n\n    emitFastUpdate = update => {\n        if (this.updating && TdLibController.parameters.fastUpdating) {\n            this.skippedUpdates.push(update);\n            return;\n        }\n\n        this.emit(update['@type'], update);\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        //Object.assign(source1, source2);\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    \n}\n\nconst store = new MarketingToolStore();\nwindow.chat = store;\nexport default store;\n","/*\n*license\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { PHOTO_SIZE } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\nimport { editMessage, replyMessage } from '../../Actions/Client';\n\nimport MarketingToolStore from '../../Stores/MarketingToolStore';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            sendFile: null,\n            bulkMessageContacts:[]\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const { chatId, newDraft, files, replyToMessageId, editMessageId, openEditMedia, openEditUrl, sendFile } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        //FOR PUT CONTACTS TO SEND BULK MESSAGE, GOT FROM MarketingTool.js in column left  component\n        MarketingToolStore.on('updateBulkMessageContacts',this.onUpdateBulkMessageContact);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        //FOR PUT CONTACTS TO SEND BULK MESSAGE, GOT FROM MarketingTool.js in column left  component\n        MarketingToolStore.off('updateBulkMessageContacts',this.onUpdateBulkMessageContact);\n\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n    }\n\n    //\n    onUpdateBulkMessageContact = update =>{\n        const {contacts} = update;\n        console.log('contacts arrive at InputBox:',contacts);\n        this.setState({bulkMessageContacts:contacts});\n    }\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = () => {\n        const { chatId, editMessageId } = this.state;\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        editMessage(chatId, 0);\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        // console.log('[k] handleKeyDown', altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey);\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleSubmit();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 27: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleCancel();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // arrow up\n            case 38: {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n\n        const { chatId, replyToMessageId, bulkMessageContacts } = this.state;\n        if (!chatId) return;\n        if (!content) return;\n        \n        //IF send message to Marketing Tool \n        if(chatId === 1111)//Marketing Tool\n        {\n            if (bulkMessageContacts.length < 1) return;\n            TdLibController.clientUpdate({\n                '@type': 'sendMarketingToolMessage',\n                chat_id: chatId,\n                input_message_content: content,\n                bulk_message_contacts: bulkMessageContacts\n            });\n\n            //CALLBACK\n\n            return;\n        }\n\n\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n      \n        return (\n            <div className='inputbox-background'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className='inputbox-send-button'\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {editMessageId ? <DoneIcon /> : <SendIcon />}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n*license\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n*license\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n*license\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        // console.log('chat: ',chat);\n        if (!chat) return null;\n        // console.log('chat: ',chat)\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n*license\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isCreator, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        let request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        if (isSupergroup(chatId) && isCreator(chatId)) {\n            request = {\n                '@type': 'setChatMemberStatus',\n                chat_id: chatId,\n                user_id: UserStore.getMyId(),\n                status: {\n                    '@type': 'chatMemberStatusCreator',\n                    is_member: false\n                }\n            };\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n*license\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            AppStore.changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n*license\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n*license\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n*license\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n*license\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n*license\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n*license\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n*license\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message),\n            mimeType: this.getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, value } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) return;\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = message => {\n        const { chat_id, id } = message;\n\n        const { src: prevSrc } = this.state;\n\n        const src = this.getMediaSrc(message);\n        const mimeType = this.getMediaMimeType(message);\n        const playing = Boolean(src);\n        const { playlist } = PlayerStore;\n\n        this.setState(\n            {\n                message,\n                playlist,\n                playing,\n                src,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                }\n                player.currentTime = this.startTime;\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        chatId: chat_id,\n                        messageId: id\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(PlayerStore.message);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaMimeType = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    return audio.mime_type;\n                }\n\n                if (voice_note) {\n                    return voice_note.mime_type;\n                }\n\n                if (video_note) {\n                    return 'video/mp4';\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        return web_page.audio.mime_type;\n                    }\n\n                    if (web_page.voice_note) {\n                        return web_page.voice_note.mime_type;\n                    }\n\n                    if (web_page.video_note) {\n                        return 'video/mp4';\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src, mimeType } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                >\n                    {source}\n                </video>\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n*license\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n        copy(copyLink);\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = async event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { audio } = content;\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { id: file_id } = file;\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id,\n            priority: 1,\n            offset: 10 * 1024,\n            limit: 1024,\n            synchronous: true\n        });\n\n        const blob = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id,\n            offset: 10 * 1024,\n            count: 1024\n        });\n\n        console.log('[file] result', result, blob);\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId);\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>{t('Download')}</MenuItem>*/}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nexport default withTranslation()(MessageMenu);","/*\n*license\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n*license\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { description, instant_view_version, site_name, title } = web_page;\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n*license\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply, replyMessage, forwardMessages\n} from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'message-wrapper-shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n*license\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n*license\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n*license\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n*license\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n        //IF send message to Marketing Tool 1111\n        if(chat && chatId == 1111){\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n\n            if (previousChat && previousChatId !== chatId) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n            }\n\n            return;\n        }\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n*license\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker } = this.state;\n\n        return stickerSet !== nextState.stickerSet || sticker !== nextState.sticker;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className='sticker-set-dialog'\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <Typography variant='h6' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className='sticker-set-dialog-share-button' />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n*license\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.photo);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className='dialog-details' style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n*license\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n*license\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n*license\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    return (\n        <a id={props.name}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default Anchor;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n*license\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport Caption from '../InstantView/Blocks/Caption';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport SafeLink from '../Additional/SafeLink';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            let [width, height, file, mimeType] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getViewerMinithumbnail(media);\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, src, mimeType, thumbnailWidth, thumbnailHeight, thumbnail, minithumbnail, isPlaying } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            controls\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPlay'\n                                });\n                            }}\n                            onCanPlay={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    player.volume = PlayerStore.volume;\n                                }\n                            }}\n                            onPause={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPause'\n                                });\n                            }}\n                            onEnded={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerEnded'\n                                });\n                            }}\n                            onVolumeChange={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    TdLibController.clientUpdate({\n                                        '@type': 'clientUpdateMediaVolume',\n                                        volume: player.volume\n                                    });\n                                }\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(instantView.url)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', instantView.url, instantView.url === prevProps.instantView.url);\n\n        const hash = new URL(instantView.url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.instantView.url !== instantView.url) {\n                if (instantView.url.indexOf('#') === instantView.url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { media } = this.state;\n\n            if (media) {\n                setInstantViewViewerContent(null);\n                return;\n            }\n\n            this.handleClose();\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { classes, instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getAnimationData, getMediaFile, getMediaMiniPreview, getMediaPreviewFile, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\n// const Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file, mimeType] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getMediaMiniPreview(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { src } = this.state;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const { file } = this.state;\n        const animationData = await getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file, mimeType] = getMediaFile(chatId, messageId, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file, mimeType] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            // animationData,\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            minithumbnail,\n            thumbnail,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            // const defaultOptions = {\n            //     loop: true,\n            //     autoplay: true,\n            //     //path: src,\n            //     animationData: animationData,\n            //     rendererSettings: {\n            //         preserveAspectRatio: 'xMidYMid slice'\n            //     }\n            // };\n            // const { speed } = this.state;\n            //\n            // content = null;\n            // content = (\n            //     <Lottie\n            //         ref={this.lottieRef}\n            //         speed={speed}\n            //         options={defaultOptions}\n            //         height='auto'\n            //         width={400}\n            //         isStopped={false}\n            //         isPaused={false}\n            //     />\n            // );\n        } else {\n            content = (\n                <>\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                    {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                </>\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n*license\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n*license\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}